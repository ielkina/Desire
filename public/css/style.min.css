@import url(https://fonts.googleapis.com/css?family=Open+Sans:300,regular,500,600,700,800,300italic,italic,500italic,600italic,700italic,800italic&display=swap);

@import url(https://fonts.googleapis.com/css?family=Montserrat:100,200,300,regular,500,600,700,800,900,100italic,200italic,300italic,italic,500italic,600italic,700italic,800italic,900italic&display=swap);

body {
  font-family: "Open Sans",sans-serif;
  font-weight: 400;
  line-height: 27px;
}

html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

*,
::after,
::before {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
}

ol[class],
ul[class] {
  padding: 0;
}

blockquote,
body,
dd,
dl,
figcaption,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
li,
ol,
p,
ul {
  margin: 0;
  font-size: inherit;
}

ul[class] {
  list-style: none;
}

img {
  max-width: 100%;
  display: block;
}

button,
input,
select,
textarea {
  font: inherit;
}

a {
  text-decoration: none;
}

body,
html {
  height: 100%;
  color: #5a5a5a;
}

.wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 100%;
}

.main {
  -webkit-box-flex: 1;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}

.footer {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.container {
  max-width: 1140px;
  margin: 0 auto;
  padding: 0 15px;
}

.header__inner {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 120px;
}

.header__btn {
  background: transparent;
  border: 0;
  padding: 0;
  cursor: pointer;
}

.logo {
  margin: 0 auto;
}

.menu {
  padding-right: 15px;
}

.menu__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.menu__list-item {
  padding-left: 35px;
  padding-right: 45px;
}

.menu__list-link {
  color: rgba(54,56,56,.9019607843);
  line-height: 22px;
}

.footer__info-title,
.menu__list-link {
  font-family: "Montserrat";
  font-weight: 700;
}

.footer__content {
  background: #dfdfdf;
  padding: 60px 0 80px;
}

.footer__inner {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.footer__info {
  width: 540px;
}

.footer__info-title {
  color: #363838;
  margin-bottom: 14px;
  line-height: 23px;
}

.footer__info-text {
  margin-bottom: 16px;
  line-height: 27px;
  max-width: 475px;
}

.footer__info-email {
  font-weight: 600;
  font-size: 14px;
  color: #363838;
  margin-bottom: 22px;
  padding-left: 30px;
  display: inline-block;
}

.footer__form-input {
  background: #dfdfdf;
  color: #a1a1a1;
  width: 368px;
  height: 40px;
  border-radius: 21px;
  border: 1px solid #383636;
  mix-blend-mode: normal;
  opacity: .7;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  text-align: center;
}

.footer__form-button {
  background: #363838;
  border-radius: 21px;
  color: ivory;
  width: 160px;
  height: 40px;
}

.footer__copyring {
  background: #363838;
  color: #a1a1a1;
  text-align: center;
  padding: 42px 0 41px;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */