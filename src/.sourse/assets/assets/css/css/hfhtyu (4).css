*{-webkit-box-sizing:border-box;box-sizing:border-box}body{font:22px/1.5 Arial;color:red}.title{text-transform:uppercase;color:#dbd80a}.news{list-style:none;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (max-width:700px){body{color:#0ff;background-color:#f07b0e}.news,.title{text-align:center;color:#0ff;background-color:#8a2be2}.news{display:block}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2NrL3RpdGxlLmNzcyIsIm1haW4ubWluLmNzcyIsIm1haW4uY3NzIiwiYmxvY2svbmV3cy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsQyxDQUNFLDZCLENDQ0EscUIsQ0FHRixJLENEQUUsbUIsQ0FDQSxTLENDSUYsTSxDREFBLHdCLENFQ0UsYSxDRElGLEssQ0VaQSxlLENGY0UsUyxDRVpGLG1CLENBQ0UsbUIsQ0FDQSxZLENBQ0Ysd0IsQ0FDQSxxQixDQUNFLDZCLENGdUJGLHlCQ0RFLEksQ0FBQSxVLENBQ0Esd0IsQ0RZQSxLLENDWEYsTSxDQUNBLGlCLENBQ0UsVSxDQUNFLHdCLENEUUYsSyxDQ0RGLGUiLCJmaWxlIjoibWFpbi5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRpdGxlIHtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGNvbG9yOiByZ2IoMjE5LCAyMTYsIDEwKTtcclxufVxyXG5AbWVkaWEgKG1heC13aWR0aDogNzAwcHgpIHtcclxuICAudGl0bGUge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6IGFxdWE7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVldmlvbGV0O1xyXG4gIH1cclxufVxyXG4iLCIqIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5ib2R5IHtcbiAgZm9udDogMjJweC8xLjUgQXJpYWw7XG4gIGNvbG9yOiByZ2IoMjU1LCAwLCAwKTtcbn1cblxuLnRpdGxlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6IHJnYigyMTksIDIxNiwgMTApO1xufVxuXG4ubmV3cyB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4vKiBAaW1wb3J0IFwiYmxvY2svdGl0bGUuY3NzXCI7XHJcbkBpbXBvcnQgXCJibG9jay9uZXdzLmNzc1wiOyAqL1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gIGJvZHkge1xuICAgIGNvbG9yOiBhcXVhO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDAsIDEyMywgMTQpO1xuICB9XG5cbiAgLnRpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6IGFxdWE7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZXZpb2xldDtcbiAgfVxuXG4gIC5uZXdzIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6IGFxdWE7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZXZpb2xldDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cbn1cclxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1Kc2IyTnJMM1JwZEd4bExtTnpjeUlzSW0xaGFXNHVZM056SWl3aVlteHZZMnN2Ym1WM2N5NWpjM01pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1JVRkRSU3c0UWtGQmMwSTdWVUZCZEVJc2MwSkJRWE5DTzBGQlEzaENPMEZCUTBFN1JVRkRSU3h4UWtGQmNVSTdSVUZEY2tJc1pVRkJVenRGUVVOVUxHdENRVUZyUWp0RlFVTnNRaXhuUWtGQlpUdEJRVU5xUWpzN1FVRkZRVHRGUTBORk8wbERXRVVzVjBGQlNUdEpRVU5LTEcxRFFVRm5RanRGUVVOc1FqdEJRVU5HT3p0QlFVVkJPMFZCUTBVc2VVSkJRWGxDTzBWQlEzcENMSGRDUVVGUk8wRkJRMVk3UVVGRFFUdEZRVU5GTzBsQlEwVXNhMEpCUVdkQ08wbEJRMmhDTEZkQlFVRTdTVUZEU2l3MFFrRkJRVHRGUkdGRk8wRkJRMFk3TzBGQlJVRTdSVUZEUlN4blFrRkJaMEk3UlVGRGFFSXNWVUZCVlR0RlFVTldMRzlDUVVGaE8wVkJRV0lzYjBKQlFXRTdSVUZCWWl4aFFVRmhPMFZCUTJJc2VVSkJRVGhDTzAxQlFUbENMSE5DUVVFNFFqdFZRVUU1UWl3NFFrRkJPRUk3UVVGRGFFTTdRVUZEUVR0RlFVTkZPMGxCUTBVc2EwSkJRV3RDTzBsQlEyeENMRmRCUVZjN1NVRkRXQ3cwUWtGQk5FSTdTVUZETlVJc1kwRkJZenRGUVVOb1FqdEJRVU5HT3p0QlFVVkJPekpDUVVNeVFqczdRVUZGTTBJN08wRkJSVUU3TzBOQlJVTTdPMEZCUlVRN08wRkJSVUU3TzBGQlJVRWlMQ0ptYVd4bElqb2liV0ZwYmk1amMzTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl1ZEdsMGJHVWdlMXh5WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hISmNiaUFnWTI5c2IzSTZJSEpuWWlneU1Ua3NJREl4Tml3Z01UQXBPMXh5WEc1OVhISmNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUEzTURCd2VDa2dlMXh5WEc0Z0lDNTBhWFJzWlNCN1hISmNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hISmNiaUFnSUNCamIyeHZjam9nWVhGMVlUdGNjbHh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklHSnNkV1YyYVc5c1pYUTdYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JpSXNJaW9nZTF4eVhHNGdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hISmNibjFjY2x4dVltOWtlU0I3WEhKY2JpQWdZMjlzYjNJNklISm5ZaWd5TlRVc0lEQXNJREFwTzF4eVhHNGdJR1p2Ym5RdGMybDZaVG9nTWpKd2VEdGNjbHh1SUNCbWIyNTBMV1poYldsc2VUb2dRWEpwWVd3N1hISmNiaUFnYkdsdVpTMW9aV2xuYUhRNklERXVOVHRjY2x4dWZWeHlYRzVjY2x4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEY3dNSEI0S1NCN1hISmNiaUFnWW05a2VTQjdYSEpjYmlBZ0lDQmpiMnh2Y2pvZ1lYRjFZVHRjY2x4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSEpuWWlneU5EQXNJREV5TXl3Z01UUXBPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1TG5ScGRHeGxJSHRjY2x4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHlYRzRnSUdOdmJHOXlPaUJ5WjJJb01qRTVMQ0F5TVRZc0lERXdLVHRjY2x4dWZWeHlYRzVBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTnpBd2NIZ3BJSHRjY2x4dUlDQXVkR2wwYkdVZ2UxeHlYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHlYRzRnSUNBZ1kyOXNiM0k2SUdGeGRXRTdYSEpjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQmliSFZsZG1sdmJHVjBPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1TG01bGQzTWdlMXh5WEc0Z0lHeHBjM1F0YzNSNWJHVTZJRzV2Ym1VN1hISmNiaUFnY0dGa1pHbHVaem9nTUR0Y2NseHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzRnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nYzNCaFkyVXRZbVYwZDJWbGJqdGNjbHh1ZlZ4eVhHNUFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dOekF3Y0hncElIdGNjbHh1SUNBdWJtVjNjeUI3WEhKY2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEhKY2JpQWdJQ0JqYjJ4dmNqb2dZWEYxWVR0Y2NseHVJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUdKc2RXVjJhVzlzWlhRN1hISmNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjY2x4dUlDQjlYSEpjYm4xY2NseHVYSEpjYmk4cUlFQnBiWEJ2Y25RZ1hDSmliRzlqYXk5MGFYUnNaUzVqYzNOY0lqdGNjbHh1UUdsdGNHOXlkQ0JjSW1Kc2IyTnJMMjVsZDNNdVkzTnpYQ0k3SUNvdlhISmNibHh1UUhOMWNIQnZjblJ6SUNndGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNmJtOXVaU2w3WEc1Y2JuMWNibHh1SUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBM01EQndlQ2w3WEc1Y2JrQnpkWEJ3YjNKMGN5QW9MWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPbTV2Ym1VcGUxeHVYRzU5WEc1Y2JuMWNiaUlzSWk1dVpYZHpJSHRjY2x4dUlDQnNhWE4wTFhOMGVXeGxPaUJ1YjI1bE8xeHlYRzRnSUhCaFpHUnBibWM2SURBN1hISmNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNjbHh1SUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYSEpjYm4xY2NseHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRGN3TUhCNEtTQjdYSEpjYmlBZ0xtNWxkM01nZTF4eVhHNGdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4eVhHNGdJQ0FnWTI5c2IzSTZJR0Z4ZFdFN1hISmNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCaWJIVmxkbWx2YkdWME8xeHlYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEhKY2JpQWdmVnh5WEc1OUlsMTkgKi8iLCIqIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcbmJvZHkge1xyXG4gIGNvbG9yOiByZ2IoMjU1LCAwLCAwKTtcclxuICBmb250LXNpemU6IDIycHg7XHJcbiAgZm9udC1mYW1pbHk6IEFyaWFsO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA3MDBweCkge1xyXG4gIGJvZHkge1xyXG4gICAgY29sb3I6IGFxdWE7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQwLCAxMjMsIDE0KTtcclxuICB9XHJcbn1cclxuXHJcbi50aXRsZSB7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBjb2xvcjogcmdiKDIxOSwgMjE2LCAxMCk7XHJcbn1cclxuQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XHJcbiAgLnRpdGxlIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiBhcXVhO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZXZpb2xldDtcclxuICB9XHJcbn1cclxuXHJcbi5uZXdzIHtcclxuICBsaXN0LXN0eWxlOiBub25lO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XHJcbiAgLm5ld3Mge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6IGFxdWE7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVldmlvbGV0O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG59XHJcblxyXG4vKiBAaW1wb3J0IFwiYmxvY2svdGl0bGUuY3NzXCI7XHJcbkBpbXBvcnQgXCJibG9jay9uZXdzLmNzc1wiOyAqL1xyXG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbiBAbWVkaWEgKG1heC13aWR0aDogNzAwcHgpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG4iLCIubmV3cyB7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcbkBtZWRpYSAobWF4LXdpZHRoOiA3MDBweCkge1xyXG4gIC5uZXdzIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiBhcXVhO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZXZpb2xldDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxufSJdfQ== */