@import url(https://fonts.googleapis.com/css?family=Open+Sans:300,regular,500,600,700,800,300italic,italic,500italic,600italic,700italic,800italic&display=swap);@import url(https://fonts.googleapis.com/css?family=Montserrat:100,200,300,regular,500,600,700,800,900,100italic,200italic,300italic,italic,500italic,600italic,700italic,800italic,900italic&display=swap);@import "../../../node_modules/@fancyapps/fancybox/dist/jquery.fancybox.css";.footer__info-title{font-family:Monserat,sans-serif}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}img{max-width:100%;display:block}*,:after,:before{margin:0;border:0;padding:0}input,textarea{border-radius:0;outline:0}input,select,textarea{color:inherit;border:0}blockquote,dd,dl,figcaption,figure,h1,h2,h3,h4,h5,h6,li,p{margin:0;font-size:inherit}body,ol,ul{font-size:inherit}ol[class],ul[class]{list-style:none;padding:0}ol,picture,ul{padding:0;margin:0}picture{display:block;line-height:0}button,input,select,textarea{font:inherit}a,button{cursor:pointer;color:inherit}button{border:0;background-color:transparent}a{text-decoration:none;outline:0}body,html{height:100%;margin:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}main{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto}@font-face{font-family:OpenSans;src:url(../font/OpenSans-Regular.woff2) format("woff2"),url(../font/OpenSans-Regular.woff) format("woff");font-weight:400;font-display:swap;font-style:normal;font-stretch:normal;unicode-range:u+0020-2212}@font-face{font-family:Montserrat;src:url(../font/Montserrat-Bold.woff2) format("woff2"),url(../font/Montserrat-Bold.woff) format("woff");font-weight:700;font-display:swap;font-style:normal;font-stretch:normal;unicode-range:u+0020-2212}body{background-color:#fff;font-family:OpenSans,Helvetica,Arial,sans-serif;font-size:calc(14px + 2*(100vw - 340px)/1580);line-height:1.6875;font-weight:400;letter-spacing:0;color:#5a5a5a;overflow-x:hidden;min-width:320px}.container{max-width:1133px;width:100%;margin:0 auto}.container-fluid{max-width:1920px;margin:0 auto}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);border:0}.bg-img{background-repeat:no-repeat;background-position:50%;background-size:cover}.slick-dots{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.slick-dots li{margin:0 15px}.slick-dots button{width:8px;height:8px;font-size:0;border-radius:50px}.slick-dots li.slick-active button{background-color:#ffef35}.title,.title-h2,.title-h3,.title-h4{font-family:Montserrat,sans-serif;font-weight:700;font-size:calc(50px + 60*(100vw - 340px)/1580);line-height:1.2181818182;letter-spacing:0;color:#363838}.title-h2,.title-h3,.title-h4{font-size:calc(34px + 26*(100vw - 340px)/1580);line-height:1.3333333333}.title-h3,.title-h4{font-size:calc(25px + 11*(100vw - 340px)/1580);line-height:1.4166666667}.title-h4{font-size:calc(16px + 4*(100vw - 340px)/1580);line-height:1.2}.title-line-center,.title-line-left{position:relative}.title-line-center:after{content:"";position:absolute;background-color:#979797;height:2px;bottom:0;left:0;right:0;margin:0 auto;border-radius:50%}.link--active:after,.title-line-left:after{content:"";position:absolute;width:200px;height:2px;bottom:0;left:0;border-radius:5px;background-color:#363838}.link,.link--active{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.link--active:hover,.link:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1);color:#363838}.link--active{position:relative;width:100%;height:100%}.link--active:after{background-color:#5a5a5a;width:100%;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.link--active:hover:after,.slick-dots button{background-color:#363838}.logo{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.logo__icon{height:32px}.burger,.input{background-color:transparent}.burger{width:37px;height:37px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border-radius:4px;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.burger:hover{-webkit-box-shadow:0 1px 4px 0 rgba(0,0,0,.8509803922);box-shadow:0 1px 4px 0 rgba(0,0,0,.8509803922);-webkit-transform:scale(1.2);-ms-transform:scale(1.2);transform:scale(1.2)}.input{border:2px solid #5a5a5a;border-radius:21px;line-height:1.75;color:#363838;-webkit-transition:border .3s ease-in-out;transition:border .3s ease-in-out}.input:focus,.input:hover{border-color:#000;color:#000}.input::-webkit-input-placeholder{-webkit-transition:color .2s;transition:color .2s}.input::-moz-placeholder{-moz-transition:color .2s;transition:color .2s}.input:-ms-input-placeholder{-ms-transition:color .2s;transition:color .2s}.input::-ms-input-placeholder{-ms-transition:color .2s;transition:color .2s}.input::placeholder{-webkit-transition:color .2s;transition:color .2s}.input:focus::-webkit-input-placeholder, .input:hover::-webkit-input-placeholder{color:#000}.input:focus::-moz-placeholder, .input:hover::-moz-placeholder{color:#000}.input:focus:-ms-input-placeholder, .input:hover:-ms-input-placeholder{color:#000}.input:focus::-ms-input-placeholder, .input:hover::-ms-input-placeholder{color:#000}.input:focus::placeholder,.input:hover::placeholder{color:#000}.btn,.btn-tabs,.btn-tabs--active{font-weight:600;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:21px}.btn{background-color:#363838;color:#fff;font-size:"OpenSans";line-height:1.75;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border:1px solid #363838;-webkit-transition:background-color,color,.3s ease-out;transition:background-color,color,.3s ease-out}.btn:hover{background-color:transparent;color:#363838}.btn-tabs:active,.btn:active{-webkit-transform:scale(.96);-ms-transform:scale(.96);transform:scale(.96)}.btn-tabs,.btn-tabs--active{font-family:Open Sans,sans-serif;font-size:14px;line-height:28px;-webkit-transition:background-color,color,.5s ease-out;transition:background-color,color,.5s ease-out}.btn-tabs{color:#5a5a5a;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:transparent;border:1px solid #5a5a5a}.btn-tabs--active{background-color:#ffef35;color:#363838;border:2px solid #ffef35}.header__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-top:46px;padding-bottom:43px}.menu{padding-left:35px;padding-right:60px}.menu__list{display:-webkit-box;display:-ms-flexbox;display:flex}.menu__list-item:first-child{padding-right:80px}.menu__list-link{font-weight:700;font-size:calc(14px + 2*(100vw - 340px)/1580);line-height:1.375;font-family:Montserrat;padding-bottom:2px}.logo{margin:0 auto;width:97px;padding-bottom:3px}.header__btn,.header__btn-icon{width:37px;height:29px}.header__btn{background-color:transparent}.rightside-menu{z-index:20;position:absolute;right:0;top:0;bottom:0;max-width:694px;width:100%;background-color:#fff;padding-top:40px;-webkit-transition:-webkit-transform .2s ease-in;transition:-webkit-transform .2s ease-in;transition:transform .2s ease-in;transition:transform .2s ease-in, -webkit-transform .2s ease-in;-webkit-box-shadow:-2px 3px 17px 0 #000;box-shadow:-2px 3px 17px 0 #000}.rightside-menu--open~.overlay{z-index:10;opacity:1;pointer-events:auto}.rightside-menu--close{-webkit-transform:translateX(120%);-ms-transform:translateX(120%);transform:translateX(120%)}.overlay{position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.5);z-index:10;opacity:0;pointer-events:none;-webkit-transition:opacity .3s;transition:opacity .3s}.rightside-menu__btn-close{width:26px;height:26px;margin-left:50px;margin-bottom:60px}.rightside-menu__content{text-align:center;max-width:485px;margin:0 auto}.rightside-menu__logo{width:154px;height:58px;display:inline-block;margin-bottom:41px}.menu__title{font-size:36px;line-height:51px;padding-bottom:23px;margin-bottom:17px}.menu__title:after{max-width:252px;width:100%;margin:0 auto}.menu__text{font-size:16px;margin-bottom:75px}.menu__image{max-width:485px}.footer{background-color:#dfdfdf}.footer__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:60px 0 80px}.footer__info{max-width:540px}.footer__info-title{margin-bottom:14px;font-weight:700;line-height:23px;color:#363838;font-size:14px}.footer__info-text{max-width:476px;margin-bottom:16px}.footer__info-email{font-weight:600;margin-bottom:22px;font-size:14px;padding-left:30px;display:inline-block;position:relative}.footer__form-icon{position:absolute;left:0;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.footer__form{display:-webkit-box;display:-ms-flexbox;display:flex}.footer__form-input{padding:6px 10px 6px 18px;border-radius:21px;background-color:transparent;border:1px solid rgba(54,56,56,.7);color:#000;width:100%}.footer__form-input::-webkit-input-placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-input::-moz-placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-input:-ms-input-placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-input::-ms-input-placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-input::placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-btn{padding:6px 12px;min-width:160px;margin-left:9px}.footer__social{width:125px;margin-right:auto;margin-left:100px}.footer__menu{margin-right:60px;width:125px}.footer__social-item{color:#707070}.footer__menu-item,.footer__social-item{margin-bottom:15px;font-weight:600;font-size:14px}.list__social-link{color:#707070;padding-left:28px;position:relative}.footer__menu-link{color:#707070}.list__social-icon{position:absolute;display:block;left:0;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.footer__copy{text-align:center;background-color:#363838;color:#a1a1a1;padding:42px 15px 41px}.slick-list,.slick-slider{position:relative;display:block}.slick-slider{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-ms-user-select:none;-moz-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{-ms-transform:translateZ(0);-webkit-transform:translateZ(0);transform:translateZ(0)}.slick-track{position:relative;left:0;top:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-initialized .slick-slide,.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.hero__inner{margin-bottom:70px;position:relative}.no-webp .hero__inner:after{background-image:url(../img/bg/hero-bg.jpg)}.hero__inner:after{content:"";position:absolute;z-index:-1;top:0;width:100%;height:722px;background-repeat:no-repeat;background-position:50%;background-size:cover}.hero__slider-item{display:-webkit-box!important;display:-ms-flexbox!important;display:flex!important;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.hero__slider-img{margin-left:-14%;max-width:703px;height:815px;-o-object-fit:cover;object-fit:cover}.hero__slider-info{max-width:645px;margin-left:25px}.hero__slider-title{line-height:135px;padding-bottom:50px;margin-bottom:26px}.hero__slider-text{max-width:585px}.furniture{text-align:center;padding:45px 0 104px}.furniture__title{font-size:36px;padding-bottom:25px;margin-bottom:24px;color:#363838}.furniture__title:after{border-radius:2px;width:15%}.furniture__text{max-width:730px;margin:0 auto 27px}.collection__item{padding-right:15px;padding-left:15px;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.collection__item:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}.collection__card{position:relative}.collection__info{position:absolute;top:0;background-color:hsla(0,0%,100%,.6196078431);left:0;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;opacity:0;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.collection__info:hover{cursor:pointer;opacity:1}.collection__info:hover span{color:#000}.collection__img{-o-object-fit:contain;object-fit:contain}.collection__title{font-size:20px;padding-bottom:19px;margin-bottom:19px}.collection__title:after{background-color:#979797;height:2px;width:80%;border-radius:5px}.collection__text{color:#707070;font-weight:600}.collection__text span{padding-left:6px;margin-left:5px;position:relative;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.collection__text span:before{content:"";border-radius:2px;position:absolute;width:1px;height:60%;left:0;background-color:#5a5a5a;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.aesthetic{-webkit-box-shadow:inset 0 0 0 200vw hsla(0,0%,100%,.5568627451);box-shadow:inset 0 0 0 200vw hsla(0,0%,100%,.5568627451);padding-top:172px;padding-bottom:156px}.aesthetic__title{font-size:60px;max-width:500px;padding-bottom:27px;margin-bottom:21px}.aesthetic__summary{max-width:540px}.works-path{padding-top:59px;padding-bottom:109px}.works-path__title{text-align:center;font-size:36px;font-weight:700;line-height:51px;margin-bottom:19px}.works-path__items-box{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;border-bottom:2px solid #363838;position:relative}.works-path__items-box:before{position:absolute;content:"";bottom:-6px;left:0;width:10px;height:10px;border-radius:50%;background-color:#363838}.works-path__item{width:250px;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;height:100%}.works-path__item--prod{margin-left:317px;padding-bottom:38px}.works-path__item--prod:after,.works-path__item--thert:before{content:"";position:absolute;left:0;width:2px;height:20px;background-color:#363838}.works-path__item--prod:after{bottom:0}.works-path__item--cons{padding-bottom:38px}.works-path__item--thert{padding-top:38px;margin-left:305px}.works-path__item--thert:before{top:0}.works-path__item-title{margin-left:13px;font-weight:700;font-size:16px;line-height:23px}.works-path__item-text{margin-top:13px}.gallery{padding:0 0 90px}.gallery__filter{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;text-align:center;margin-bottom:40px}.gallery__filter-item{margin:0 13px}.gallery__filter-btn{padding:6px 16px}.gallery__items{display:-ms-grid;display:grid;-ms-grid-columns:(1fr)[7];grid-template-columns:repeat(7,1fr);-ms-grid-rows:(1fr)[2];grid-template-rows:repeat(2,1fr);grid-column-gap:34px;grid-row-gap:30px}.gallery__item:first-child{-ms-grid-column-span:3;grid-column:span 3/span 3;-ms-grid-row-span:2;grid-row:span 2/span 2}.gallery__item:nth-child(2){-ms-grid-column-span:2;grid-column:span 2/span 2;-ms-grid-column:4;grid-column-start:4}.gallery__item:nth-child(3){-ms-grid-column-span:2;grid-column:span 2/span 2;-ms-grid-column:6;grid-column-start:6}.gallery__item:nth-child(4),.gallery__item:nth-child(5){-ms-grid-column-span:2;grid-column:span 2/span 2;-ms-grid-column:4;grid-column-start:4;-ms-grid-row:2;grid-row-start:2}.gallery__item:nth-child(5){-ms-grid-column:6;grid-column-start:6}.gallery__item picture,.gallery__item picture img{display:block;width:100%;height:100%}.gallery__item picture img{-o-object-fit:cover;object-fit:cover}.blog-box{padding-bottom:100px}.blog-box__title{text-align:center;max-width:430px;margin:0 auto 30px}.blog-box__items{display:-ms-grid;display:grid;-ms-grid-columns:1fr 1fr;grid-template-columns:1fr 1fr;grid-gap:30px}.blog-box__img-link{margin-bottom:20px;display:inline-block;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.blog-box__img-link:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}.blog-box__links{font-size:14px;color:#707070;margin-bottom:9px;white-space:nowrap}.blog-box__author,.blog-box__date{position:relative;padding-right:7px}.blog-box__author:after,.blog-box__date:after{position:absolute;content:"";background-color:#707070;width:1px;height:80%;right:0;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.blog-box__author,.blog-box__thema{padding-left:7px;display:inline-block}.blog-box__author:hover,.blog-box__item-descr:hover,.blog-box__thema:hover{color:#000}.blog-box__item-link{font-size:24px}.blog-box__item-descr{font-size:24px;color:#363838}.breadcrumbs{position:absolute;width:100%;background-color:hsla(0,0%,87%,.5254901961);padding:13px 14px}.breadcrumbs__list{display:-webkit-box;display:-ms-flexbox;display:flex}.breadcrumbs__item:not(:first-child){padding-left:5px}.breadcrumbs__item:not(:last-child):after{content:"/"}.breadcrumbs__item:hover:after,.breadcrumbs__link:hover{color:#363838}.no-webp .about__prev{background-image:url(../img/bg/about-bg.jpg)}.about__prev{background-repeat:no-repeat;background-position:top;background-size:cover;text-align:center;padding:160px 0;margin-bottom:31px}.about__title{color:#363838;font-size:60px}.about__info{padding:98px 0 40px}.about__info-title{max-width:822px;font-size:36px;color:#363838;padding-bottom:20px;margin-bottom:23px}.about__info-text{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:end;margin-bottom:40px;padding-left:284px}.no-webp .about__video{background-image:url(../img/bg/video-bg.jpeg)}.about__video,.about__video-play{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.about__video{background-repeat:no-repeat;background-position:top;background-size:cover;min-height:414px}.about__video-play{width:80px;height:80px;background-color:rgba(54,56,56,.4);border-radius:50%;position:relative;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.about__video-play:before{content:"";background-image:url(../img/svg/play.svg);position:absolute;background-repeat:no-repeat;width:40px;height:40px}.about__video-play:hover{-webkit-transform:scale(1.3);-ms-transform:scale(1.3);transform:scale(1.3)}.metrics{padding-top:54px;padding-bottom:10px}.metrics__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.metrics__img{margin-right:78px;margin-left:-230px}.metrics__content{max-width:825px}.metrics__title{font-size:36px;padding-bottom:16px;margin-bottom:24px}.metrics__text{max-width:755px;margin-bottom:30px}.metrics__list{max-width:824px}.metrics__item{margin-bottom:33px}.metrics__item-text{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;font-size:16px;font-weight:700;line-height:0;color:#363838;margin-bottom:14px}.metrics__line{width:100%}.metrics__line::-webkit-meter-bar{height:2px;border:0;border-radius:0;background-color:#dbdbed}.metrics__line::-webkit-meter-optimum-value{background-color:#2352de}.webp .hero__inner:after{background-image:url(../img/bg/hero-bg.webp)}.webp .about__prev{background-image:url(../img/bg/about-bg.webp)}.webp .about__video{background-image:url(../img/bg/video-bg.webp)}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */