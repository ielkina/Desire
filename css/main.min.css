@import url(https://fonts.googleapis.com/css?family=Open+Sans:300,regular,500,600,700,800,300italic,italic,500italic,600italic,700italic,800italic&display=swap);@import url(https://fonts.googleapis.com/css?family=Montserrat:100,200,300,regular,500,600,700,800,900,100italic,200italic,300italic,italic,500italic,600italic,700italic,800italic,900italic&display=swap);@import "../../../node_modules/@fancyapps/fancybox/dist/jquery.fancybox.css";.footer__info-title{font-family:Monserat,sans-serif}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}img{max-width:100%;display:block}*,:after,:before{margin:0;border:0;padding:0}input,textarea{border-radius:0;outline:0}input,select,textarea{color:inherit;border:0}blockquote,dd,dl,figcaption,figure,h1,h2,h3,h4,h5,h6,li,p{margin:0;font-size:inherit}body,ol,ul{font-size:inherit}ol[class],ul[class]{list-style:none;padding:0}ol,picture,ul{padding:0;margin:0}picture{display:block;line-height:0}button,input,select,textarea{font:inherit}a,button{cursor:pointer;color:inherit}button{border:0;background-color:transparent}a{text-decoration:none;outline:0}body,html{height:100%;margin:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}main{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto}@font-face{font-family:OpenSans;src:url(../font/OpenSans-Regular.woff2) format("woff2"),url(../font/OpenSans-Regular.woff) format("woff");font-weight:400;font-display:swap;font-style:normal;font-stretch:normal;unicode-range:u+0020-2212}@font-face{font-family:Montserrat;src:url(../font/Montserrat-Bold.woff2) format("woff2"),url(../font/Montserrat-Bold.woff) format("woff");font-weight:700;font-display:swap;font-style:normal;font-stretch:normal;unicode-range:u+0020-2212}body{background-color:#fff;font-family:OpenSans,Helvetica,Arial,sans-serif;font-size:calc(14px + 2*(100vw - 340px)/1580);line-height:1.6875;font-weight:400;letter-spacing:0;color:#5a5a5a;overflow-x:hidden;min-width:320px}.container{max-width:1133px;width:100%;margin:0 auto}.container-fluid{max-width:1920px;margin:0 auto}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);border:0}.bg-img{background-repeat:no-repeat;background-position:50%;background-size:cover}.slick-dots{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.slick-dots li{margin:0 15px}.slick-dots button{width:8px;height:8px;font-size:0;border-radius:50px}.slick-dots li.slick-active button{background-color:#ffef35}.title,.title-h2,.title-h3,.title-h4{font-family:Montserrat,sans-serif;font-weight:700;font-size:calc(50px + 60*(100vw - 340px)/1580);line-height:1.2181818182;letter-spacing:0;color:#363838}.title-h2,.title-h3,.title-h4{font-size:calc(34px + 26*(100vw - 340px)/1580);line-height:1.3333333333}.title-h3,.title-h4{font-size:calc(25px + 11*(100vw - 340px)/1580);line-height:1.4166666667}.title-h4{font-size:calc(16px + 4*(100vw - 340px)/1580);line-height:1.2}.title-line-center,.title-line-left{position:relative}.title-line-center:after{content:"";position:absolute;background-color:#979797;height:2px;bottom:0;left:0;right:0;margin:0 auto;border-radius:50%}.link--active:after,.title-line-left:after{content:"";position:absolute;width:200px;height:2px;bottom:0;left:0;border-radius:5px;background-color:#363838}.link,.link--active{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.link--active:hover,.link:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1);color:#363838}.link--active{position:relative;width:100%;height:100%}.link--active:after{background-color:#5a5a5a;width:100%;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.link--active:hover:after,.slick-dots button{background-color:#363838}.logo{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.logo__icon{height:32px}.burger,.input{background-color:transparent}.burger{width:37px;height:37px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border-radius:4px;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.burger:hover{-webkit-box-shadow:0 1px 4px 0 rgba(0,0,0,.8509803922);box-shadow:0 1px 4px 0 rgba(0,0,0,.8509803922);-webkit-transform:scale(1.2);-ms-transform:scale(1.2);transform:scale(1.2)}.input{border:2px solid #5a5a5a;border-radius:21px;line-height:1.75;color:#363838;-webkit-transition:border .3s ease-in-out;transition:border .3s ease-in-out}.input:focus,.input:hover{border-color:#000;color:#000}.input::-webkit-input-placeholder{-webkit-transition:color .2s;transition:color .2s}.input::-moz-placeholder{-moz-transition:color .2s;transition:color .2s}.input:-ms-input-placeholder{-ms-transition:color .2s;transition:color .2s}.input::-ms-input-placeholder{-ms-transition:color .2s;transition:color .2s}.input::placeholder{-webkit-transition:color .2s;transition:color .2s}.input:focus::-webkit-input-placeholder, .input:hover::-webkit-input-placeholder{color:#000}.input:focus::-moz-placeholder, .input:hover::-moz-placeholder{color:#000}.input:focus:-ms-input-placeholder, .input:hover:-ms-input-placeholder{color:#000}.input:focus::-ms-input-placeholder, .input:hover::-ms-input-placeholder{color:#000}.input:focus::placeholder,.input:hover::placeholder{color:#000}.btn,.btn-tabs,.btn-tabs--active{font-weight:600;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:21px}.btn{background-color:#363838;color:#fff;font-size:"OpenSans";line-height:1.75;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border:1px solid #363838;-webkit-transition:background-color,color,.3s ease-out;transition:background-color,color,.3s ease-out}.btn:hover{background-color:transparent;color:#363838}.btn-tabs:active,.btn:active{-webkit-transform:scale(.96);-ms-transform:scale(.96);transform:scale(.96)}.btn-tabs,.btn-tabs--active{font-family:Open Sans,sans-serif;font-size:14px;line-height:28px;-webkit-transition:background-color,color,.5s ease-out;transition:background-color,color,.5s ease-out}.btn-tabs{color:#5a5a5a;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:transparent;border:1px solid #5a5a5a}.btn-tabs--active{background-color:#ffef35;color:#363838;border:2px solid #ffef35}.header__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-top:46px;padding-bottom:43px}.menu{padding-left:35px;padding-right:60px}.menu__list{display:-webkit-box;display:-ms-flexbox;display:flex}.menu__list-item:first-child{padding-right:80px}.menu__list-link{font-weight:700;font-size:calc(14px + 2*(100vw - 340px)/1580);line-height:1.375;font-family:Montserrat;padding-bottom:2px}.logo{margin:0 auto;width:97px;padding-bottom:3px}.header__btn,.header__btn-icon{width:37px;height:29px}.header__btn{background-color:transparent}.rightside-menu{z-index:20;position:absolute;right:0;top:0;bottom:0;max-width:694px;width:100%;background-color:#fff;padding-top:40px;-webkit-transition:-webkit-transform .2s ease-in;transition:-webkit-transform .2s ease-in;transition:transform .2s ease-in;transition:transform .2s ease-in, -webkit-transform .2s ease-in;-webkit-box-shadow:-2px 3px 17px 0 #000;box-shadow:-2px 3px 17px 0 #000}.rightside-menu--open~.overlay{z-index:10;opacity:1;pointer-events:auto}.rightside-menu--close{-webkit-transform:translateX(120%);-ms-transform:translateX(120%);transform:translateX(120%)}.overlay{position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.5);z-index:10;opacity:0;pointer-events:none;-webkit-transition:opacity .3s;transition:opacity .3s}.rightside-menu__btn-close{width:26px;height:26px;margin-left:50px;margin-bottom:60px}.rightside-menu__content{text-align:center;max-width:485px;margin:0 auto}.rightside-menu__logo{width:154px;height:58px;display:inline-block;margin-bottom:41px}.menu__title{font-size:36px;line-height:51px;padding-bottom:23px;margin-bottom:17px}.menu__title:after{max-width:252px;width:100%;margin:0 auto}.menu__text{font-size:16px;margin-bottom:75px}.menu__image{max-width:485px}.footer{background-color:#dfdfdf}.footer__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:60px 0 80px}.footer__info{max-width:540px}.footer__info-title{margin-bottom:14px;font-weight:700;line-height:23px;color:#363838;font-size:14px}.footer__info-text{max-width:476px;margin-bottom:16px}.footer__info-email{font-weight:600;margin-bottom:22px;font-size:14px;padding-left:30px;display:inline-block;position:relative}.footer__form-icon{position:absolute;left:0;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.footer__form{display:-webkit-box;display:-ms-flexbox;display:flex}.footer__form-input{padding:6px 10px 6px 18px;border-radius:21px;background-color:transparent;border:1px solid rgba(54,56,56,.7);color:#000;width:100%}.footer__form-input::-webkit-input-placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-input::-moz-placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-input:-ms-input-placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-input::-ms-input-placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-input::placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-btn{padding:6px 12px;min-width:160px;margin-left:9px}.footer__social{width:125px;margin-right:auto;margin-left:100px}.footer__menu{margin-right:60px;width:125px}.footer__social-item{color:#707070}.footer__menu-item,.footer__social-item{margin-bottom:15px;font-weight:600;font-size:14px}.list__social-link{color:#707070;padding-left:28px;position:relative}.footer__menu-link{color:#707070}.list__social-icon{position:absolute;display:block;left:0;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.footer__copy{text-align:center;background-color:#363838;color:#a1a1a1;padding:42px 15px 41px}.slick-list,.slick-slider{position:relative;display:block}.slick-slider{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-ms-user-select:none;-moz-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{-ms-transform:translateZ(0);-webkit-transform:translateZ(0);transform:translateZ(0)}.slick-track{position:relative;left:0;top:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-initialized .slick-slide,.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.hero__inner{margin-bottom:70px;position:relative}.no-webp .hero__inner:after{background-image:url(../img/bg/hero-bg.jpg)}.hero__inner:after{content:"";position:absolute;z-index:-1;top:0;width:100%;height:722px;background-repeat:no-repeat;background-position:50%;background-size:cover}.hero__slider-item{display:-webkit-box!important;display:-ms-flexbox!important;display:flex!important;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.hero__slider-img{margin-left:-14%;max-width:703px;height:815px;-o-object-fit:cover;object-fit:cover}.hero__slider-info{max-width:645px;margin-left:25px}.hero__slider-title{line-height:135px;padding-bottom:50px;margin-bottom:26px}.hero__slider-text{max-width:585px}.furniture{text-align:center;padding:45px 0 104px}.furniture__title{font-size:36px;padding-bottom:25px;margin-bottom:24px;color:#363838}.furniture__title:after{border-radius:2px;width:15%}.furniture__text{max-width:730px;margin:0 auto 27px}.collection__item{padding-right:15px;padding-left:15px;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.collection__item:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}.collection__card{position:relative}.collection__info{position:absolute;top:0;background-color:hsla(0,0%,100%,.6196078431);left:0;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;opacity:0;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.collection__info:hover{cursor:pointer;opacity:1}.collection__info:hover span{color:#000}.collection__img{-o-object-fit:contain;object-fit:contain}.collection__title{font-size:20px;padding-bottom:19px;margin-bottom:19px}.collection__title:after{background-color:#979797;height:2px;width:80%;border-radius:5px}.collection__text{color:#707070;font-weight:600}.collection__text span{padding-left:6px;margin-left:5px;position:relative;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.collection__text span:before{content:"";border-radius:2px;position:absolute;width:1px;height:60%;left:0;background-color:#5a5a5a;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.aesthetic{-webkit-box-shadow:inset 0 0 0 200vw hsla(0,0%,100%,.5568627451);box-shadow:inset 0 0 0 200vw hsla(0,0%,100%,.5568627451);padding-top:172px;padding-bottom:156px}.aesthetic__title{font-size:60px;max-width:500px;padding-bottom:27px;margin-bottom:21px}.aesthetic__summary{max-width:540px}.works-path{padding-top:59px;padding-bottom:109px}.works-path__title{text-align:center;font-size:36px;font-weight:700;line-height:51px;margin-bottom:19px}.works-path__items-box{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;border-bottom:2px solid #363838;position:relative}.works-path__items-box:before{position:absolute;content:"";bottom:-6px;left:0;width:10px;height:10px;border-radius:50%;background-color:#363838}.works-path__item{width:250px;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;height:100%}.works-path__item--prod{margin-left:317px;padding-bottom:38px}.works-path__item--prod:after,.works-path__item--thert:before{content:"";position:absolute;left:0;width:2px;height:20px;background-color:#363838}.works-path__item--prod:after{bottom:0}.works-path__item--cons{padding-bottom:38px}.works-path__item--thert{padding-top:38px;margin-left:305px}.works-path__item--thert:before{top:0}.works-path__item-title{margin-left:13px;font-weight:700;font-size:16px;line-height:23px}.works-path__item-text{margin-top:13px}.gallery{padding:0 0 90px}.gallery__filter{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;text-align:center;margin-bottom:40px}.gallery__filter-item{margin:0 13px}.gallery__filter-btn{padding:6px 16px}.gallery__items{display:-ms-grid;display:grid;-ms-grid-columns:(1fr)[7];grid-template-columns:repeat(7,1fr);-ms-grid-rows:(1fr)[2];grid-template-rows:repeat(2,1fr);grid-column-gap:34px;grid-row-gap:30px}.gallery__item:first-child{-ms-grid-column-span:3;grid-column:span 3/span 3;-ms-grid-row-span:2;grid-row:span 2/span 2}.gallery__item:nth-child(2){-ms-grid-column-span:2;grid-column:span 2/span 2;-ms-grid-column:4;grid-column-start:4}.gallery__item:nth-child(3){-ms-grid-column-span:2;grid-column:span 2/span 2;-ms-grid-column:6;grid-column-start:6}.gallery__item:nth-child(4),.gallery__item:nth-child(5){-ms-grid-column-span:2;grid-column:span 2/span 2;-ms-grid-column:4;grid-column-start:4;-ms-grid-row:2;grid-row-start:2}.gallery__item:nth-child(5){-ms-grid-column:6;grid-column-start:6}.gallery__item picture,.gallery__item picture img{display:block;width:100%;height:100%}.gallery__item picture img{-o-object-fit:cover;object-fit:cover}.gallery-page{padding-top:139px}.gallery.gallery-page .gallery__item:nth-child(6){-ms-grid-column-span:2;grid-column:span 2/span 2;-ms-grid-row:3;grid-row-start:3}.gallery.gallery-page .gallery__item:nth-child(7){-ms-grid-column-span:2;grid-column:span 2/span 2;-ms-grid-column:3;grid-column-start:3;-ms-grid-row:3;grid-row-start:3}.gallery.gallery-page .gallery__item:nth-child(8){-ms-grid-column-span:3;grid-column:span 3/span 3;-ms-grid-row-span:2;grid-row:span 2/span 2;-ms-grid-column:5;grid-column-start:5;-ms-grid-row:3;grid-row-start:3}.gallery.gallery-page .gallery__item:nth-child(9){-ms-grid-column-span:2;grid-column:span 2/span 2;-ms-grid-row:4;grid-row-start:4}.gallery.gallery-page .gallery__item:nth-child(10){-ms-grid-column-span:2;grid-column:span 2/span 2;-ms-grid-column:3;grid-column-start:3;-ms-grid-row:4;grid-row-start:4}.parent{display:-ms-grid;display:grid;-ms-grid-columns:(1fr)[4];grid-template-columns:repeat(4,1fr);-ms-grid-rows:(1fr)[2];grid-template-rows:repeat(2,1fr);grid-gap:30px 35px}.parent.parent-page .parent__item:nth-child(8),.parent__item{-ms-grid-column-span:2;grid-column:span 2;-ms-grid-row-span:2;grid-row:span 2}.blog-box{padding-bottom:100px}.blog-box__title{text-align:center;max-width:430px;margin:0 auto 30px}.blog-box__items{display:-ms-grid;display:grid;-ms-grid-columns:1fr 1fr;grid-template-columns:1fr 1fr;grid-gap:30px}.blog-box__img-link{margin-bottom:20px;display:inline-block;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.blog-box__img-link:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}.blog-box__links{font-size:14px;color:#707070;margin-bottom:9px;white-space:nowrap}.blog-box__author,.blog-box__date{position:relative;padding-right:7px}.blog-box__author:after,.blog-box__date:after{position:absolute;content:"";background-color:#707070;width:1px;height:80%;right:0;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.blog-box__author,.blog-box__thema{padding-left:7px;display:inline-block}.blog-box__author:hover,.blog-box__item-descr:hover,.blog-box__thema:hover{color:#000}.blog-box__item-link{font-size:24px}.blog-box__item-descr{font-size:24px;color:#363838}.breadcrumbs{position:absolute;width:100%;background-color:hsla(0,0%,87%,.5254901961);padding:13px 14px}.breadcrumbs__list{display:-webkit-box;display:-ms-flexbox;display:flex}.breadcrumbs__item:not(:first-child){padding-left:5px}.breadcrumbs__item:not(:last-child):after{content:"/"}.breadcrumbs__item:hover:after,.breadcrumbs__link:hover{color:#363838}.no-webp .about__prev{background-image:url(../img/bg/about-bg.jpg)}.about__prev{background-repeat:no-repeat;background-position:top;background-size:cover;text-align:center;padding:160px 0;margin-bottom:31px}.about__title{color:#363838;font-size:60px}.about__info{padding:98px 0 40px}.about__info-title{max-width:822px;font-size:36px;color:#363838;padding-bottom:20px;margin-bottom:23px}.about__info-text{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:end;margin-bottom:40px;padding-left:284px}.no-webp .about__video{background-image:url(../img/bg/video-bg.jpeg)}.about__video,.about__video-play{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.about__video{background-repeat:no-repeat;background-position:top;background-size:cover;min-height:414px}.about__video-play{width:80px;height:80px;background-color:rgba(54,56,56,.4);border-radius:50%;position:relative;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.about__video-play:before,.metrics:after{position:absolute;content:"";background-repeat:no-repeat}.about__video-play:before{background-image:url(../img/svg/play.svg);width:40px;height:40px}.about__video-play:hover{-webkit-transform:scale(1.3);-ms-transform:scale(1.3);transform:scale(1.3)}.metrics{margin-top:54px;position:relative;margin-bottom:10px}.no-webp .metrics:after{background-image:url(../img/bg/hero-bg.jpg)}.metrics:after{width:100%;bottom:0;left:0;right:0;height:514px;z-index:-1;background-position:top;background-size:cover}.metrics__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center}.metrics__content{padding-left:284px;position:relative}.metrics__content:before{position:absolute;content:url(../img/hero/hero-img.webp);width:433px;height:506px;left:0;top:50%;bottom:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);display:inline-block}.metrics__title{font-size:36px;padding-bottom:16px;margin-bottom:24px}.metrics__text{max-width:810px;margin-bottom:30px}.metrics__list{width:100%;margin-top:75px;margin-bottom:75px}.metrics__item:not(:last-child){margin-bottom:33px}.metrics__item-text{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;font-size:16px;font-weight:700;color:#363838;margin-bottom:14px}.metrics__line{width:100%;height:2px;border-radius:21px}.metrics__line::-webkit-meter-bar{background:#fff;height:2px;border-radius:10px}.metrics__line::-webkit-meter-optimum-value,.metrics__line::-webkit-meter-suboptimum-value{background:#363838}.metrics__line::-webkit-meter-even-less-good-value{background:#363838}.partners__list{max-width:1920px;margin:0 auto;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.partners__item{-o-object-fit:contain;object-fit:contain}.partners__item:not(:last-child){margin-right:68px}.partners__icon{width:100%;height:auto;display:block}.partners__list{margin-right:50px;margin-left:50px;display:-webkit-box;display:-ms-flexbox;display:flex}.partners__icon{-o-object-fit:contain;object-fit:contain}.partners__collection{margin-bottom:72px}.webp .hero__inner:after,.webp .metrics:after{background-image:url(../img/bg/hero-bg.webp)}.webp .about__prev{background-image:url(../img/bg/about-bg.webp)}.webp .about__video{background-image:url(../img/bg/video-bg.webp)}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UvX2ZvbnQtbGluay5zY3NzIiwiYmFzZS9fbGliLnNjc3MiLCJtYWluLmNzcyIsImJhc2UvX3Jlc2V0LnNjc3MiLCJiYXNlL19mb250LW1peGluLnNjc3MiLCJiYXNlL2dsb2JhbC5zY3NzIiwicGF0aC9faGVhZGVyLnNjc3MiLCJiYXNlL190eXBvZ3JhZi5zY3NzIiwiYmFzZS9fbGluay5zY3NzIiwiYmFzZS9fbG9nby5zY3NzIiwiYmFzZS9fYnVyZ2VyLnNjc3MiLCJiYXNlL19pbnB1dC5zY3NzIiwiYmFzZS9fYnV0dG9uLnNjc3MiLCJwYXRoL19mb290ZXIuc2NzcyIsIkQ6L0Rlc2lyZS1ndWxwL25vZGVfbW9kdWxlcy9zbGljay1jYXJvdXNlbC9zbGljay9zbGljay5zY3NzIiwicGF0aC9faGVyby5zY3NzIiwicGF0aC9fZnVybml0dXJlLnNjc3MiLCJwYXRoL19hZXN0aGV0aWMuc2NzcyIsInBhdGgvX2hvdy5zY3NzIiwicGF0aC9fZ2FsbGVyeS5zY3NzIiwicGF0aC9fbW9yZS5zY3NzIiwicGF0aC9fYnJlYWRjcnVtYi5zY3NzIiwicGF0aC9fYWJvdXQuc2NzcyIsInBhdGgvX21ldHJpY3Muc2NzcyIsInBhdGgvX3BhcnRuZXJzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSVEsZ0tBQUEsQ0NBQSwyTUFBQSxDQ0lSLDRFQUFBLENDUkEsb0JEZ0JFLCtCQWhCMmtCLENDSTdrQixLQXdERSw2QkFBQSxDQUFBLHFCRDVEc21CLENBOEV4bUIsaUJBbkRFLDBCQUFBLENBQUEsa0JBM0IycEIsQ0MyQzdwQixJQXFFQSxjRGhIZ3JCLENDZ0hockIsYURoSDhyQixDQThFOXJCLGlCQ1pBLFFEbEV3dEIsQ0NvRXR0QixRRHBFK3RCLENDcUUvdEIsU0RyRXl1QixDQXVGM3VCLGVDZkEsZUR4RTB3QixDQzJFeHdCLFNEM0VreEIsQ0E4RnB4QixzQkNoQkEsYUQ5RXd6QixDQzhFeHpCLFFEOUVpMEIsQ0M4RWowQiwwREFxQkUsUURuR2s0QixDQ29HbDRCLGlCRHBHbzVCLENDOEV0NUIsV0FzQkUsaUJEcEdpN0IsQ0NzR243QixvQkFBQSxlRHRHdTlCLENDeUdyOUIsU0R6Rys5QixDQStIaitCLGNDakJFLFNEOUd1L0IsQ0FtSXYvQixRQW5JZ2dDLENDNEdsZ0MsUUFpQkEsYUQ3SHdoQyxDQ2dJdGhDLGFEaElvaUMsQ0EySXRpQyw2QkNoQkUsWUQzSDhrQyxDQ2tJaGxDLFNBRUUsY0RwSXNtQyxDQ3FJdG1DLGFEcklvbkMsQ0N1SXRuQyxPQUVFLFFEeklvb0MsQ0FpS3BvQyw0QkFqS2lxQyxDQ2dKanFDLEVBS0Esb0JEckp3ckMsQ0FzS3hyQyxTQXRLa3NDLENBcUxwc0MsVUVsS0UsV0ZuQnd0QyxDRW9CdHRDLFFGcEIrdEMsQ0VxQi90QyxtQkZyQjR1QyxDRXFCNXVDLG1CRnJCNHVDLENFcUI1dUMsWUZyQjR1QyxDRXVCNXVDLDJCQUFBLENBQUEsNEJBQUEsQ0FBQSx5QkFBQSxDQUFBLHFCRnZCa3dDLENBNEx0d0MsS0VqS0ksa0JBQUEsQ0FBQSxpQkFBQSxDQUFBLGFGM0JxeEMsQ0FpTXp4QyxXRTFLSSxvQkZ2QnV6QyxDRXdCdnpDLHlHRnhCaTZDLENFeUJqNkMsZUZ6Qmk3QyxDRTBCajdDLGlCRjFCbThDLENFMkJuOEMsaUJGM0JxOUMsQ0F1TXY5QyxtQkF2TTIrQyxDR083K0MseUJBQUEsQ0hQd2dELFdBNE10Z0Qsc0JBNU15aUQsQ0dZM2lELHVHSFptcEQsQ0UrSWpwRCxlRi9JaXFELENFaUdqcUQsaUJGakdtckQsQ0VJbnJELGlCRkpxc0QsQ0dnQnJzRCxtQkhoQnl0RCxDR2lCenRELHlCQUFBLENIb01GLEtHL0xFLHFCSHRCOHdELENBMk45d0QsK0NBM05vMEQsQ0cyQnQwRCw2Q0gzQm8zRCxDRzRCbDNELGtCSDVCcTRELENHNkJyNEQsZUg3QnE1RCxDQStOcjVELGdCQS9OczZELENBZ090NkQsYUFoT283RCxDSW9JcDdELGlCSnBJczhELENJcUl0OEQsZUpySXM5RCxDQW1PeDlELFdHL0xFLGdCSHBDay9ELENHcUNsL0QsVUhyQzYvRCxDR3NDNy9ELGFIdEMyZ0UsQ0F5TzdnRSxpQkFDRSxnQkExTzZpRSxDQTJPN2lFLGFBM08yakUsQ0E4TzdqRSxpQkcvTEUsaUJIL0M4bEUsQ0FnUDlsRSxTQWhQd21FLENBaVB4bUUsVUFqUG1uRSxDR21Ecm5FLFdIbkRpb0UsQ0dvRC9uRSxTSHBEeW9FLENHcUR6b0UsZUhyRHlwRSxDR3NEenBFLGtCSHRENHFFLENBc1A1cUUsUUF0UHFyRSxDQXlQdnJFLFFHL0xFLDJCSDFEeXRFLENHMkR2dEUsdUJIM0RrdkUsQ0c0RGx2RSxxQkg1RHd3RSxDQStQNXdFLFlBQ0UsbUJBaFFteUUsQ0FnUW55RSxtQkFoUW15RSxDQWdRbnlFLFlBaFFteUUsQ0drRWp5RSx1QkhsRXd6RSxDR2tFeHpFLG9CSGxFd3pFLENHa0V4ekUsc0JIbEV3ekUsQ0dtRXR6RSx3QkFBQSxDQUFBLHFCQUFBLENBQUEsa0JIbkV5MEUsQ0tJLzBFLGVBQ0UsYUxMMDJFLENBeVE1MkUsbUJLaFFFLFNMVHU0RSxDS1V2NEUsVUxWazVFLENBNFFsNUUsV0E1UTg1RSxDQTZROTVFLGtCQTdRaTdFLENBaVJuN0UsbUNFN1FFLHdCRko2K0UsQ0FxUi8rRSxxQ0FDRSxpQ0F0UnNqRixDS29CeGpGLGVMcEJ3a0YsQ0txQnRrRiw4Q0xyQnFuRixDS3NCcm5GLHdCTHRCOG9GLENFaUc5b0YsZ0JGakcrcEYsQ0VJL3BGLGFGSjZxRixDQThSL3FGLDhCS2pRRSw4Q0w3QjB2RixDSzhCMXZGLHdCTDlCbXhGLENBdVNyeEYsb0JLalFFLDhDTHRDczFGLENBMlN0MUYsd0JBM1MrMkYsQ0FnVGozRixVS2pRSSw2Q0wvQ3E2RixDS2dEcjZGLGVMaERxN0YsQ0F5VHo3RixvQ0FDRSxpQkExVDYrRixDQTZULytGLHlCSy9QSSxVTDlEZ2hHLENLK0RoaEcsaUJML0RraUcsQ0tnRWxpRyx3QkxoRTJqRyxDS2lFM2pHLFVMakVza0csQ0trRXRrRyxRTGxFK2tHLENLbUUva0csTUxuRXNsRyxDQW9VeGxHLE9BcFVnbUcsQ0FxVWhtRyxhQXJVOG1HLENNRWhuRyxpQk5Ga29HLENBMFdsb0csMkNBNUJFLFVBOVV3ckcsQ01XMXJHLGlCTlg0c0csQ01ZMXNHLFdOWnN0RyxDTWF0dEcsVU5iaXVHLENNY2p1RyxRTmQwdUcsQ01lMXVHLE1OZml2RyxDTWdCanZHLGlCTmhCbXdHLENBcVZud0csd0JBclY0eEcsQ0F3Vjl4RyxvQk1wVUksMEJOcEJrMEcsQ01vQmwwRywwQk5wQmswRyxDTW9CbDBHLG1CTnBCazBHLENNcUJsMEcsa0NBQUEsQ0FBQSwwQk5yQjYxRyxDQXNYajJHLGdDTTdWSSw0Qk56Qms1RyxDTXlCbDVHLHdCTnpCazVHLENNeUJsNUcsb0JOekJrNUcsQ00wQmw1RyxhTjFCZzZHLENBa1dwNkcsY01wVUksaUJOOUJnOEcsQ00rQmg4RyxVTi9CMjhHLENNZ0N6OEcsV05oQ3E5RyxDQTBXMzlHLG9CQUdFLHdCQTdXdWdILENPTXpnSCxVUE5vaEgsQ0FpWGxoSCxRQWpYMmhILENRQTdoSCxrQ0FBQSxDQUFBLDhCQUFBLENBQUEsMEJSQXdqSCxDQTJYeGpILDZDQUNFLHdCQTVYNm5ILENBK1gvbkgsTUFDRSxtQkFoWWdwSCxDQWdZaHBILG1CQWhZZ3BILENBZ1locEgsWUFoWWdwSCxDQWlZaHBILHdCQWpZbXFILENBaVlucUgscUJBalltcUgsQ0FpWW5xSCxrQkFqWW1xSCxDU0NycUgsdUJBQUEsQ0FBQSxvQkFBQSxDQUFBLHNCVEQ0ckgsQ0FxWTVySCxZU2hZRSxXVExrdEgsQ0F5WXB0SCxlVWxZRSw0QlZQOHZILENBeVlod0gsUVMvWEksVVRWK3dILENTVy93SCxXVFgyeEgsQ0E2WTd4SCxtQkE3WTB5SCxDQTZZMXlILG1CQTdZMHlILENBNlkxeUgsWUE3WTB5SCxDU2ExeUgsd0JUYjZ6SCxDU2E3ekgscUJUYjZ6SCxDU2E3ekgsa0JUYjZ6SCxDU2MzekgsdUJUZGsxSCxDU2NsMUgsb0JUZGsxSCxDU2NsMUgsc0JUZGsxSCxDQWdacDFILGlCQWhaczJILENTZ0J0Mkgsa0NBQUEsQ0FBQSwwQlRoQmk0SCxDQW9abjRILGNVbFpBLHNEVkZnOEgsQ1VFaDhILDhDVkZnOEgsQ1VHOTdILDRCQUFBLENBQUEsd0JBQUEsQ0FBQSxvQlZIbTlILENBeVpyOUgsT1VqWkUsd0JWUm0vSCxDVVNuL0gsa0JWVHNnSSxDVVV0Z0ksZ0JWVnVoSSxDVVd2aEksYVZYcWlJLENVWXJpSSx5Q0FBQSxDQUFBLGlDVlp1a0ksQ0FrYXprSSwwQkFFRSxpQkFwYW1uSSxDVW1Cbm5JLFVWbkI4bkksQ0F3YWhvSSxrQ1VoWkEsNEJBQUEsQ0FBQSxvQlZ4QnlxSSxDQXdhenFJLHlCVWhaQSx5QkFBQSxDQUFBLG9CVnhCeXFJLENBd2F6cUksNkJVaFpBLHdCQUFBLENBQUEsb0JWeEJ5cUksQ0F3YXpxSSw4QlVoWkEsd0JBQUEsQ0FBQSxvQlZ4QnlxSSxDQXdhenFJLG9CVWhaQSw0QkFBQSxDQUFBLG9CVnhCeXFJLENBNmF6cUksaUZVaFpFLFVWN0JzdUksQ0E2YXh1SSwrRFVoWkUsVVY3QnN1SSxDQTZheHVJLHVFVWhaRSxVVjdCc3VJLENBNmF4dUkseUVVaFpFLFVWN0JzdUksQ0E2YXh1SSxvRFVoWkUsVVY3QnN1SSxDQWlieHVJLGlDQTBDRSxlQTNkdXhJLENJcUV2eEksd0JKckV3eUksQ0lxRXh5SSxxQkpyRXd5SSxDSXFFeHlJLG9CSnJFd3lJLENJcUV4eUksZ0JKckV3eUksQ0lzRXh5SSxrQkp0RTJ6SSxDQWliN3pJLEtVaFpFLHdCVmpDeTFJLENVa0N6MUksVVZsQ28ySSxDVW1DcDJJLG9CVm5DeTNJLENVNEN2M0ksZ0JWNUN3NEksQ0F3YjE0SSx3QkF4YjY1SSxDQXdiNzVJLHFCQXhiNjVJLENBd2I3NUksa0JBeGI2NUksQ1UrQzc1SSx3QlYvQ3M3SSxDVWdEcDdJLHNEQUFBLENBQUEsOENWaERtK0ksQ0E4YnYrSSxXVXpZSSw0QlZyRDJnSixDVXVEM2dKLGFWdkR5aEosQ0lvRDdoSiw2Qk1PSSw0QkFBQSxDQUFBLHdCQUFBLENBQUEsb0JWM0Qya0osQ0F1Yy9rSiw0Qkk1WUUsZ0NKM0Q0b0osQ0E0ZDVvSixjQTVkMnBKLENJOEQ3cEosZ0JKOUQ4cUosQ0VJNXFKLHNEQUFBLENBQUEsOENGSjJ0SixDQXVjN3RKLFVJMVpFLGFKN0NtdkosQ0k4Q252Six3Qko5Q3N3SixDSThDdHdKLHFCSjlDc3dKLENJOEN0d0osa0JKOUNzd0osQ0E4Y3R3Siw0QkE5Y215SixDSWdEcnlKLHdCSmhEOHpKLENJMEQ5ekosa0JKeWFFLHdCQW5ldTJKLENBb2V2MkosYUFwZXEzSixDSXdFdjNKLHdCSnhFZzVKLENBd2VoNUosZUFDRSxtQkF6ZTA2SixDQXllMTZKLG1CQXplMDZKLENBeWUxNkosWUF6ZTA2SixDQTBlMTZKLHdCQTFldzhKLENBMGV4OEoscUJBMWV3OEosQ0EwZXg4Siw2QkExZXc4SixDSStFMThKLHdCSi9FNjlKLENJK0U3OUoscUJKL0U2OUosQ0krRTc5SixrQkovRTY5SixDSWdGMzlKLGdCSmhGNCtKLENJaUY1K0osbUJKakZnZ0ssQ0ltRmxnSyxNQUNFLGlCSnBGd2hLLENJcUZ4aEssa0JKckYyaUssQ0l3RjdpSyxZQUNFLG1CQUFBLENBQUEsbUJBQUEsQ0FBQSxZSnpGb2tLLENJNEZ0a0ssNkJBQ0Usa0JKN0ZvbkssQ0E2ZnRuSyxpQkk1WkUsZUpqR3FwSyxDSWtHcnBLLDZDSmxHbXNLLENJbUduc0ssaUJKbkdxdEssQ0lvR3J0SyxzQkpwRzh1SyxDSXFHOXVLLGtCSnJHaXdLLENBcWdCbndLLE1BQ0UsYUF0Z0JxeEssQ0l5R3Z4SyxVSnpHa3lLLENJMEdoeUssa0JKMUdtekssQ0EyZ0JyekssK0JJN1pBLFVKOUcrMUssQ0krRzcxSyxXSi9HeTJLLENBcWhCMzJLLGFBQ0UsNEJBdGhCbTVLLENBeWhCcjVLLGdCSS9aRSxVSjFIODZLLENJMkg5NkssaUJKM0hnOEssQ0E0aEJoOEssT0E1aEJ3OEssQ0E2aEJ4OEssS0E3aEI4OEssQ0k2SGg5SyxRSjdIeTlLLENJOEh2OUssZUo5SHUrSyxDQWdpQnYrSyxVQWhpQmsvSyxDQWlpQmwvSyxxQkFqaUJ3Z0wsQ0lpSTFnTCxnQkpqSTJoTCxDSWtJemhMLGdESmxJMGpMLENJa0kxakwsd0NKbEkwakwsQ0lrSTFqTCxnQ0psSTBqTCxDSWtJMWpMLCtESmxJMGpMLENJbUkxakwsdUNBQUEsQ0FBQSwrQkpuSTBsTCxDQXdqQjVsTCwrQklwYUEsVUpwSnNvTCxDSXlLbG9MLFNKeks0b0wsQ0kwSzVvTCxtQkoxS2dxTCxDQThqQnBxTCx1QkFDRSxrQ0FBQSxDQUFBLDhCQUFBLENBQUEsMEJBL2pCb3RMLENBa2tCdHRMLFNJdmFFLGNKM0o0dUwsQ0k0SjV1TCxLSjVKa3ZMLENJNkpsdkwsTUo3Snl2TCxDQXNrQnp2TCxPQXRrQml3TCxDQXVrQmp3TCxRQXZrQjB3TCxDSWdLNXdMLHlCSmhLc3lMLENJaUtweUwsVUpqSyt5TCxDSWtLL3lMLFNKbEt5ekwsQ0ltS3p6TCxtQkpuSzYwTCxDSW9LNzBMLDhCQUFBLENBQUEsc0JKcEtvMkwsQ0krS3QyTCwyQkFFRSxVSmpMMDRMLENJa0wxNEwsV0psTHM1TCxDQXVsQnQ1TCxnQkF2bEJ1NkwsQ0F3bEJ2Nkwsa0JBeGxCMDdMLENBMmxCNTdMLHlCQUNFLGlCQTVsQnErTCxDV0t2K0wsZVhMdS9MLENXTXIvTCxhWE5tZ00sQ1dVcmdNLHNCQUNFLFdYWHFpTSxDV1lyaU0sV1haaWpNLENXYWpqTSxvQlhic2tNLENBcW1CdGtNLGtCQXJtQnlsTSxDQXdtQjNsTSxhQUNFLGNBem1CcW5NLENBMG1Ccm5NLGdCQTFtQnNvTSxDV2tCeG9NLG1CWGxCNHBNLENXbUIxcE0sa0JYbkI2cU0sQ0ErbUIvcU0sbUJXdmxCRSxlWHhCaXRNLENBaW5CanRNLFVBam5CNHRNLENBa25CNXRNLGFBbG5CMHVNLENBcW5CNXVNLFlBQ0UsY0F0bkJxd00sQ0F1bkJyd00sa0JBdm5Cd3hNLENBMG5CMXhNLGFXemxCRSxlWGpDcXpNLENBOG5CdnpNLFFBQ0Usd0JBL25CczFNLENBa29CeDFNLGVXMWxCRSxtQlh4Q2szTSxDV3dDbDNNLG1CWHhDazNNLENXd0NsM00sWVh4Q2szTSxDV3lDbDNNLHdCWHpDZzVNLENXeUNoNU0scUJYekNnNU0sQ1d5Q2g1TSw2Qlh6Q2c1TSxDVzBDaDVNLG1CWDFDbzZNLENXNEN0Nk0sY0FDRSxlWDdDazhNLENXK0NwOE0sb0JBQ0Usa0JYaER5K00sQ1dpRHorTSxlWGpEeS9NLENXa0R6L00sZ0JYbEQwZ04sQ1dtRDFnTixhWG5Ed2hOLENXb0R4aE4sY1hwRHVpTixDV3NEdmlOLG1CQUNFLGVYdkR3a04sQ1d3RHhrTixrQlh4RDJsTixDQXlwQi9sTixvQkFDRSxlQTFwQmlvTixDVzZEbm9OLGtCWDdEc3BOLENXOERwcE4sY1g5RG1xTixDVytEbnFOLGlCWC9EcXJOLENXZ0Vyck4sb0JYaEUwc04sQ0ErcEIxc04saUJBL3BCNHROLENBa3FCOXROLG1CVzlsQkUsaUJYcEVpd04sQ1dxRWp3TixNWHJFd3dOLENBcXFCeHdOLE9BcnFCZ3hOLENBc3FCaHhOLGtDQUFBLENBQUEsOEJBQUEsQ0FBQSwwQkF0cUIyeU4sQ0F5cUI3eU4sY0FDRSxtQkFBQSxDQUFBLG1CQUFBLENBQUEsWUExcUJzME4sQ0E2cUJ4ME4sb0JXN2xCRSx5QlhoRm8zTixDV2lGcDNOLGtCWGpGdTROLENXa0Z2NE4sNEJYbEZvNk4sQ0FpckJwNk4sa0NBanJCdThOLENBa3JCdjhOLFVBbHJCazlOLENXb0ZwOU4sVVhwRis5TixDQXNyQi85TiwrQ0FDRSxnQ0F2ckJpaU8sQ0F3ckJqaU8sZUF4ckJpak8sQ1cwRm5qTyxnQlgxRm9rTyxDVzJGbGtPLGNYM0ZpbE8sQ0FzckJubE8sc0NBQ0UsZ0NBdnJCaWlPLENBd3JCamlPLGVBeHJCaWpPLENXMEZuak8sZ0JYMUZva08sQ1cyRmxrTyxjWDNGaWxPLENBc3JCbmxPLDBDQUNFLGdDQXZyQmlpTyxDQXdyQmppTyxlQXhyQmlqTyxDVzBGbmpPLGdCWDFGb2tPLENXMkZsa08sY1gzRmlsTyxDQXNyQm5sTywyQ0FDRSxnQ0F2ckJpaU8sQ0F3ckJqaU8sZUF4ckJpak8sQ1cwRm5qTyxnQlgxRm9rTyxDVzJGbGtPLGNYM0ZpbE8sQ0FzckJubE8saUNBQ0UsZ0NBdnJCaWlPLENBd3JCamlPLGVBeHJCaWpPLENXMEZuak8sZ0JYMUZva08sQ1cyRmxrTyxjWDNGaWxPLENBNnJCbmxPLGtCQUNFLGdCQTlyQm9uTyxDVytGdG5PLGVYL0Zzb08sQ1dnR3BvTyxlWGhHb3BPLENXbUd0cE8sZ0JBQ0UsV1hwR2dyTyxDV3FHaHJPLGlCWHJHa3NPLENXc0dsc08saUJYdEdvdE8sQ0F5c0J0dE8sY1czbEJBLGlCWDlHc3ZPLENXK0dwdk8sV1gvR2d3TyxDQThzQmx3TyxxQlk1c0JBLGFaRnF5TyxDQXF0QnJ5Tyx3Q1kvc0JJLGtCWk40MU8sQ1lPNTFPLGVaUDQyTyxDWVE1Mk8sY1pSMjNPLENBMnRCLzNPLG1CWS9zQkksYVpaNDVPLENZYTU1TyxpQlpiODZPLENZYzk2TyxpQlpkZzhPLENZZ0JwOE8sbUJBQ0ksYVpqQmkrTyxDQXF1QnIrTyxtQllodEJJLGlCWnJCc2dQLENBdXVCeGdQLGFBdnVCc2hQLENZdUJwaFAsTVp2QjJoUCxDWXdCdmhQLE9aeEIraFAsQ0EwdUJyaVAsa0NBQUEsQ0FBQSw4QkFBQSxDQUFBLDBCQTF1QmdrUCxDQTZ1QmxrUCxjQUNFLGlCQTl1QmdtUCxDQSt1QmhtUCx3QkEvdUJ5blAsQ1lnQzNuUCxhWmhDeW9QLENZZ0N6b1Asc0JaaENncVAsQ1l1RDVwUCwwQkFDSSxpQlp4RG9zUCxDWTJEeHNQLGFaM0RzdFAsQ0FzdkIxdFAsY1k3c0JBLDZCWnpDOHZQLENZeUM5dlAscUJaekM4dlAsQ1kwQzF2UCwwQloxQ3F4UCxDWTJDcnhQLHdCWjNDOHlQLENZOEM5eVAsb0JaOUNpM1AsQ1krQ2ozUCxxQlovQ2s0UCxDWStDbDRQLGdCWi9DazRQLENBZ3dCcDRQLHNCQWh3QjI1UCxDWWlEejVQLGtCWmpENDZQLENZbUR4NlAsdUNabkRnOVAsQ1l1RHA5UCxZWmd0QkYsZUF2d0JrL1AsQ1k0RDUrUCxRWjVEcS9QLENBMHdCMy9QLFNBMXdCcWdRLENBNndCdmdRLGtCWTVzQkksU1pqRStoUSxDQWl4Qm5pUSxxQlk5c0JJLGNabkVta1EsQ1lvRS9qUSxXWnBFMmtRLENBdXhCbmxRLHFEQUdFLDJCQTF4Qjh1USxDWWdGeHVRLCtCQUFBLENBQUEsdUJaaEZxeVEsQ0EreEI3eVEsYUFDRSxpQkFoeUIwMFEsQ1l1RngwUSxNWnZGKzBRLENZd0YzMFEsS1p4RmkxUSxDQW15QnYxUSxhQW55QnEyUSxDWTJGbjJRLGdCWjNGbzNRLENZNEZoM1EsaUJaNUZrNFEsQ0F5eUIxNFEsdUNZeHNCQSxVWmpHNDdRLENZa0d4N1EsYVpsR3M4USxDYU8xOFEsbUJBQ0UsVWJScytRLENhVXQrUSw0QkFDRSxpQmJYa2hSLENBc3pCdGhSLGFhdnlCSSxVYmYwaVIsQ2FnQjFpUixXYmhCc2pSLENhaUJ0alIsY2JqQnFrUixDYWtCcmtSLFlibEJrbFIsQ0E2ekJ0bFIsdUJBQ0UsV0E5ekJ1blIsQ0E2MEJ6blIsaURhaHpCRSxhYjdCc3JSLENhK0J4clIsK0JBQ0UsWWJoQ2t1UixDQXkwQnB1UiwwQkFDRSxtQkExMEJneFIsQ2F5Q2x4Uiw0QkFDRSxpQmIxQzh6UixDQXExQmgwUiw2QkFDRSxhQXQxQnkyUixDYThDMzJSLFdiOUN1M1IsQ2ErQ3IzUiw0QmIvQ2s1UixDY0VwNVIsMEJBQ0UsWWRIeTdSLENBKzFCMzdSLGFjeDFCQSxrQmRQMjlSLENjUXo5UixpQmRSMitSLENBbzJCNytSLDRCQUNFLDJDQXIyQm9qUyxDQXUyQnRqUyxtQmN4MUJJLFVkZmlsUyxDQXkyQm5sUyxpQkF6MkJxbVMsQ0EwMkJybVMsVUExMkJnblMsQ2NtQmxuUyxLZG5Cd25TLENjb0J0blMsVWRwQmlvUyxDY3FCam9TLFlkckI4b1MsQ2NzQjlvUywyQmR0QjBxUyxDQSsyQjFxUyx1QkEvMkJxc1MsQ0FnM0Jyc1MscUJBaDNCMnRTLENBbTNCN3RTLG1CY24wQkUsNkJkaERxd1MsQ2NnRHJ3Uyw2QmRoRHF3UyxDY2dEcndTLHNCZGhEcXdTLENja0Ryd1MsdUJkbEQ0eFMsQ2NrRDV4UyxvQmRsRDR4UyxDY2tENXhTLHNCZGxENHhTLENBczNCNXhTLHdCQUFBLENBQUEscUJBQUEsQ0FBQSxrQkF0M0IreVMsQ0F5M0JqelMsa0JBQ0UsZ0JBMTNCazFTLENjeURwMVMsZWR6RG8yUyxDYzBEbDJTLFlkMUQrMlMsQ0E2M0IvMlMsbUJBQUEsQ0FBQSxnQkE3M0JnNFMsQ0FnNEJsNFMsbUJjNXpCRSxlZHBFbTZTLENjcUVuNlMsZ0JkckVvN1MsQ0FxNEJ0N1Msb0JjNXpCRSxpQmR6RTA5UyxDYzBFMTlTLG1CZDFFOCtTLENjMkU5K1Msa0JkM0VpZ1QsQ0EyNEJuZ1QsbUJBQ0UsZUE1NEJvaVQsQ0ErNEJ0aVQsV0FDRSxpQkFoNUJpa1QsQ2NpRi9qVCxvQmRqRm9sVCxDQW81QnhsVCxrQmN6ekJBLGNkM0Z5blQsQ2M4RnZuVCxtQmQ5RjJvVCxDQXU1QjNvVCxrQkF2NUI4cFQsQ0F3NUI5cFQsYUF4NUI0cVQsQ0EyNUI5cVQsd0JjdnpCRSxpQmRwR3V0VCxDQTY1QnZ0VCxTQTc1Qml1VCxDQWc2Qm51VCxpQmN2ekJJLGVkekdnd1QsQ0FtNkJsd1Qsa0JBbjZCcXhULENBdzZCdnhULGtCY3R6QkUsa0JkbEgwelQsQ2NtSHh6VCxpQmRuSDAwVCxDY29IMTBULGtDQUFBLENBQUEsMEJkcEhxMlQsQ0E4NkJ6MlQsd0JjdHpCSSw0QkFBQSxDQUFBLHdCQUFBLENBQUEsb0JkeEhrNVQsQ0FrN0J0NVQsa0JjdHpCTSxpQmQ1SG83VCxDQXM3QjE3VCxrQmN0ekJNLGlCZGhJdzlULENjaUl4OVQsS2RqSTg5VCxDQXk3QmwrVCw0Q0F6N0JpaFUsQ0EwN0JqaFUsTUExN0J3aFUsQ2V1QjFoVSwwQmZ2QjhpVSxDZXVCOWlVLDBCZnZCOGlVLENldUI5aVUsbUJmdkI4aVUsQ2V3QjVpVSwyQmZ4QmtrVSxDZXdCbGtVLDRCZnhCa2tVLENld0Jsa1UseUJmeEJra1UsQ2V3QmxrVSxxQmZ4QmtrVSxDZTBCbGtVLHdCZjFCcWxVLENlMEJybFUscUJmMUJxbFUsQ2UwQnJsVSxrQmYxQnFsVSxDZTJCcmxVLHVCZjNCNG1VLENlMkI1bVUsb0JmM0I0bVUsQ2UyQjVtVSxzQmYzQjRtVSxDQSs3QjVtVSxVQS83QnVuVSxDQWc4QnZuVSxXQWg4Qm1vVSxDZWlDcm9VLFNmakMrb1UsQ2VrQzdvVSxrQ0FBQSxDQUFBLDBCZmxDd3FVLENBcThCMXFVLHdCQUNFLGNBdDhCK3NVLENBdThCL3NVLFNBdjhCeXRVLENBMDhCM3RVLDZCQUNFLFVBMzhCaXdVLENBODhCbndVLGlCQUNFLHFCQUFBLENBQUEsa0JBLzhCcXlVLENBazlCdnlVLG1CZ0I1OEJFLGNoQk51MFUsQ2dCT3YwVSxtQmhCUDIxVSxDZ0JRMzFVLGtCaEJSODJVLENBdzlCaDNVLHlCZ0IxOEJBLHdCaEJkbTZVLENnQmVqNlUsVWhCZjQ2VSxDZ0JnQjU2VSxTaEJoQnM3VSxDZ0JpQnQ3VSxpQmhCakJ3OFUsQ2dCbUJ4OFUsa0JBQ0UsYWhCcEJzK1UsQ2dCcUJ0K1UsZWhCckJzL1UsQ0FvK0IxL1UsdUJnQjM4QkksZ0JoQnpCOGhWLENnQjBCOWhWLGVoQjFCOGlWLENnQjJCOWlWLGlCaEIzQmdrVixDQXcrQmxrVixrQ0FBQSxDQUFBLDBCQXgrQjZsVixDQTIrQi9sViw4QmdCMzhCRSxVaEJoQ3VvVixDZ0JpQ3ZvVixpQmhCakN5cFYsQ2dCa0N6cFYsaUJoQmxDMnFWLENnQm1DM3FWLFNoQm5DcXJWLENnQm9DcnJWLFVoQnBDZ3NWLENBaS9CaHNWLE1Bai9CdXNWLENnQnFDdnNWLHdCaEJyQ2d1VixDZ0JzQzl0VixPaEJ0Q3N1VixDQW8vQnh1VixrQ0FBQSxDQUFBLDhCQUFBLENBQUEsMEJBcC9CbXdWLENBdS9CcndWLFdnQjU4Qk0sZ0VoQjNDcTBWLENnQjJDcjBWLHdEaEIzQ3EwVixDZ0I0Q3IwVixpQmhCNUN1MVYsQ2dCNkN2MVYsb0JoQjdDNDJWLENBNi9CbDNWLGtCZ0IzOEJFLGNoQmxEaTVWLENnQm9ELzRWLGVoQnBEKzVWLENBZ2dDajZWLG1CQWhnQ3E3VixDZ0JzRHI3VixrQmhCdER3OFYsQ0FvZ0MxOFYsb0JnQjM4QkksZWhCekQwK1YsQ0F3Z0M5K1YsWWdCMzhCTSxnQmhCN0RxZ1csQ2dCOERyZ1csb0JoQjlEMGhXLENBNmdDaGlXLG1CZ0JyOEJBLGlCaEJ4RXFrVyxDZ0J5RW5rVyxjaEJ6RWtsVyxDZ0IwRWxsVyxlaEIxRWttVyxDZ0IyRWxtVyxnQmhCM0VtblcsQ2dCNEVublcsa0JoQjVFc29XLENnQjhFeG9XLHVCQUNFLG1CaEIvRTBxVyxDZ0IrRTFxVyxtQmhCL0UwcVcsQ2dCK0UxcVcsWWhCL0UwcVcsQ0F1aEMxcVcscUJBdmhDK3JXLENBdWhDL3JXLGtCQXZoQytyVyxDQXVoQy9yVyxvQkF2aEMrclcsQ0F3aEMvclcsK0JBeGhDK3RXLENpQkFqdVcsaUJqQkFtdlcsQ0E0aENudlcsOEJpQnhoQ0EsaUJqQkpveVcsQ2lCS2x5VyxVakJMNnlXLENpQk03eVcsV2pCTnl6VyxDaUJPenpXLE1qQlBnMFcsQ2lCUWgwVyxVakJSMjBXLENpQlMzMFcsV2pCVHUxVyxDQW1pQ3YxVyxpQkFuaUN5MlcsQ0FvaUN6Mlcsd0JBcGlDazRXLENBdWlDcDRXLGtCaUJuaENBLFdqQnBCazZXLENpQnFCaDZXLG1CakJyQjY2VyxDaUJxQjc2VyxtQmpCckI2NlcsQ2lCcUI3NlcsWWpCckI2NlcsQ0EwaUM3Nlcsa0JBMWlDNDdXLENBMGlDNTdXLGNBMWlDNDdXLENBMmlDNTdXLHdCQTNpQys4VyxDQTJpQy84VyxxQkEzaUMrOFcsQ0EyaUMvOFcsa0JBM2lDKzhXLENpQnlCajlXLGlCakJ6Qm0rVyxDaUIwQmorVyxXakIxQjYrVyxDQWdqQy8rVyx3QmlCbGhDRSxpQmpCOUJ1aFgsQ2lCc0R2aFgsbUJqQnREMmlYLENpQnFDM2lYLDhEakJvaUNBLFVBemtDc25YLENBMGtDdG5YLGlCQTFrQ3dvWCxDaUI0RXRvWCxNakI1RTZvWCxDaUI2RTdvWCxTakI3RXVwWCxDaUIrRXZwWCxXakIvRW1xWCxDQStrQ3JxWCx3QkEva0M4clgsQ2lCcUM5clgsOEJBT0UsUWpCNUNvdVgsQ0ErakN4dVgsd0JpQnpnQ0UsbUJqQnREa3hYLENBbWtDcHhYLHlCQUNFLGdCQXBrQzR6WCxDaUI2RDV6WCxpQmpCN0Q4MFgsQ0F3a0NoMVgsZ0NpQjcvQkUsS2pCM0VxM1gsQ0FrbEN2M1gsd0JpQjcvQkksZ0JqQnJGNDVYLENpQnNGNTVYLGVqQnRGNDZYLENBcWxDOTZYLGNBcmxDNjdYLENBc2xDNzdYLGdCQXRsQzg4WCxDQXlsQ2g5WCx1QkFDRSxlQTFsQ3EvWCxDQTZsQ3YvWCxTQUNFLGdCQTlsQytnWSxDQWltQ2poWSxpQmlCMzNCTSxtQmpCdE95aVksQ2lCc096aVksbUJqQnRPeWlZLENpQnNPemlZLFlqQnRPeWlZLENBbW1DN2lZLHdCQW5tQ2drWSxDQW1tQ2hrWSxxQkFubUNna1ksQ0FtbUNoa1ksa0JBbm1DZ2tZLENpQnlPOWpZLHVCakJ6T3FsWSxDaUJ5T3JsWSxvQmpCek9xbFksQ2lCeU9ybFksc0JqQnpPcWxZLENpQjBPbmxZLGlCakIxT3FtWSxDaUIyT3JtWSxrQmpCM093blksQ0F5bUM5blksc0JpQnozQkksYWpCaFA4cFksQ0E2bUNscVkscUJpQngzQkksZ0JqQnJQb3NZLENBaW5DeHNZLGdCQUNFLGdCQWxuQ211WSxDQWtuQ251WSxZQWxuQ211WSxDQW1uQ251WSx5QkFubkN1d1ksQ0FtbkN2d1ksbUNBbm5DdXdZLENpQm1RendZLHNCakJuUTB5WSxDaUJtUTF5WSxnQ2pCblEweVksQ2lCb1F4eVksb0JqQnBRNnpZLENpQnFRN3pZLGlCakJyUSswWSxDQXluQ2oxWSwyQmlCaDNCRSxzQmpCelFxNFksQ2lCeVFyNFkseUJqQnpRcTRZLENpQjBRbjRZLG1CQUFBLENBQUEsc0JqQjFRMDVZLENpQitRMTVZLDRCQUNFLHNCakJoUjg4WSxDaUJnUjk4WSx5QmpCaFI4OFksQ2lCaVI5OFksaUJBQUEsQ0FBQSxtQmpCalJrK1ksQ2tCMEZ4K1ksNEJBQ0Usc0JsQjNGNGhaLENrQjJGNWhaLHlCbEIzRjRoWixDQXFvQzVoWixpQkFBQSxDQUFBLG1CQXJvQ2dqWixDQXdvQ2xqWix3RGtCeGlDRSxzQmxCaEdrb1osQ2tCZ0dsb1oseUJsQmhHa29aLENrQmlHbG9aLGlCbEJqR3NwWixDa0JpR3RwWixtQmxCakdzcFosQ0Eyb0N0cFosY0FBQSxDQUFBLGdCQTNvQ3VxWixDQThvQ3pxWiw0QmtCdGlDRSxpQkFBQSxDQUFBLG1CbEJ4R3V0WixDQW9wQ3p0WixrRGtCcmlDRSxhbEIvR3V4WixDa0JnSHZ4WixVbEJoSGt5WixDQXVwQ2x5WixXQXZwQzh5WixDQTBwQ2h6WiwyQmtCaGlDRSxtQkFBQSxDQUFBLGdCbEIxSDAxWixDQWlxQzUxWixjQUNFLGlCQWxxQzAzWixDQXFxQzUzWixrREFDRSxzQkF0cUNzOFosQ0FzcUN0OFoseUJBdHFDczhaLENrQm9JeDhaLGNBQUEsQ0FBQSxnQmxCcEl5OVosQ0EwcUN6OVosa0RrQmxpQ0Usc0JsQnhJbWlhLENrQndJbmlhLHlCbEJ4SW1pYSxDa0J3SW5pYSxpQmxCeEl1amEsQ2tCd0l2amEsbUJsQnhJdWphLENrQnlJcmphLGNBQUEsQ0FBQSxnQmxCeklza2EsQ0FnckMxa2Esa0RrQm5pQ0ksc0JsQjdJa3BhLENrQjZJbHBhLHlCbEI3SWtwYSxDa0I4SWxwYSxtQmxCOUl5cWEsQ2tCOEl6cWEsc0JsQjlJeXFhLENrQitJenFhLGlCbEIvSTZyYSxDa0IrSTdyYSxtQmxCL0k2cmEsQ2tCZ0o3cmEsY0FBQSxDQUFBLGdCbEJoSjhzYSxDa0JxSmx0YSxrREFDRSxzQmxCdEo0eGEsQ2tCc0o1eGEseUJsQnRKNHhhLENrQnVKNXhhLGNBQUEsQ0FBQSxnQmxCdko2eWEsQ0E0ckMveWEsbURrQmppQ0Esc0JsQjNKNDNhLENrQjJKNTNhLHlCbEIzSjQzYSxDa0I0SjEzYSxpQmxCNUo4NGEsQ2tCNEo5NGEsbUJsQjVKODRhLENrQjZKOTRhLGNBQUEsQ0FBQSxnQmxCN0orNWEsQ2tCa0svNWEsUUFBQSxnQmxCbEtvN2EsQ2tCa0twN2EsWWxCbEtvN2EsQ2tCbUtsN2EseUJsQm5LczlhLENrQm1LdDlhLG1DbEJuS3M5YSxDQXFzQ3g5YSxzQkFyc0N5L2EsQ0Fxc0N6L2EsZ0NBcnNDeS9hLENBc3NDei9hLGtCQXRzQzRnYixDQThzQzlnYiw2RGtCL2hDRSxzQmxCL0srbmIsQ2tCK0svbmIsa0JsQi9LK25iLENrQmdMN25iLG1CQUFBLENBQUEsZWxCaEw2b2IsQ21CS2pwYixVQUNFLG9CbkJOOHFiLENBdXRDaHJiLGlCQUNFLGlCQXh0Q2l0YixDQXl0Q2p0YixlQXp0Q2l1YixDbUJZbnViLGtCbkJac3ZiLENBNnRDdHZiLGlCbUI1c0NFLGdCbkJqQmt4YixDbUJpQmx4YixZbkJqQmt4YixDbUJrQmh4Yix3Qm5CbEI4eWIsQ21Ca0I5eWIsNkJuQmxCOHliLENBZ3VDaHpiLGFBaHVDOHpiLENBbXVDaDBiLG9CbUJ2c0NJLGtCbkI1Qm0yYixDbUI2QmoyYixvQm5CN0JzM2IsQ0FzdUMxM2Isa0NBQUEsQ0FBQSwwQkF0dUNxNWIsQ0F5dUN2NWIsMEJBQ0UsNEJBQUEsQ0FBQSx3QkFBQSxDQUFBLG9CQTF1Q284YixDQTZ1Q3Q4YixpQm9CanVDRSxjcEJabytiLENvQmFwK2IsYXBCYmsvYixDb0JjbC9iLGlCcEJkb2djLENvQmVwZ2Msa0JwQmZ1aGMsQ0F5dkN6aGMsa0NBQ0UsaUJBMXZDMmtjLENBMndDM2tjLGlCQTN3QzZsYyxDQTh2Qy9sYyw4Q29CM3RDQSxpQnBCbkNpcWMsQ29Cb0MvcGMsVXBCcEMwcWMsQ29CcUMxcWMsd0JwQnJDbXNjLENvQnNDbnNjLFNwQnRDNnNjLENvQnVDN3NjLFVwQnZDd3RjLENvQndDeHRjLE9wQnhDZ3VjLENBcXdDaHVjLE9BcndDd3VjLENBc3dDeHVjLGtDQUFBLENBQUEsOEJBQUEsQ0FBQSwwQkF0d0Ntd2MsQ0F5d0Nyd2MsbUNvQm50Q0UsZ0JwQnREdXpjLENvQnVEdnpjLG9CcEJ2RDQwYyxDQW94QzkwYywyRUFFRSxVQXR4Q2s2YyxDQXl4Q3A2YyxxQm9CeHRDRSxjcEJqRXM4YyxDQTZ4Q3g4YyxzQm9CeHRDRSxjcEJyRTIrYyxDb0JzRTMrYyxhcEJ0RXkvYyxDQXN5QzMvYyxhb0J4dENJLGlCcEI5RXNoZCxDb0IrRXRoZCxVcEIvRWlpZCxDb0JnRmppZCwyQ3BCaEZnbGQsQ0EweUNsbGQsaUJBMXlDb21kLENBNnlDdG1kLG1CQUNFLG1CQUFBLENBQUEsbUJBQUEsQ0FBQSxZQTl5Q29vZCxDQWl6Q3RvZCxxQ3FCOXlDRSxnQnJCSDByZCxDQXF6QzVyZCwwQ3FCOXlDSSxXckJQK3VkLENBeXpDbnZkLHdEcUI5eUNJLGFyQlhzemQsQ0FpMEMxemQsc0JBQ0UsNENBbDBDMjNkLENBbzBDNzNkLGFxQjd5Q0UsMkJyQnZCbzZkLENxQndCcDZkLHVCckJ4Qm04ZCxDQXUwQ244ZCxxQkF2MEN5OWQsQ0F3MEN6OWQsaUJBeDBDMitkLENxQjJCNytkLGVyQjNCNi9kLENxQjRCMy9kLGtCckI1QjhnZSxDcUI4QjlnZSxjQUNFLGFyQi9Cd2llLENxQmdDeGllLGNyQmhDdWplLENBazFDM2plLGFxQjl5Q0ksbUJyQnBDd2xlLENBczFDNWxlLG1CQUNFLGVBdjFDNm5lLENBdzFDN25lLGNBeDFDNG9lLENxQjJDOW9lLGFyQjNDNHBlLENxQjRDMXBlLG1CckI1QzhxZSxDcUI2QzlxZSxrQnJCN0Npc2UsQ0E4MUNuc2Usa0JxQjd5Q0Esb0JyQmpEeXVlLENxQmlEenVlLGlCckJqRHl1ZSxDcUJpRHp1ZSxtQnJCakR5dWUsQ3FCa0R2dWUsa0JyQmxEMHZlLENxQm1EMXZlLGtCckJuRDZ3ZSxDcUJzRC93ZSx1QkFDRSw2Q3JCdkRrMWUsQ0F1MkNwMWUsaUNBZUUsbUJBdDNDZzRlLENBczNDaDRlLG1CQXQzQ2c0ZSxDQXMzQ2g0ZSxZQXQzQ2c0ZSxDQXUzQ2g0ZSx3QkF2M0NtNWUsQ0F1M0NuNWUscUJBdjNDbTVlLENBdTNDbjVlLGtCQXYzQ201ZSxDcUI0RXI1ZSx1QkFBQSxDQUFBLG9CQUFBLENBQUEsc0JyQjVFNDZlLENBdTJDNTZlLGNBQ0UsMkJBeDJDbzllLENBeTJDcDllLHVCQXoyQ20vZSxDcUI2RG4vZSxxQnJCN0R5Z2YsQ3FCOER2Z2YsZ0JyQjlEd2hmLENBaTNDNWhmLG1CcUIzeUNFLFVyQnRFd2pmLENxQnVFeGpmLFdyQnZFb2tmLENxQndFcGtmLGtDckJ4RXVtZixDcUJ5RXZtZixpQnJCekV5bmYsQ3FCNkV6bmYsaUJyQjdFMm9mLENxQjhFM29mLGtDQUFBLENBQUEsMEJyQjlFc3FmLENxQmlGdHFmLHlDckJvMENBLGlCQXI1Q211ZixDc0JjbnVmLFV0QmQ4dWYsQ3NCb0I5dWYsMkJ0QnBCMHdmLENxQmlGMXdmLDBCQUVFLHlDckJuRjYwZixDcUJ1Ri8wZixVckJ2RjAxZixDcUJ3RngxZixXckJ4Rm8yZixDQXM0Q3gyZix5QkFDRSw0QkFBQSxDQUFBLHdCQUFBLENBQUEsb0JBdjRDbzVmLENBMDRDdDVmLFNBQ0UsZUEzNEM2NmYsQ3NCSy82ZixpQnRCTGk4ZixDc0JNLzdmLGtCdEJOazlmLENBZzVDcDlmLHdCQUNFLDJDQWo1Q3VoZ0IsQ3NCWXpoZ0IsZUFDRSxVdEJia2pnQixDc0JlaGpnQixRdEJmeWpnQixDQXc1QzNqZ0IsTUF4NUNra2dCLENBeTVDbGtnQixPQXo1QzBrZ0IsQ3NCa0I1a2dCLFl0QmxCeWxnQixDc0JtQnZsZ0IsVXRCbkJrbWdCLENzQnFCbG1nQix1QnRCckJpb2dCLENzQnNCam9nQixxQnRCdEJ1cGdCLENzQjZCenBnQixvQkFFRSxtQnRCL0J3cmdCLENzQitCeHJnQixtQnRCL0J3cmdCLENzQitCeHJnQixZdEIvQndyZ0IsQ3NCZ0N4cmdCLHdCdEJoQzJzZ0IsQ3NCZ0Mzc2dCLHFCdEJoQzJzZ0IsQ3NCZ0Mzc2dCLGtCdEJoQzJzZ0IsQ3NCb0Mzc2dCLHlCQUFBLENBQUEsb0J0QnBDZ3VnQixDc0I2Q2h1Z0Isa0JBQ0Usa0J0QjlDbXdnQixDQXk2Q3J3Z0IsaUJBejZDdXhnQixDQTQ2Q3p4Z0IseUJBQ0UsaUJBNzZDbTBnQixDQTg2Q24wZ0Isc0NBOTZDMDJnQixDc0J3RTUyZ0IsV3RCeEV3M2dCLENzQnlFdDNnQixZdEJ6RW00Z0IsQ0FpN0NuNGdCLE1BajdDMDRnQixDQWs3QzE0Z0IsT0FsN0NrNWdCLENBbTdDbDVnQixVQW43QzY1Z0IsQ0FvN0M3NWdCLHNDQXA3QzQ3Z0IsQ0FvN0M1N2dCLGtDQXA3QzQ3Z0IsQ0FvN0M1N2dCLDhCQXA3QzQ3Z0IsQ0FxN0M1N2dCLG9CQXI3Q2k5Z0IsQ0F3N0NuOWdCLGdCQUNFLGNBejdDZy9nQixDQTA3Q2gvZ0IsbUJBMTdDb2doQixDQTI3Q3BnaEIsa0JBMzdDdWhoQixDQTg3Q3poaEIsZUFDRSxlQS83Q3NqaEIsQ0FnOEN0amhCLGtCQWg4Q3lraEIsQ0FtOEMza2hCLGVBQ0UsVUFwOENtbWhCLENBcThDbm1oQixlQXI4Q21uaEIsQ0FzOENubmhCLGtCQXQ4Q3NvaEIsQ0F5OEN4b2hCLGdDQUNFLGtCQTE4Q3lyaEIsQ0E2OEMzcmhCLG9CQUNFLFVBOThDd3RoQixDQSs4Q3h0aEIsbUJBLzhDcXVoQixDQSs4Q3J1aEIsbUJBLzhDcXVoQixDQSs4Q3J1aEIsWUEvOENxdWhCLENBZzlDcnVoQix3QkFoOUNtd2hCLENBZzlDbndoQixxQkFoOUNtd2hCLENBZzlDbndoQiw2QkFoOUNtd2hCLENBaTlDbndoQixjQWo5Q2t4aEIsQ0FrOUNseGhCLGVBbDlDa3loQixDQW05Q2x5aEIsYUFuOUNnemhCLENBbzlDaHpoQixrQkFwOUNtMGhCLENBdTlDcjBoQixlQUNFLFVBeDlDNjFoQixDQXk5QzcxaEIsVUF6OUN3MmhCLENBMDlDeDJoQixrQkExOUMyM2hCLENBNjlDNzNoQixrQ0FDRSxlQTk5QzY2aEIsQ0ErOUM3NmhCLFVBLzlDdzdoQixDQWcrQ3g3aEIsa0JBaCtDMjhoQixDQXUrQzc4aEIsMkZBQ0Usa0JBeCtDNGtpQixDQTIrQzlraUIsbURBQ0Usa0JBNStDa3BpQixDQSsrQ3BwaUIsZ0JBQ0UsZ0JBaC9DbXJpQixDQWkvQ25yaUIsYUFqL0Npc2lCLENBbS9DanNpQix3QkFBQSxDQUFBLHFCQUFBLENBQUEsNkJBbi9DK3RpQixDQXMvQ2p1aUIsZ0JBQ0UscUJBQUEsQ0FBQSxrQkF2L0Nrd2lCLENBMC9DcHdpQixpQ0FrQkUsaUJBNWdEcXppQixDQTgvQ3Z6aUIsZ0JBQ0UsVUEvL0NnMWlCLENBZ2dEaDFpQixXQWhnRDQxaUIsQ0FpZ0Q1MWlCLGFBamdEMDJpQixDQXFnRDUyaUIsZ0JBQ0UsaUJBdGdENDRpQixDQXVnRDU0aUIsZ0JBdmdENjVpQixDQXdnRDc1aUIsbUJBQUEsQ0FBQSxtQkFBQSxDQUFBLFlBeGdEMDZpQixDQStnRDU2aUIsZ0JBQ0UscUJBQUEsQ0FBQSxrQkFoaEQ2OGlCLENBbWhELzhpQixzQkFDRSxrQkFwaERzL2lCLENBdWhEeC9pQiw4Q0FBMkIsNENBdmhEMGpqQixDQXloRHJsakIsbUJBQW9CLDZDQXpoRGtvakIsQ0EyaER0cGpCLG9CQUFxQiw2Q0EzaERtc2pCIiwiZmlsZSI6Im1haW4ubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnM6MzAwLHJlZ3VsYXIsNTAwLDYwMCw3MDAsODAwLDMwMGl0YWxpYyxpdGFsaWMsNTAwaXRhbGljLDYwMGl0YWxpYyw3MDBpdGFsaWMsODAwaXRhbGljJmRpc3BsYXk9c3dhcCk7XHJcbmJvZHkge1xyXG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgc2Fucy1zZXJpZjtcclxufVxyXG5AaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9TW9udHNlcnJhdDoxMDAsMjAwLDMwMCxyZWd1bGFyLDUwMCw2MDAsNzAwLDgwMCw5MDAsMTAwaXRhbGljLDIwMGl0YWxpYywzMDBpdGFsaWMsaXRhbGljLDUwMGl0YWxpYyw2MDBpdGFsaWMsNzAwaXRhbGljLDgwMGl0YWxpYyw5MDBpdGFsaWMmZGlzcGxheT1zd2FwKTtcclxuLy8gYm9keSB7XHJcbi8vICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuLy8gfVxyXG5cclxuLy8gQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2FuczozMDAscmVndWxhciw1MDAsNjAwLDcwMCw4MDAsMzAwaXRhbGljLGl0YWxpYyw1MDBpdGFsaWMsNjAwaXRhbGljLDcwMGl0YWxpYyw4MDBpdGFsaWMmZGlzcGxheT1zd2FwKTtcclxuLy8gQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU1vbnRzZXJyYXQ6MTAwLDIwMCwzMDAscmVndWxhciw1MDAsNjAwLDcwMCw4MDAsOTAwLDEwMGl0YWxpYywyMDBpdGFsaWMsMzAwaXRhbGljLGl0YWxpYyw1MDBpdGFsaWMsNjAwaXRhbGljLDcwMGl0YWxpYyw4MDBpdGFsaWMsOTAwaXRhbGljJmRpc3BsYXk9c3dhcCk7XHJcbi8vIEBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Qb3BwaW5zOjEwMCwxMDBpdGFsaWMsMjAwLDIwMGl0YWxpYywzMDAsMzAwaXRhbGljLHJlZ3VsYXIsaXRhbGljLDUwMCw1MDBpdGFsaWMsNjAwLDYwMGl0YWxpYyw3MDAsNzAwaXRhbGljLDgwMCw4MDBpdGFsaWMsOTAwLDkwMGl0YWxpYyk7XHJcbi8vIEBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Qb3BwaW5zOnJlZ3VsYXIsNTAwLDYwMCZkaXNwbGF5PXN3YXApO1xyXG4vLyBAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1SdWJpaytTY3JpYmJsZSZkaXNwbGF5PXN3YXAnKTtcclxuXHJcbi8vIEBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9UGFjaWZpY28mZGlzcGxheT1zd2FwKTtcclxuLy8gYm9keSB7XHJcbi8vICAgZm9udC1mYW1pbHk6ICdQYWNpZmljbycsIGhhbmR3cml0aW5nO1xyXG4vLyB9XHJcbiIsIi8vIGxpYnNcclxuLy8gQGltcG9ydCAnLi4vLi4vbm9kZV9tb2R1bGVzL3NsaWNrLWNhcm91c2VsL3NsaWNrL3NsaWNrLnNjc3MnO1xyXG4vLyBAaW1wb3J0ICcuLi8uLi9ub2RlX21vZHVsZXMvQGZhbmN5YXBwcy9mYW5jeWJveC9kaXN0L2pxdWVyeS5mYW5jeWJveCc7XHJcbkBpbXBvcnQgJy4uLy4uLy4uL25vZGVfbW9kdWxlcy9AZmFuY3lhcHBzL2ZhbmN5Ym94L2Rpc3QvanF1ZXJ5LmZhbmN5Ym94LmNzcyc7XHJcbkBpbXBvcnQgJy4uLy4uLy4uL25vZGVfbW9kdWxlcy9AZmFuY3lhcHBzL2ZhbmN5Ym94L2Rpc3QvanF1ZXJ5LmZhbmN5Ym94LmNzcyc7XHJcbi8vIEBpbXBvcnQgXCJ+QGZhbmN5YXBwcy9mYW5jeWJveC9kaXN0L2pxdWVyeS5mYW5jeWJveC5jc3NcIjtcclxuLy8gQGltcG9ydCAnLi4vLi4vbm9kZV9tb2R1bGVzL3JhdGV5by9zcmMvanF1ZXJ5LnJhdGV5byc7XHJcbi8vIEBpbXBvcnQgJy4uLy4uL25vZGVfbW9kdWxlcy9pb24tcmFuZ2VzbGlkZXIvY3NzL2lvbi5yYW5nZVNsaWRlcic7XHJcbi8vIEBpbXBvcnQgJy4uLy4uL25vZGVfbW9kdWxlcy9qcXVlcnktZm9ybS1zdHlsZXIvZGlzdC9qcXVlcnkuZm9ybXN0eWxlcic7XHJcbi8vIEBpbXBvcnQgJy4uLy4uL25vZGVfbW9kdWxlcy9qcXVlcnktZm9ybS1zdHlsZXIvZGlzdC9qcXVlcnkuZm9ybXN0eWxlci50aGVtZSc7XHJcblxyXG5AZnVuY3Rpb24gbWF4KCRudW1iZXJzLi4uKSB7XHJcbiAgQHJldHVybiBtI3thfXgoI3skbnVtYmVyc30pO1xyXG59XHJcbkBmdW5jdGlvbiBtaW4oJG51bWJlcnMuLi4pIHtcclxuICBAcmV0dXJuIG0je2l9bigjeyRudW1iZXJzfSk7XHJcbn0iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnM6MzAwLHJlZ3VsYXIsNTAwLDYwMCw3MDAsODAwLDMwMGl0YWxpYyxpdGFsaWMsNTAwaXRhbGljLDYwMGl0YWxpYyw3MDBpdGFsaWMsODAwaXRhbGljJmRpc3BsYXk9c3dhcCk7XG5cbkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Nb250c2VycmF0OjEwMCwyMDAsMzAwLHJlZ3VsYXIsNTAwLDYwMCw3MDAsODAwLDkwMCwxMDBpdGFsaWMsMjAwaXRhbGljLDMwMGl0YWxpYyxpdGFsaWMsNTAwaXRhbGljLDYwMGl0YWxpYyw3MDBpdGFsaWMsODAwaXRhbGljLDkwMGl0YWxpYyZkaXNwbGF5PXN3YXApO1xuXG5AaW1wb3J0ICcuLi8uLi8uLi9ub2RlX21vZHVsZXMvQGZhbmN5YXBwcy9mYW5jeWJveC9kaXN0L2pxdWVyeS5mYW5jeWJveC5jc3MnO1xuXG5AaW1wb3J0ICcuLi8uLi8uLi9ub2RlX21vZHVsZXMvQGZhbmN5YXBwcy9mYW5jeWJveC9kaXN0L2pxdWVyeS5mYW5jeWJveC5jc3MnO1xuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XG59XG5cbi5mb290ZXJfX2luZm8tdGl0bGUsXG4ubWVudV9fbGlzdC1saW5rIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9uc2VyYXRcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbiosXG4qOjphZnRlcixcbio6OmJlZm9yZSB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbnVsW2NsYXNzXSxcbm9sW2NsYXNzXSB7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmJvZHksXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wLFxudWwsXG5vbCxcbmxpLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmJsb2NrcXVvdGUsXG5kbCxcbmRkIHtcbiAgbWFyZ2luOiAwO1xufVxuXG51bFtjbGFzc10ge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5pbnB1dCxcbmJ1dHRvbixcbnRleHRhcmVhLFxuc2VsZWN0IHtcbiAgZm9udDogaW5oZXJpdDtcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbiosXG46YWZ0ZXIsXG46YmVmb3JlIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmlucHV0LFxudGV4dGFyZWEge1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBvdXRsaW5lOiAwO1xuICBvdXRsaW5lOiBub25lO1xufVxuXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGJvcmRlcjogMDtcbn1cblxuYmxvY2txdW90ZSxcbmJvZHksXG5kZCxcbmRsLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbmxpLFxub2wsXG5wLFxudWwge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbn1cblxub2xbY2xhc3NdLFxudWxbY2xhc3NdIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxub2wsXG5waWN0dXJlLFxudWwge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0O1xufVxuXG5waWN0dXJlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMDtcbiAgbGluZS1oZWlnaHQ6IDA7XG59XG5cbmEsXG5idXR0b24ge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuXG5idXR0b24ge1xuICBib3JkZXI6IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbm1ldGVyIHtcbiAgLyog0LjQu9C4IGJsb2NrIOKAlCDQv9C+INC90LXQvtCx0YXQvtC00LjQvNC+0YHRgtC4ICovXG4gIC8qINGD0LHRgNCw0YLRjCDQvdCw0YLQuNCy0L3Ri9C5INGC0LXQutGB0YIsINC10YHQu9C4INC90LUg0L3Rg9C20LXQvSAqL1xufVxuXG4vKiDQo9Cx0LjRgNCw0LXQvCDQsdGA0LDRg9C30LXRgNC90YvQtSDRgdGC0LjQu9C4IENocm9tZS9TYWZhcmkgKi9cblxuLyog0KPQsdC40YDQsNC10Lwg0YbQstC10YLQsCDQt9C90LDRh9C10L3QuNGPICovXG5cbi8qKioqKioqKioqKiovXG5cbmh0bWwsXG5ib2R5IHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbm1haW4ge1xuICBmbGV4OiAxIDAgYXV0bztcbiAgLyog0J7RgdC90L7QstC90L7QtSDRgdC+0LTQtdGA0LbQuNC80L7QtSDQt9Cw0LnQvNC10YIg0LLRgdC1INC00L7RgdGC0YPQv9C90L7QtSDQv9GA0L7RgdGC0YDQsNC90YHRgtCy0L4gKi9cbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW5TYW5zXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9PcGVuU2Fucy1SZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L09wZW5TYW5zLVJlZ3VsYXIud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDAyMC0yMjEyO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1Cb2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtQm9sZC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgdW5pY29kZS1yYW5nZTogVSswMDIwLTIyMTI7XG59XG5cbmJvZHkge1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJPcGVuU2Fuc1wiLCBcIkhlbHZldGljYVwiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogY2FsYygxNHB4ICsgMiAqICgxMDB2dyAtIDM0MHB4KSAvIDE1ODApO1xuICBsaW5lLWhlaWdodDogMS42ODc1O1xuICBmb250LXdlaWdodDogNDAwO1xuICBsZXR0ZXItc3BhY2luZzogMDtcbiAgY29sb3I6ICM1YTVhNWE7XG59XG5cbi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDExMzNweDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uY29udGFpbmVyLWZsdWlkIHtcbiAgbWF4LXdpZHRoOiAxOTIwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4udmlzdWFsbHktaGlkZGVuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBwYWRkaW5nOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG59XG5cbi5iZy1pbWcge1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5zbGljay1kb3RzIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5zbGljay1kb3RzIGxpIHtcbiAgbWFyZ2luOiAwIDE1cHg7XG59XG5cbi5zbGljay1kb3RzIGJ1dHRvbiB7XG4gIHdpZHRoOiA4cHg7XG4gIGhlaWdodDogOHB4O1xuICBmb250LXNpemU6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNjM4Mzg7XG59XG5cbi5zbGljay1kb3RzIGxpLnNsaWNrLWFjdGl2ZSBidXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlZjM1O1xufVxuXG4udGl0bGUge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogY2FsYyg1MHB4ICsgNjAgKiAoMTAwdncgLSAzNDBweCkgLyAxNTgwKTtcbiAgbGluZS1oZWlnaHQ6IDEuMjE4MTgxODE4MjtcbiAgbGV0dGVyLXNwYWNpbmc6IDBweDtcbiAgY29sb3I6ICMzNjM4Mzg7XG59XG5cbi50aXRsZS1oMiB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiBjYWxjKDM0cHggKyAyNiAqICgxMDB2dyAtIDM0MHB4KSAvIDE1ODApO1xuICBsaW5lLWhlaWdodDogMS4zMzMzMzMzMzMzO1xuICBsZXR0ZXItc3BhY2luZzogMHB4O1xuICBjb2xvcjogIzM2MzgzODtcbn1cblxuLnRpdGxlLWgzIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IGNhbGMoMjVweCArIDExICogKDEwMHZ3IC0gMzQwcHgpIC8gMTU4MCk7XG4gIGxpbmUtaGVpZ2h0OiAxLjQxNjY2NjY2Njc7XG4gIGxldHRlci1zcGFjaW5nOiAwcHg7XG4gIGNvbG9yOiAjMzYzODM4O1xufVxuXG4udGl0bGUtaDQge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogY2FsYygxNnB4ICsgNCAqICgxMDB2dyAtIDM0MHB4KSAvIDE1ODApO1xuICBsaW5lLWhlaWdodDogMS4yO1xuICBsZXR0ZXItc3BhY2luZzogMHB4O1xuICBjb2xvcjogIzM2MzgzODtcbn1cblxuLnRpdGxlLWxpbmUtY2VudGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4udGl0bGUtbGluZS1jZW50ZXI6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTc5Nzk3O1xuICBoZWlnaHQ6IDJweDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuLnRpdGxlLWxpbmUtbGVmdCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnRpdGxlLWxpbmUtbGVmdDo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAyMDBweDtcbiAgaGVpZ2h0OiAycHg7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzYzODM4O1xufVxuXG4ubGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluO1xufVxuXG4ubGluazpob3ZlciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgY29sb3I6ICMzNjM4Mzg7XG59XG5cbi5saW5rLS1hY3RpdmUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluO1xufVxuXG4ubGluay0tYWN0aXZlOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogXCJcIjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVhNWE1YTtcbiAgaGVpZ2h0OiAycHg7XG4gIHdpZHRoOiAxMDAlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDUwJTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG59XG5cbi5saW5rLS1hY3RpdmU6aG92ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gIGNvbG9yOiAjMzYzODM4O1xufVxuXG4ubGluay0tYWN0aXZlOmhvdmVyOjphZnRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNjM4Mzg7XG59XG5cbi5sb2dvIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5sb2dvX19pY29uIHtcbiAgaGVpZ2h0OiAzMnB4O1xufVxuXG4uYnVyZ2VyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHdpZHRoOiAzN3B4O1xuICBoZWlnaHQ6IDM3cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW47XG59XG5cbi5idXJnZXI6aG92ZXIge1xuICBib3gtc2hhZG93OiAwIDFweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuODUwOTgwMzkyMik7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcbn1cblxuLmlucHV0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMnB4IHNvbGlkICM1YTVhNWE7XG4gIGJvcmRlci1yYWRpdXM6IDIxcHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjc1O1xuICBjb2xvcjogIzM2MzgzODtcbiAgdHJhbnNpdGlvbjogYm9yZGVyIDAuM3MgZWFzZS1pbi1vdXQ7XG59XG5cbi5pbnB1dDpmb2N1cyxcbi5pbnB1dDpob3ZlciB7XG4gIGJvcmRlci1jb2xvcjogIzAwMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi5pbnB1dDo6cGxhY2Vob2xkZXIge1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzO1xufVxuXG4uaW5wdXQ6aG92ZXI6OnBsYWNlaG9sZGVyLFxuLmlucHV0OmZvY3VzOjpwbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4uYnRuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM2MzgzODtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogXCJPcGVuU2Fuc1wiO1xuICBib3JkZXItcmFkaXVzOiAyMXB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICBsaW5lLWhlaWdodDogMS43NTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYm9yZGVyOiAxcHggIzM2MzgzOCBzb2xpZDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciwgY29sb3IsIDAuM3MgZWFzZS1vdXQ7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG4uYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiAjMzYzODM4O1xufVxuXG4uYnRuOmFjdGl2ZSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC45Nik7XG59XG5cbi5idG4tdGFicyB7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBjb2xvcjogIzVhNWE1YTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDIxcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM1YTVhNWE7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IsIGNvbG9yLCAwLjVzIGVhc2Utb3V0O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLmJ0bi10YWJzOmFjdGl2ZSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC45Nik7XG59XG5cbi5idG4tdGFicy0tYWN0aXZlIHtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXItcmFkaXVzOiAyMXB4O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yLCBjb2xvciwgMC41cyBlYXNlLW91dDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDIxcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmVmMzU7XG4gIGNvbG9yOiAjMzYzODM4O1xuICBib3JkZXI6IDJweCBzb2xpZCAjZmZlZjM1O1xufVxuXG4uaGVhZGVyX19pbm5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZy10b3A6IDQ2cHg7XG4gIHBhZGRpbmctYm90dG9tOiA0M3B4O1xufVxuXG4ubWVudSB7XG4gIHBhZGRpbmctbGVmdDogMzVweDtcbiAgcGFkZGluZy1yaWdodDogNjBweDtcbn1cblxuLm1lbnVfX2xpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4ubWVudV9fbGlzdC1pdGVtOmZpcnN0LWNoaWxkIHtcbiAgcGFkZGluZy1yaWdodDogODBweDtcbn1cblxuLm1lbnVfX2xpc3QtbGluayB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogY2FsYygxNHB4ICsgMiAqICgxMDB2dyAtIDM0MHB4KSAvIDE1ODApO1xuICBsaW5lLWhlaWdodDogMS4zNzU7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgcGFkZGluZy1ib3R0b206IDJweDtcbn1cblxuLmxvZ28ge1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDk3cHg7XG4gIHBhZGRpbmctYm90dG9tOiAzcHg7XG59XG5cbi5oZWFkZXJfX2J0biB7XG4gIHdpZHRoOiAzN3B4O1xuICBoZWlnaHQ6IDI5cHg7XG59XG5cbi5oZWFkZXJfX2J0bi1pY29uIHtcbiAgd2lkdGg6IDM3cHg7XG4gIGhlaWdodDogMjlweDtcbn1cblxuLmhlYWRlcl9fYnRuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5yaWdodHNpZGUtbWVudSB7XG4gIHotaW5kZXg6IDIwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgbWF4LXdpZHRoOiA2OTRweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHBhZGRpbmctdG9wOiA0MHB4O1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyBlYXNlLWluO1xuICBib3gtc2hhZG93OiAtMnB4IDNweCAxN3B4IDBweCAjMDAwO1xufVxuXG5ib2R5IHtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICBtaW4td2lkdGg6IDMyMHB4O1xufVxuXG4ub3ZlcmxheSB7XG4gIHotaW5kZXg6IDEwO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgb3BhY2l0eTogMDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcbn1cblxuLnJpZ2h0c2lkZS1tZW51LS1vcGVuIH4gLm92ZXJsYXkge1xuICBvcGFjaXR5OiAxO1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgei1pbmRleDogMTA7XG59XG5cbi5yaWdodHNpZGUtbWVudS0tY2xvc2Uge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTIwJSk7XG59XG5cbi5vdmVybGF5IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgei1pbmRleDogMTA7XG4gIG9wYWNpdHk6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7XG59XG5cbi5yaWdodHNpZGUtbWVudS0tb3BlbiB+IC5vdmVybGF5IHtcbiAgb3BhY2l0eTogMTtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG59XG5cbi5yaWdodHNpZGUtbWVudV9fYnRuLWNsb3NlIHtcbiAgd2lkdGg6IDI2cHg7XG4gIGhlaWdodDogMjZweDtcbiAgbWFyZ2luLWxlZnQ6IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDYwcHg7XG59XG5cbi5yaWdodHNpZGUtbWVudV9fY29udGVudCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWF4LXdpZHRoOiA0ODVweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5yaWdodHNpZGUtbWVudV9fbG9nbyB7XG4gIHdpZHRoOiAxNTRweDtcbiAgaGVpZ2h0OiA1OHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDQxcHg7XG59XG5cbi5tZW51X190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgbGluZS1oZWlnaHQ6IDUxcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyM3B4O1xuICBtYXJnaW4tYm90dG9tOiAxN3B4O1xufVxuXG4ubWVudV9fdGl0bGU6OmFmdGVyIHtcbiAgbWF4LXdpZHRoOiAyNTJweDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ubWVudV9fdGV4dCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbWFyZ2luLWJvdHRvbTogNzVweDtcbn1cblxuLm1lbnVfX2ltYWdlIHtcbiAgbWF4LXdpZHRoOiA0ODVweDtcbn1cblxuLmZvb3RlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkZmRmZGY7XG59XG5cbi5mb290ZXJfX2lubmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nOiA2MHB4IDAgODBweDtcbn1cblxuLmZvb3Rlcl9faW5mbyB7XG4gIG1heC13aWR0aDogNTQwcHg7XG59XG5cbi5mb290ZXJfX2luZm8tdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAxNHB4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMjNweDtcbiAgY29sb3I6ICMzNjM4Mzg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLmZvb3Rlcl9faW5mby10ZXh0IHtcbiAgbWF4LXdpZHRoOiA0NzZweDtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbn1cblxuLmZvb3Rlcl9faW5mby1lbWFpbCB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIG1hcmdpbi1ib3R0b206IDIycHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmZvb3Rlcl9fZm9ybS1pY29uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4uZm9vdGVyX19mb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmZvb3Rlcl9fZm9ybS1pbnB1dCB7XG4gIHBhZGRpbmc6IDZweCAxMHB4IDZweCAxOHB4O1xuICBib3JkZXItcmFkaXVzOiAyMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSg1NCwgNTYsIDU2LCAwLjcpO1xuICBjb2xvcjogIzAwMDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5mb290ZXJfX2Zvcm0taW5wdXQ6OnBsYWNlaG9sZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5mb290ZXJfX2Zvcm0tYnRuIHtcbiAgcGFkZGluZzogNnB4IDEycHg7XG4gIG1pbi13aWR0aDogMTYwcHg7XG4gIG1hcmdpbi1sZWZ0OiA5cHg7XG59XG5cbi5mb290ZXJfX3NvY2lhbCB7XG4gIHdpZHRoOiAxMjVweDtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tbGVmdDogMTAwcHg7XG59XG5cbi5mb290ZXJfX21lbnUge1xuICBtYXJnaW4tcmlnaHQ6IDYwcHg7XG4gIHdpZHRoOiAxMjVweDtcbn1cblxuLmZvb3Rlcl9fc29jaWFsLWl0ZW0ge1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjNzA3MDcwO1xufVxuXG4uZm9vdGVyX19tZW51LWl0ZW0ge1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5saXN0X19zb2NpYWwtbGluayB7XG4gIGNvbG9yOiAjNzA3MDcwO1xuICBwYWRkaW5nLWxlZnQ6IDI4cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmZvb3Rlcl9fbWVudS1saW5rIHtcbiAgY29sb3I6ICM3MDcwNzA7XG59XG5cbi5saXN0X19zb2NpYWwtaWNvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGxlZnQ6IDA7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5cbi5mb290ZXJfX2NvcHkge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNjM4Mzg7XG4gIGNvbG9yOiAjYTFhMWExO1xuICBwYWRkaW5nOiA0MnB4IDE1cHggNDFweDtcbn1cblxuLyogU2xpZGVyICovXG5cbi5zbGljay1zbGlkZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXRvdWNoLWFjdGlvbjogcGFuLXk7XG4gIHRvdWNoLWFjdGlvbjogcGFuLXk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5zbGljay1saXN0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uc2xpY2stbGlzdDpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5zbGljay1saXN0LmRyYWdnaW5nIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBjdXJzb3I6IGhhbmQ7XG59XG5cbi5zbGljay1zbGlkZXIgLnNsaWNrLXRyYWNrLFxuLnNsaWNrLXNsaWRlciAuc2xpY2stbGlzdCB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbn1cblxuLnNsaWNrLXRyYWNrIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuXG4uc2xpY2stdHJhY2s6YmVmb3JlLFxuLnNsaWNrLXRyYWNrOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogdGFibGU7XG59XG5cbi5zbGljay10cmFjazphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xufVxuXG4uc2xpY2stbG9hZGluZyAuc2xpY2stdHJhY2sge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi5zbGljay1zbGlkZSB7XG4gIGZsb2F0OiBsZWZ0O1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDFweDtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuW2Rpcj1ydGxdIC5zbGljay1zbGlkZSB7XG4gIGZsb2F0OiByaWdodDtcbn1cblxuLnNsaWNrLXNsaWRlIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uc2xpY2stc2xpZGUuc2xpY2stbG9hZGluZyBpbWcge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uc2xpY2stc2xpZGUuZHJhZ2dpbmcgaW1nIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi5zbGljay1pbml0aWFsaXplZCAuc2xpY2stc2xpZGUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnNsaWNrLWxvYWRpbmcgLnNsaWNrLXNsaWRlIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4uc2xpY2stdmVydGljYWwgLnNsaWNrLXNsaWRlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogYXV0bztcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG59XG5cbi5zbGljay1hcnJvdy5zbGljay1oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaGVyb19faW5uZXIge1xuICBtYXJnaW4tYm90dG9tOiA3MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5uby13ZWJwIC5oZXJvX19pbm5lcjo6YWZ0ZXJ7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvYmcvaGVyby1iZy5qcGcpOyB9XG5cbi5oZXJvX19pbm5lcjo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IC0xO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDcyMnB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5oZXJvX19zbGlkZXItaXRlbSB7XG4gIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5oZXJvX19zbGlkZXItaW1nIHtcbiAgbWFyZ2luLWxlZnQ6IC0xNCU7XG4gIG1heC13aWR0aDogNzAzcHg7XG4gIGhlaWdodDogODE1cHg7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xufVxuXG4uaGVyb19fc2xpZGVyLWluZm8ge1xuICBtYXgtd2lkdGg6IDY0NXB4O1xuICBtYXJnaW4tbGVmdDogMjVweDtcbn1cblxuLmhlcm9fX3NsaWRlci10aXRsZSB7XG4gIGxpbmUtaGVpZ2h0OiAxMzVweDtcbiAgcGFkZGluZy1ib3R0b206IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDI2cHg7XG59XG5cbi5oZXJvX19zbGlkZXItdGV4dCB7XG4gIG1heC13aWR0aDogNTg1cHg7XG59XG5cbi5mdXJuaXR1cmUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDQ1cHggMCAxMDRweDtcbn1cblxuLmZ1cm5pdHVyZV9fdGl0bGUge1xuICBmb250LXNpemU6IDM2cHg7XG4gIHBhZGRpbmctYm90dG9tOiAyNXB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBjb2xvcjogIzM2MzgzODtcbn1cblxuLmZ1cm5pdHVyZV9fdGl0bGU6OmFmdGVyIHtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICB3aWR0aDogMTUlO1xufVxuXG4uZnVybml0dXJlX190ZXh0IHtcbiAgbWF4LXdpZHRoOiA3MzBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDI3cHg7XG59XG5cbi8qKi9cblxuLmNvbGxlY3Rpb25fX2l0ZW0ge1xuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW47XG59XG5cbi5jb2xsZWN0aW9uX19pdGVtOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xufVxuXG4uY29sbGVjdGlvbl9fY2FyZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmNvbGxlY3Rpb25fX2luZm8ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYxOTYwNzg0MzEpO1xuICBsZWZ0OiAwO1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW47XG59XG5cbi5jb2xsZWN0aW9uX19pbmZvOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvcGFjaXR5OiAxO1xufVxuXG4uY29sbGVjdGlvbl9faW5mbzpob3ZlciBzcGFuIHtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi5jb2xsZWN0aW9uX19pbWcge1xuICBvYmplY3QtZml0OiBjb250YWluO1xufVxuXG4uY29sbGVjdGlvbl9fdGl0bGUge1xuICBmb250LXNpemU6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAxOXB4O1xuICBtYXJnaW4tYm90dG9tOiAxOXB4O1xufVxuXG4uY29sbGVjdGlvbl9fdGl0bGU6OmFmdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzk3OTc5NztcbiAgaGVpZ2h0OiAycHg7XG4gIHdpZHRoOiA4MCU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuLmNvbGxlY3Rpb25fX3RleHQge1xuICBjb2xvcjogIzcwNzA3MDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLmNvbGxlY3Rpb25fX3RleHQgc3BhbiB7XG4gIHBhZGRpbmctbGVmdDogNnB4O1xuICBtYXJnaW4tbGVmdDogNXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW47XG59XG5cbi5jb2xsZWN0aW9uX190ZXh0IHNwYW46OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDYwJTtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVhNWE1YTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuLmFlc3RoZXRpYyB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDIwMHZ3IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41NTY4NjI3NDUxKTtcbiAgcGFkZGluZy10b3A6IDE3MnB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTU2cHg7XG59XG5cbi5hZXN0aGV0aWNfX3RpdGxlIHtcbiAgZm9udC1zaXplOiA2MHB4O1xuICBtYXgtd2lkdGg6IDUwMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjdweDtcbiAgbWFyZ2luLWJvdHRvbTogMjFweDtcbn1cblxuLmFlc3RoZXRpY19fc3VtbWFyeSB7XG4gIG1heC13aWR0aDogNTQwcHg7XG59XG5cbi53b3Jrcy1wYXRoIHtcbiAgcGFkZGluZy10b3A6IDU5cHg7XG4gIHBhZGRpbmctYm90dG9tOiAxMDlweDtcbn1cblxuLndvcmtzLXBhdGhfX3RpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDM2cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiA1MXB4O1xuICBtYXJnaW4tYm90dG9tOiAxOXB4O1xufVxuXG4ud29ya3MtcGF0aF9faXRlbXMtYm94IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzM2MzgzODtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ud29ya3MtcGF0aF9faXRlbXMtYm94OjpiZWZvcmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJvdHRvbTogLTZweDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwcHg7XG4gIGhlaWdodDogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzYzODM4O1xufVxuXG4ud29ya3MtcGF0aF9faXRlbSB7XG4gIHdpZHRoOiAyNTBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLndvcmtzLXBhdGhfX2l0ZW0tLXByb2Qge1xuICBtYXJnaW4tbGVmdDogMzE3cHg7XG59XG5cbi53b3Jrcy1wYXRoX19pdGVtLS1wcm9kOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDJweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzYzODM4O1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG59XG5cbi53b3Jrcy1wYXRoX19pdGVtLS1wcm9kLFxuLndvcmtzLXBhdGhfX2l0ZW0tLWNvbnMge1xuICBwYWRkaW5nLWJvdHRvbTogMzhweDtcbn1cblxuLndvcmtzLXBhdGhfX2l0ZW0tLXRoZXJ0IHtcbiAgcGFkZGluZy10b3A6IDM4cHg7XG4gIG1hcmdpbi1sZWZ0OiAzMDVweDtcbn1cblxuLndvcmtzLXBhdGhfX2l0ZW0tLXRoZXJ0OjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDJweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzYzODM4O1xufVxuXG4ud29ya3MtcGF0aF9faXRlbS10aXRsZSB7XG4gIG1hcmdpbi1sZWZ0OiAxM3B4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyM3B4O1xufVxuXG4ud29ya3MtcGF0aF9faXRlbS10ZXh0IHtcbiAgbWFyZ2luLXRvcDogMTNweDtcbn1cblxuLmdhbGxlcnkge1xuICBwYWRkaW5nOiAwcHggMCA5MHB4O1xufVxuXG4uZ2FsbGVyeV9fZmlsdGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcbn1cblxuLmdhbGxlcnlfX2ZpbHRlci1pdGVtIHtcbiAgbWFyZ2luOiAwIDEzcHg7XG59XG5cbi5nYWxsZXJ5X19maWx0ZXItYnRuIHtcbiAgcGFkZGluZzogNnB4IDE2cHg7XG59XG5cbi5nYWxsZXJ5X19pdGVtcyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDcsIDFmcik7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtY29sdW1uLWdhcDogMzRweDtcbiAgZ3JpZC1yb3ctZ2FwOiAzMHB4O1xufVxuXG4uZ2FsbGVyeV9faXRlbTpudGgtY2hpbGQoMSkge1xuICBncmlkLWNvbHVtbjogc3BhbiAzL3NwYW4gMztcbiAgZ3JpZC1yb3c6IHNwYW4gMi9zcGFuIDI7XG59XG5cbi5nYWxsZXJ5X19pdGVtOm50aC1jaGlsZCgyKSB7XG4gIGdyaWQtY29sdW1uOiBzcGFuIDIvc3BhbiAyO1xuICBncmlkLWNvbHVtbi1zdGFydDogNDtcbn1cblxuLmdhbGxlcnlfX2l0ZW06bnRoLWNoaWxkKDMpIHtcbiAgZ3JpZC1jb2x1bW46IHNwYW4gMi9zcGFuIDI7XG4gIGdyaWQtY29sdW1uLXN0YXJ0OiA2O1xufVxuXG4uZ2FsbGVyeV9faXRlbTpudGgtY2hpbGQoNCkge1xuICBncmlkLWNvbHVtbjogc3BhbiAyL3NwYW4gMjtcbiAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDQ7XG4gIGdyaWQtcm93LXN0YXJ0OiAyO1xufVxuXG4uZ2FsbGVyeV9faXRlbTpudGgtY2hpbGQoNSkge1xuICBncmlkLWNvbHVtbjogc3BhbiAyL3NwYW4gMjtcbiAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDY7XG4gIGdyaWQtcm93LXN0YXJ0OiAyO1xufVxuXG4uZ2FsbGVyeV9faXRlbSBwaWN0dXJlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5nYWxsZXJ5X19pdGVtIHBpY3R1cmUgaW1nIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uZ2FsbGVyeS1wYWdlIHtcbiAgcGFkZGluZy10b3A6IDEzOXB4O1xufVxuXG4uZ2FsbGVyeS5nYWxsZXJ5LXBhZ2UgLmdhbGxlcnlfX2l0ZW06bnRoLWNoaWxkKDYpIHtcbiAgZ3JpZC1jb2x1bW46IHNwYW4gMi9zcGFuIDI7XG4gIGdyaWQtcm93LXN0YXJ0OiAzO1xufVxuXG4uZ2FsbGVyeS5nYWxsZXJ5LXBhZ2UgLmdhbGxlcnlfX2l0ZW06bnRoLWNoaWxkKDcpIHtcbiAgZ3JpZC1jb2x1bW46IHNwYW4gMi9zcGFuIDI7XG4gIGdyaWQtY29sdW1uLXN0YXJ0OiAzO1xuICBncmlkLXJvdy1zdGFydDogMztcbn1cblxuLmdhbGxlcnkuZ2FsbGVyeS1wYWdlIC5nYWxsZXJ5X19pdGVtOm50aC1jaGlsZCg4KSB7XG4gIGdyaWQtY29sdW1uOiBzcGFuIDMvc3BhbiAzO1xuICBncmlkLXJvdzogc3BhbiAyL3NwYW4gMjtcbiAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDU7XG4gIGdyaWQtcm93LXN0YXJ0OiAzO1xufVxuXG4uZ2FsbGVyeS5nYWxsZXJ5LXBhZ2UgLmdhbGxlcnlfX2l0ZW06bnRoLWNoaWxkKDkpIHtcbiAgZ3JpZC1jb2x1bW46IHNwYW4gMi9zcGFuIDI7XG4gIGdyaWQtcm93LXN0YXJ0OiA0O1xufVxuXG4uZ2FsbGVyeS5nYWxsZXJ5LXBhZ2UgLmdhbGxlcnlfX2l0ZW06bnRoLWNoaWxkKDEwKSB7XG4gIGdyaWQtY29sdW1uOiBzcGFuIDIvc3BhbiAyO1xuICBncmlkLWNvbHVtbi1zdGFydDogMztcbiAgZ3JpZC1yb3ctc3RhcnQ6IDQ7XG59XG5cbi5wYXJlbnQge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxZnIpO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyLCAxZnIpO1xuICBncmlkLWdhcDogMzBweCAzNXB4O1xufVxuXG4ucGFyZW50X19pdGVtIHtcbiAgZ3JpZC1jb2x1bW46IHNwYW4gMjtcbiAgZ3JpZC1yb3c6IHNwYW4gMjtcbn1cblxuLnBhcmVudC5wYXJlbnQtcGFnZSAucGFyZW50X19pdGVtOm50aC1jaGlsZCg4KSB7XG4gIGdyaWQtY29sdW1uOiBzcGFuIDI7XG4gIGdyaWQtcm93OiBzcGFuIDI7XG59XG5cbi5ibG9nLWJveCB7XG4gIHBhZGRpbmctYm90dG9tOiAxMDBweDtcbn1cblxuLmJsb2ctYm94X190aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWF4LXdpZHRoOiA0MzBweDtcbiAgbWFyZ2luOiAwIGF1dG8gMzBweDtcbn1cblxuLmJsb2ctYm94X19pdGVtcyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgZ3JpZC1nYXA6IDMwcHg7XG59XG5cbi5ibG9nLWJveF9faW1nLWxpbmsge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW47XG59XG5cbi5ibG9nLWJveF9faW1nLWxpbms6aG92ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG59XG5cbi5ibG9nLWJveF9fbGlua3Mge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjNzA3MDcwO1xuICBtYXJnaW4tYm90dG9tOiA5cHg7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cbi5ibG9nLWJveF9fZGF0ZSB7XG4gIHBhZGRpbmctcmlnaHQ6IDdweDtcbn1cblxuLmJsb2ctYm94X19kYXRlLFxuLmJsb2ctYm94X19hdXRob3Ige1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5ibG9nLWJveF9fZGF0ZTo6YWZ0ZXIsXG4uYmxvZy1ib3hfX2F1dGhvcjo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3MDcwNzA7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogODAlO1xuICByaWdodDogMDtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuLmJsb2ctYm94X19hdXRob3Ige1xuICBwYWRkaW5nLWxlZnQ6IDdweDtcbiAgcGFkZGluZy1yaWdodDogN3B4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5ibG9nLWJveF9fdGhlbWEge1xuICBwYWRkaW5nLWxlZnQ6IDdweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uYmxvZy1ib3hfX2F1dGhvcjpob3Zlcixcbi5ibG9nLWJveF9fdGhlbWE6aG92ZXIge1xuICBjb2xvcjogIzAwMDtcbn1cblxuLmJsb2ctYm94X19pdGVtLWxpbmsge1xuICBmb250LXNpemU6IDI0cHg7XG59XG5cbi5ibG9nLWJveF9faXRlbS1kZXNjciB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgY29sb3I6ICMzNjM4Mzg7XG59XG5cbi5ibG9nLWJveF9faXRlbS1kZXNjcjpob3ZlciB7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4uYnJlYWRjcnVtYnMge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIyMywgMjIzLCAyMjMsIDAuNTI1NDkwMTk2MSk7XG4gIHBhZGRpbmc6IDEzcHggMTRweDtcbn1cblxuLmJyZWFkY3J1bWJzX19saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmJyZWFkY3J1bWJzX19pdGVtOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgcGFkZGluZy1sZWZ0OiA1cHg7XG59XG5cbi5icmVhZGNydW1ic19faXRlbTpub3QoOmxhc3QtY2hpbGQpOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiL1wiO1xufVxuXG4uYnJlYWRjcnVtYnNfX2l0ZW06aG92ZXI6OmFmdGVyIHtcbiAgY29sb3I6ICMzNjM4Mzg7XG59XG5cbi5icmVhZGNydW1ic19fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjMzYzODM4O1xufVxuXG4ubm8td2VicCAuYWJvdXRfX3ByZXZ7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvYmcvYWJvdXQtYmcuanBnKTsgfVxuXG4uYWJvdXRfX3ByZXYge1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDE2MHB4IDA7XG4gIG1hcmdpbi1ib3R0b206IDMxcHg7XG59XG5cbi5hYm91dF9fdGl0bGUge1xuICBjb2xvcjogIzM2MzgzODtcbiAgZm9udC1zaXplOiA2MHB4O1xufVxuXG4uYWJvdXRfX2luZm8ge1xuICBwYWRkaW5nOiA5OHB4IDAgNDBweDtcbn1cblxuLmFib3V0X19pbmZvLXRpdGxlIHtcbiAgbWF4LXdpZHRoOiA4MjJweDtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBjb2xvcjogIzM2MzgzODtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIzcHg7XG59XG5cbi5hYm91dF9faW5mby10ZXh0IHtcbiAganVzdGlmeS1jb250ZW50OiBlbmQ7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XG4gIHBhZGRpbmctbGVmdDogMjg0cHg7XG59XG5cbi5uby13ZWJwIC5hYm91dF9fdmlkZW97XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvYmcvdmlkZW8tYmcuanBlZyk7IH1cblxuLmFib3V0X192aWRlbyB7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcCBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIG1pbi1oZWlnaHQ6IDQxNHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmFib3V0X192aWRlby1wbGF5IHtcbiAgd2lkdGg6IDgwcHg7XG4gIGhlaWdodDogODBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1NCwgNTYsIDU2LCAwLjQpO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW47XG59XG5cbi5hYm91dF9fdmlkZW8tcGxheTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9zdmcvcGxheS5zdmcpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG59XG5cbi5hYm91dF9fdmlkZW8tcGxheTpob3ZlciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4zKTtcbn1cblxuLm1ldHJpY3Mge1xuICBtYXJnaW4tdG9wOiA1NHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5uby13ZWJwIC5tZXRyaWNzOjphZnRlcntcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9iZy9oZXJvLWJnLmpwZyk7IH1cblxuLm1ldHJpY3M6OmFmdGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogXCJcIjtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgaGVpZ2h0OiA1MTRweDtcbiAgei1pbmRleDogLTE7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcCBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5tZXRyaWNzX19jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5tZXRyaWNzX19jb250ZW50IHtcbiAgcGFkZGluZy1sZWZ0OiAyODRweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ubWV0cmljc19fY29udGVudDo6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiB1cmwoLi4vaW1nL2hlcm8vaGVyby1pbWcud2VicCk7XG4gIHdpZHRoOiA0MzNweDtcbiAgaGVpZ2h0OiA1MDZweDtcbiAgbGVmdDogMDtcbiAgdG9wOiA1MCU7XG4gIGJvdHRvbTogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4ubWV0cmljc19fdGl0bGUge1xuICBmb250LXNpemU6IDM2cHg7XG4gIHBhZGRpbmctYm90dG9tOiAxNnB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xufVxuXG4ubWV0cmljc19fdGV4dCB7XG4gIG1heC13aWR0aDogODEwcHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cbi5tZXRyaWNzX19saXN0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDc1cHg7XG4gIG1hcmdpbi1ib3R0b206IDc1cHg7XG59XG5cbi5tZXRyaWNzX19pdGVtOm5vdCg6bGFzdC1jaGlsZCkge1xuICBtYXJnaW4tYm90dG9tOiAzM3B4O1xufVxuXG4ubWV0cmljc19faXRlbS10ZXh0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBjb2xvcjogIzM2MzgzODtcbiAgbWFyZ2luLWJvdHRvbTogMTRweDtcbn1cblxuLm1ldHJpY3NfX2xpbmUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDIxcHg7XG59XG5cbi5tZXRyaWNzX19saW5lOjotd2Via2l0LW1ldGVyLWJhciB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGhlaWdodDogMnB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuXG4ubWV0cmljc19fbGluZTo6LXdlYmtpdC1tZXRlci1vcHRpbXVtLXZhbHVlIHtcbiAgYmFja2dyb3VuZDogIzM2MzgzODtcbn1cblxuLm1ldHJpY3NfX2xpbmU6Oi13ZWJraXQtbWV0ZXItc3Vib3B0aW11bS12YWx1ZSB7XG4gIGJhY2tncm91bmQ6ICMzNjM4Mzg7XG59XG5cbi5tZXRyaWNzX19saW5lOjotd2Via2l0LW1ldGVyLWV2ZW4tbGVzcy1nb29kLXZhbHVlIHtcbiAgYmFja2dyb3VuZDogIzM2MzgzODtcbn1cblxuLnBhcnRuZXJzX19saXN0IHtcbiAgbWF4LXdpZHRoOiAxOTIwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5wYXJ0bmVyc19faXRlbSB7XG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XG59XG5cbi5wYXJ0bmVyc19faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgbWFyZ2luLXJpZ2h0OiA2OHB4O1xufVxuXG4ucGFydG5lcnNfX2ljb24ge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5wYXJ0bmVyc19fbGlzdCB7XG4gIG1hcmdpbi1yaWdodDogNTBweDtcbiAgbWFyZ2luLWxlZnQ6IDUwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5wYXJ0bmVyc19faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgbWFyZ2luLXJpZ2h0OiA2OHB4O1xufVxuXG4ucGFydG5lcnNfX2ljb24ge1xuICBvYmplY3QtZml0OiBjb250YWluO1xufVxuXG4ucGFydG5lcnNfX2NvbGxlY3Rpb24ge1xuICBtYXJnaW4tYm90dG9tOiA3MnB4O1xufVxuXG4ud2VicCAuaGVyb19faW5uZXI6OmFmdGVyeyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2JnL2hlcm8tYmcud2VicCk7IH1cblxuLndlYnAgLmFib3V0X19wcmV2eyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2JnL2Fib3V0LWJnLndlYnApOyB9XG5cbi53ZWJwIC5hYm91dF9fdmlkZW97IGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvYmcvdmlkZW8tYmcud2VicCk7IH1cblxuLndlYnAgLm1ldHJpY3M6OmFmdGVyeyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2JnL2hlcm8tYmcud2VicCk7IH0iLCJodG1sIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4qLFxyXG4qOjphZnRlcixcclxuKjo6YmVmb3JlIHtcclxuICBib3gtc2l6aW5nOiBpbmhlcml0O1xyXG59XHJcblxyXG51bFtjbGFzc10sXHJcbm9sW2NsYXNzXSB7XHJcbiAgcGFkZGluZzogMDtcclxufVxyXG5cclxuYm9keSxcclxuaDEsXHJcbmgyLFxyXG5oMyxcclxuaDQsXHJcbmg1LFxyXG5oNixcclxucCxcclxudWwsXHJcbm9sLFxyXG5saSxcclxuZmlndXJlLFxyXG5maWdjYXB0aW9uLFxyXG5ibG9ja3F1b3RlLFxyXG5kbCxcclxuZGQge1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxudWxbY2xhc3NdIHtcclxuICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG5pbWcge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuaW5wdXQsXHJcbmJ1dHRvbixcclxudGV4dGFyZWEsXHJcbnNlbGVjdCB7XHJcbiAgZm9udDogaW5oZXJpdDtcclxufVxyXG5hIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbi8vXHJcbmh0bWwge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuKixcclxuOmFmdGVyLFxyXG46YmVmb3JlIHtcclxuICBib3gtc2l6aW5nOiBpbmhlcml0O1xyXG4gIG1hcmdpbjogMDtcclxuICBib3JkZXI6IDA7XHJcbiAgcGFkZGluZzogMDtcclxufVxyXG5cclxuaW5wdXQsXHJcbnRleHRhcmVhIHtcclxuICBib3JkZXItcmFkaXVzOiAwO1xyXG4gIG91dGxpbmU6IDA7XHJcbiAgb3V0bGluZTogbm9uZTsgLy8g0LXRgdC70Lgg0L3Rg9C20L3QviDRg9Cx0YDQsNGC0Ywg0L7QsdCy0L7QtNC60YMg0L/RgNC4INGE0L7QutGD0YHQtSAo0L3QtSDRgNC10LrQvtC80LXQvdC00YPQtdGC0YHRjyDQtNC70Y8g0LTQvtGB0YLRg9C/0L3QvtGB0YLQuClcclxufVxyXG5pbnB1dCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgY29sb3I6IGluaGVyaXQ7XHJcbiAgYm9yZGVyOiAwO1xyXG59XHJcbmJsb2NrcXVvdGUsXHJcbmJvZHksXHJcbmRkLFxyXG5kbCxcclxuZmlnY2FwdGlvbixcclxuZmlndXJlLFxyXG5oMSxcclxuaDIsXHJcbmgzLFxyXG5oNCxcclxuaDUsXHJcbmg2LFxyXG5saSxcclxub2wsXHJcbnAsXHJcbnVsIHtcclxuICBtYXJnaW46IDA7XHJcbiAgZm9udC1zaXplOiBpbmhlcml0O1xyXG59XHJcbm9sW2NsYXNzXSxcclxudWxbY2xhc3NdIHtcclxuICBsaXN0LXN0eWxlOiBub25lO1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxub2wsXHJcbnBpY3R1cmUsXHJcbnVsIHtcclxuICBwYWRkaW5nOiAwO1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5pbWcge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5idXR0b24sXHJcbmlucHV0LFxyXG5zZWxlY3QsXHJcbnRleHRhcmVhIHtcclxuICBmb250OiBpbmhlcml0O1xyXG59XHJcbnBpY3R1cmUge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIC8vIHdpZHRoOiAxMDAlO1xyXG4gIC8vIGhlaWdodDogMTAwJTtcclxuICBtYXJnaW46IDA7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbn1cclxuYSxcclxuYnV0dG9uIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgY29sb3I6IGluaGVyaXQ7XHJcbn1cclxuYnV0dG9uIHtcclxuICBib3JkZXI6IDA7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59XHJcbmEge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG5cclxubWV0ZXIge1xyXG4gIC8vIGFsbDogdW5zZXQ7XHJcbiAgLy8gZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIC8qINC40LvQuCBibG9jayDigJQg0L/QviDQvdC10L7QsdGF0L7QtNC40LzQvtGB0YLQuCAqL1xyXG4gIC8vIGJhY2tncm91bmQ6ICNlZWU7XHJcbiAgLy8gcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIC8vIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgLy8gZm9udC1zaXplOiAwO1xyXG4gIC8qINGD0LHRgNCw0YLRjCDQvdCw0YLQuNCy0L3Ri9C5INGC0LXQutGB0YIsINC10YHQu9C4INC90LUg0L3Rg9C20LXQvSAqL1xyXG59XHJcblxyXG4vKiDQo9Cx0LjRgNCw0LXQvCDQsdGA0LDRg9C30LXRgNC90YvQtSDRgdGC0LjQu9C4IENocm9tZS9TYWZhcmkgKi9cclxubWV0ZXI6Oi13ZWJraXQtbWV0ZXItYmFyIHtcclxuICAvLyBiYWNrZ3JvdW5kOiBub25lO1xyXG4gIC8vIGJvcmRlcjogbm9uZTtcclxufVxyXG5cclxuLyog0KPQsdC40YDQsNC10Lwg0YbQstC10YLQsCDQt9C90LDRh9C10L3QuNGPICovXHJcbm1ldGVyOjotd2Via2l0LW1ldGVyLW9wdGltdW0tdmFsdWUsXHJcbm1ldGVyOjotd2Via2l0LW1ldGVyLXN1Ym9wdGltdW0tdmFsdWUsXHJcbm1ldGVyOjotd2Via2l0LW1ldGVyLWV2ZW4tbGVzcy1nb29kLXZhbHVlIHtcclxuICAvLyBiYWNrZ3JvdW5kOiBub25lO1xyXG59IiwiQHVzZSAndmFyJyBhcyAqO1xyXG5cclxuLy8gJGxpbmUtaGVpZ2h0OiBjYWxjKDI3IC8gMTYpOyAvLyBsaW5lLWhlaWdodCA9INCy0YvRgdC+0YLQsCDRgdGC0YDQvtC60LggLyDRgNCw0LfQvNC10YAg0YjRgNC40YTRgtCwXHJcbkBtaXhpbiBsaW5lLWhlaWdodCgkZnMsICRsaCkge1xyXG4gIGxpbmUtaGVpZ2h0OiBjYWxjKCRsaCAvICRmcyk7XHJcbn1cclxuLy/Qv9GA0LjQvNC10L3QtdC90LjQtVxyXG4vL0BpbmNsdWRlIGxpbmUtaGVpZ2h0KDI3LCAxNilcclxuXHJcbi8vIEBtaXhpbiBmb250KCRmb250LCAkZm9udC11cmwsICR3ZWlnaHQsICRzdHlsZSkge1xyXG4vLyAgIEBmb250LWZhY2Uge1xyXG4vLyAgICAgZm9udC1mYW1pbHk6ICcjeyRmb250fSc7XHJcbi8vICAgICBzcmM6IHVybCgnL2ZvbnQvI3skZm9udC11cmx9LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4vLyAgICAgICB1cmwoJy9mb250LyN7JGZvbnQtdXJsfS53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XHJcbi8vICAgICBmb250LXdlaWdodDogI3skd2VpZ2h0fTtcclxuLy8gICAgIGZvbnQtc3R5bGU6ICRzdHlsZTtcclxuLy8gICB9XHJcbi8vIH1cclxuQG1peGluIGZvbnQtZmFjZSgkZm9udC1mYW1pbHksICR1cmwsICR3ZWlnaHQpIHtcclxuICBAZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnI3skZm9udC1mYW1pbHl9JztcclxuICAgIHNyYzogdXJsKCcuLi9mb250LyN7JHVybH0ud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgIHVybCgnLi4vZm9udC8jeyR1cmx9LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiAjeyR3ZWlnaHR9O1xyXG4gICAgZm9udC1kaXNwbGF5OiBzd2FwO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC1zdHJldGNoOiBub3JtYWw7XHJcbiAgICB1bmljb2RlLXJhbmdlOiBVKzAwMjAtMjIxMjtcclxuICB9XHJcbn1cclxuLy/Qn9C+0LTQutC70Y7Rh9C10L3QuNGPINGI0YDQuNGE0YLQvtCyINCyINCz0LvQvtCx0LDQu9GM0L3QvtC8INGE0LDQudC70LVcclxuXHJcbi8vIEBpbmNsdWRlIGZvbnQoJGZvbnQtZ2xvYiwgI3skZm9udC1nbG9ifS0jeyR0aGlufSwgMTAwKTtcclxuLy8gQGluY2x1ZGUgZm9udCgkZm9udC1nbG9iLCAjeyRmb250LWdsb2J9LSN7JHRoaW4taXRhbGljfSwgMTAwKTtcclxuLy8gQGluY2x1ZGUgZm9udCgkZm9udC1nbG9iLCAjeyRmb250LWdsb2J9LSN7JGV4dHJhTGlnaHR9LCAyMDApO1xyXG4vLyBAaW5jbHVkZSBmb250KCRmb250LWdsb2IsICN7JGZvbnQtZ2xvYn0tI3skZXh0cmFMaWdodEl0YWxpY30sIDIwMCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQoJGZvbnQtZ2xvYiwgI3skZm9udC1nbG9ifS0jeyRsaWdodH0sIDMwMCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQoJGZvbnQtZ2xvYiwgI3skZm9udC1nbG9ifS0jeyRsaWdodC1pdGFsaWN9LCAzMDApO1xyXG4vLyBAaW5jbHVkZSBmb250KCRmb250LWdsb2IsICN7JGZvbnQtZ2xvYn0tI3skcmVndWxhcn0sIDQwMCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQoJGZvbnQtZ2xvYiwgI3skZm9udC1nbG9ifS0jeyRyZWd1bGFySXRhbGljfSwgNDAwKTtcclxuLy8gQGluY2x1ZGUgZm9udCgkZm9udC1oMSwgI3skZm9udC1oMX0tI3skbWVkaXVtfSwgNTAwKTtcclxuLy8gQGluY2x1ZGUgZm9udChtYXAtZ2V0KCRuYW1lLCBydWJpayksICN7JGZvbnQtaDF9LSN7JG1lZGl1bUl0YWxpY30sIDUwMCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQoJGZvbnQtZ2xvYiwgI3skZm9udC1nbG9ifS0jeyRzZW1pQm9sZH0sIDYwMCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQoJGZvbnQtZ2xvYiwgI3skZm9udC1nbG9ifS0jeyRzZW1pQm9sZEl0YWxpY30sIDYwMCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQoJGZvbnQtZ2xvYiwgI3skZm9udC1nbG9ifS0jeyRib2xkfSwgNzAwKTtcclxuLy8gQGluY2x1ZGUgZm9udCgkZm9udC1nbG9iLCAjeyRmb250LWdsb2J9LSN7JGJvbGRJdGFsaWN9LCA3MDApO1xyXG4vLyBAaW5jbHVkZSBmb250KCRmb250LWdsb2IsICN7JGZvbnQtZ2xvYn0tI3skZXh0cmFCb2xkfSwgODAwKTtcclxuLy8gQGluY2x1ZGUgZm9udCgkZm9udC1nbG9iLCAjeyRmb250LWdsb2J9LSN7JGV4dHJhQm9sZC1pdGFsaWN9LCA4MDApO1xyXG4vLyBAaW5jbHVkZSBmb250KCRmb250LWdsb2IsICN7JGZvbnQtZ2xvYn0tI3skYmxhY2t9LCA5MDApO1xyXG4vLyBAaW5jbHVkZSBmb250KCRmb250LWdsb2IsICN7JGZvbnQtZ2xvYn0tI3skYmxhY2staXRhbGljfSwgOTAwKTtcclxuLy8gQGluY2x1ZGUgZm9udCgkZm9udC1nbG9iLCAjeyRmb250LWdsb2J9LSN7JGV4dHJhQmxhY2staXRhbGljfSwgOTUwKTtcclxuLy8gQGluY2x1ZGUgZm9udCgkb3BlbnNhbnMsICN7JG9wZW5zYW5zfS0jeyRleHRyYUJsYWNrLWl0YWxpY30sIDk1MCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQoJGZvbnQtbmFtZSwgI3skZm9udC1uYW1lfS0jeyRyZWd1bGFyfSwgNDAwKTtcclxuLy8gQGluY2x1ZGUgZm9udCgkZm9udC1nbG9iLCAjeyRmb250LWdsb2J9LSN7JHJlZ3VsYXJJdGFsaWN9LCA0MDApO1xyXG4vLyBAaW5jbHVkZSBmb250KCRmb250LWgxLCAjeyRmb250LWgxfS0jeyRtZWRpdW19LCA1MDApO1xyXG4vLyBAaW5jbHVkZSBmb250KG1hcC1nZXQoJG5hbWUsIHJ1YmlrKSwgI3skZm9udC1oMX0tI3skbWVkaXVtSXRhbGljfSwgNTAwKTtcclxuXHJcbi8v0L/RgNC40LzQtdC90LXQvdC40LVcclxuLy8gQGluY2x1ZGUgZm9udC1mYWNlKCRmb250LWZhbWlseSwgI3skZm9udC1mYW1pbHl9LVRoaW4sIDEwMCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQtZmFjZSgkZm9udC1mYW1pbHksICN7JGZvbnQtZmFtaWx5fS1UaGluLUl0YWxpYywgMTAwKTtcclxuLy8gQGluY2x1ZGUgZm9udC1mYWNlKCRmb250LWZhbWlseSwgI3skZm9udC1mYW1pbHl9LUV4dHJhTGlnaHQsIDIwMCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQtZmFjZSgkZm9udC1mYW1pbHksICN7JGZvbnQtZmFtaWx5fS1FeHRyYUxpZ2h0LUl0YWxpYywgMjAwKTtcclxuLy8gQGluY2x1ZGUgZm9udC1mYWNlKCRmb250LWZhbWlseSwgI3skZm9udC1mYW1pbHl9LUxpZ2h0LCAzMDApO1xyXG4vLyBAaW5jbHVkZSBmb250LWZhY2UoJGZvbnQtZmFtaWx5LCAjeyRmb250LWZhbWlseX0tTGlnaHQtSXRhbGljLCAzMDApO1xyXG4vLyBAaW5jbHVkZSBmb250LWZhY2UoJGZvbnQtZmFtaWx5LCAjeyRmb250LWZhbWlseX0tUmVndWxhci1JdGFsaWMsIDQwMCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQtZmFjZSgkZm9udC1mYW1pbHksICN7JGZvbnQtZmFtaWx5fS1NZWRpdW0sIDUwMCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQtZmFjZSgkZm9udC1mYW1pbHksICN7JGZvbnQtZmFtaWx5fS1NZWRpdW0tSXRhbGljLCA1MDApO1xyXG4vLyBAaW5jbHVkZSBmb250LWZhY2UoJGZvbnQtZmFtaWx5LCAjeyRmb250LWZhbWlseX0tU2VtaUJvbGQsIDYwMCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQtZmFjZSgkZm9udC1mYW1pbHksICN7JGZvbnQtZmFtaWx5fS1TZW1pQm9sZC1JdGFsaWMsIDYwMCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQtZmFjZSgkZm9udC1mYW1pbHksICN7JGZvbnQtZmFtaWx5fS1Cb2xkLUl0YWxpYywgNzAwKTtcclxuLy8gQGluY2x1ZGUgZm9udC1mYWNlKCRmb250LWZhbWlseSwgI3skZm9udC1mYW1pbHl9LUV4dHJhQm9sZCwgODAwKTtcclxuLy8gQGluY2x1ZGUgZm9udC1mYWNlKCRmb250LWZhbWlseSwgI3skZm9udC1mYW1pbHl9LUV4dHJhQm9sZC1JdGFsaWMsIDgwMCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQtZmFjZSgkZm9udC1mYW1pbHksICN7JGZvbnQtZmFtaWx5fS1CbGFjaywgOTAwKTtcclxuLy8gQGluY2x1ZGUgZm9udC1mYWNlKCRmb250LWZhbWlseSwgI3skZm9udC1mYW1pbHl9LUJsYWNrLUl0YWxpYywgOTAwKTtcclxuLy8gQGluY2x1ZGUgZm9udC1mYWNlKCRmb250LWZhbWlseSwgI3skZm9udC1mYW1pbHl9LUV4dHJhQmxhY2ssIDk1MCk7XHJcbi8vIEBpbmNsdWRlIGZvbnQtZmFjZSgkZm9udC1mYW1pbHksICN7JGZvbnQtZmFtaWx5fS1FeHRyYUJsYWNrLUl0YWxpYywgOTUwKTtcclxuXHJcblxyXG5cclxuLy/QoNCw0YHRh9C10YIg0L7RgtC30YvQstGH0LjQstC+0LPQvijQsNC00LDQv9GC0LjQstC90L7Qs9C+KSDRiNGA0LjRhNGC0LBcclxuLy8gQG1peGluIGZvbnQtbWVkaWEoJHNpemUsICRtaW4tc2l6ZSwgJG1pbi1zY3JlZW4sICRtYXhXaWR0aCkge1xyXG4vLyAgICRhZGQtc2l6ZTogJHNpemUgLSAkbWluLXNpemU7XHJcbi8vICAgJG1heFdpZHRoOiAkbWF4V2lkdGggLSAkbWluLXNjcmVlbjtcclxuLy8gICBmb250LXNpemU6IGNhbGMoI3skbWluLXNpemUgKyBweH0gKyAjeyRhZGQtc2l6ZX0gKiAoKDEwMHZ3IC0gI3skbWluLXNjcmVlbiArIHB4fSkgLyAjeyRtYXhXaWR0aH0pKTtcclxuLy8gfVxyXG5cclxuLy/Qn9GA0L7QstC10YDQutCwINGA0LDQsdC+0YLRiyDQvNC40LrRgdC40L3QsFxyXG4vLyBib2R5IHtcclxuLy8gICBAaW5jbHVkZSBmb250LW1lZGlhKCRwLXNpemUsICRwLW1pbi1zaXplLCAkbWluV2lkdGgsICRtYXhXaWR0aCk7XHJcbi8vIH1cclxuXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuLy8g0KDQsNGB0YfQtdGCINC+0YLQt9GL0LLRh9C40LLQvtCz0L4o0LDQtNCw0L/RgtC40LLQvdC+0LPQvikg0YjRgNC40YTRgtCwXHJcblxyXG5AbWl4aW4gZm9udC1tZWRpYSgkcGNTaXplLCAkbW9iU2l6ZSkge1xyXG4gICRhZGRTaXplOiAkcGNTaXplIC0gJG1vYlNpemU7XHJcbiAgJG1heFdpZHRoOiAkbWF4V2lkdGggLSAkbWluV2lkdGg7XHJcbiAgZm9udC1zaXplOiBjYWxjKFxyXG4gICAgI3skbW9iU2l6ZSArIHB4fSArICN7JGFkZFNpemV9ICogKCgxMDB2dyAtICN7JG1pbldpZHRofXB4KSAvICN7JG1heFdpZHRofSlcclxuICApO1xyXG59XHJcbi8v0L/RgNC40LzQtdC90LXQvdC40LVcclxuLy9AaW5jbHVkZSBmb250LW1lZGlhKDE2LCAxNCk7XHJcbi8v0LLRi9GF0L7QtFxyXG4vL2ZvbnQtc2l6ZTogY2FsYygxNHB4ICsgMiooMTAwdncgLSAzNDBweCkvNzkzKVxyXG5cclxuLy8gQG1peGluIGZvbnQtbWVkaWEoJHNpemUsICRtaW4tc2l6ZSwgJG1pbi1zY3JlZW4sICRtYXhXaWR0aCkge1xyXG4vLyAgICRhZGQtc2l6ZTogJHNpemUgLSAkbWluLXNpemU7XHJcbi8vICAgJG1heFdpZHRoOiAkbWF4V2lkdGggLSAkbWluV2lkdGg7XHJcbi8vICAgZm9udC1zaXplOiBjYWxjKFxyXG4vLyAgICAgI3skbWluLXNpemUgKyBweH0gKyAjeyRhZGQtc2l6ZX0gKiAoKDEwMHZ3IC0gI3skbWluV2lkdGh9cHgpIC8gI3skbWF4V2lkdGh9KVxyXG4vLyAgICk7XHJcbi8vIH1cclxuXHJcbi8v0J/RgNC+0LLQtdGA0LrQsCDRgNCw0LHQvtGC0Ysg0LzQuNC60YHQuNC90LBcclxuLy9AaW5jbHVkZSBmb250LW1lZGlhKDE2LCAxNCwgJG1pbldpZHRoLCAkbWF4V2lkdGgpO1xyXG4vL0BpbmNsdWRlIGZvbnQtbWVkaWEoMTYsIDE0LCAzNDAsIDEyODApO1xyXG5cclxuLyoqKioqKioqKioqKi9cclxuLy/QkdCV0JfQntCf0JDQodCd0KvQlSDQqNCg0JjQpNCi0KtcclxuJHNhdmUtZm9udHM6IFwiSGVsdmV0aWNhXCIsIFwiQXJpYWxcIjtcclxuJGhlbHZldGljYTogJ0hlbHZldGljYSc7XHJcbiRhcmlhbDogJ0FyaWFsJztcclxuJHZlcmRhdGE6ICdWZXJkYW5hJztcclxuJHRpbWVzOiAnVGltZXMgTmV3IFJvbWFuJztcclxuJGdlb3JnaWE6ICdHZW9yZ2lhJztcclxuLy9zYWZlLWZvbnRcclxuLy/QsdC10LfQvtC/0LDRgdC90YvQtSDRiNGA0LjRhNGC0YtcclxuJGhlbHZldGljYTogJ0hlbHZldGljYSc7XHJcbiRhcmlhbDogJ0FyaWFsJztcclxuJHZlcmRhdGE6ICdWZXJkYW5hJztcclxuLy/RgtC40L8g0YjRgNC40YTRgtC+0LJcclxuLy8gJHNhbnMtc2VyaWY6IHNhbnMtc2VyaWY7XHJcbi8vICRzZXJpZjogc2VyaWY7XHJcblxyXG5cclxuLy/RiNGA0LjRhNGC0Ysg0LHQtdC30L7Qv9Cw0YHQvdC+0YHRgtC4XHJcbi8v0LzQuNC60YHQuNC9INC/0L7QtNC60LvRjtGH0LXQvdC40LUg0LPQu9C+0LHQsNC70YzQvdGL0YUg0YjRgNC40YTRgtC+0LIg0L/RgNC+0LXQutGC0LAg0Lgg0YjRgNC40YTRgtC+0LIg0LHQtdC30L7Qv9Cw0YHQvdC+0YHRgtC4XHJcbkBtaXhpbiBmb250LXNhdmUoJHRleHQsICR0eXBlKSB7XHJcbiAgZm9udC1mYW1pbHk6IFwiI3skdGV4dH1cIiwgJHNhdmUtZm9udHMsICR0eXBlO1xyXG59XHJcblxyXG5AbWl4aW4gc2FmZS1mb250KCR0ZXh0LCAkdHlwZSkge1xyXG4gIGZvbnQtZmFtaWx5OiBcIiN7JHRleHR9XCIsICRoZWx2ZXRpY2EsICRhcmlhbCwgJHR5cGU7XHJcbn1cclxuXHJcbi8v0J/RgNC+0LLQtdGA0LrQsCDRgNCw0LHQvtGC0Ysg0LzQuNC60YHQuNC90LBcclxuLy8gYm9keSB7XHJcbi8vIEBpbmNsdWRlIGZvbnQtc2F2ZSgkZm9udC1nbG9iKTsgLy/QuNC70LhcclxuLy8gQGluY2x1ZGUgZm9udC1zYXZlKCRvcGVuc2Fucyk7IC8v0LjQu9C4XHJcbi8vIEBpbmNsdWRlIGZvbnQtc2F2ZShPcGVuU2Fucyk7IC8v0LjQu9C4XHJcbi8vIEBpbmNsdWRlIHNhZmUtZm9udChcIk9wZW4gU2Fuc1wiLCBzYW5zLXNlcmlmKTtcclxuLy8gfSIsIkB1c2UgJ3ZhcicgYXMgKjtcclxuQHVzZSAnZm9udC1taXhpbicgYXMgKjtcclxuQHVzZSAnc3RpY2t5LWZvb3RlcicgYXMgKjtcclxuXHJcbkBpbmNsdWRlIGZvbnQtZmFjZSgkdGV4dCwgI3skdGV4dH0tUmVndWxhciwgNDAwKTtcclxuQGluY2x1ZGUgZm9udC1mYWNlKCR0aXRsZSwgI3skdGl0bGV9LUJvbGQsIDcwMCk7XHJcblxyXG5ib2R5IHtcclxuICBvdmVyZmxvdy14OiBoaWRkZW47IC8v0YPQsdC40YDQsNC10Lwg0LPQvtGA0LjQt9C+0L3RgtCw0LvRjNC90YvQuSDRgdC60YDQvtC7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJnLWNvbG9yO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBAaW5jbHVkZSBzYWZlLWZvbnQoJHRleHQsICRmb250LXR5cGUpO1xyXG4gIEBpbmNsdWRlIGZvbnQtbWVkaWEoMTYsIDE0KTtcclxuICBAaW5jbHVkZSBsaW5lLWhlaWdodCgxNiwgMjcpO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XHJcbiAgY29sb3I6ICR0ZXh0LWNvbG9yO1xyXG59XHJcblxyXG4uY29udGFpbmVyIHtcclxuICBtYXgtd2lkdGg6IDExMzNweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICAvLyBwYWRkaW5nOiAgMCA1cHg7XHJcbn1cclxuLmNvbnRhaW5lci1mbHVpZCB7XHJcbiAgbWF4LXdpZHRoOiAxOTIwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgLy8gcGFkZGluZzogMCAxMHB4O1xyXG59XHJcblxyXG4udmlzdWFsbHktaGlkZGVuIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDFweDtcclxuICBoZWlnaHQ6IDFweDtcclxuICBtYXJnaW46IC0xcHg7XHJcbiAgcGFkZGluZzogMDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XHJcbiAgYm9yZGVyOiAwO1xyXG59XHJcblxyXG4uYmctaW1nIHtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIC8vIGhlaWdodDogMTAwdmg7IC8v0LLRi9GB0L7RgtCwINC90LAg0LLQtdGB0Ywg0Y3QutGA0LDQvSDQutC+0LzQv9GM0Y7RgtC10YDQsFxyXG59XHJcblxyXG4uc2xpY2stZG90cyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGxpIHtcclxuICAgIG1hcmdpbjogMCAxNXB4O1xyXG4gIH1cclxuICBidXR0b24ge1xyXG4gICAgd2lkdGg6IDhweDtcclxuICAgIGhlaWdodDogOHB4O1xyXG4gICAgZm9udC1zaXplOiAwO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNjM4Mzg7XHJcbiAgfVxyXG4gIGxpLnNsaWNrLWFjdGl2ZSB7XHJcbiAgICBidXR0b24ge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlZjM1O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJAdXNlICcuLi9iYXNlL3ZhcicgYXMgKjtcclxuQHVzZSAnLi4vYmFzZS9mb250LW1peGluJyBhcyAqO1xyXG5cclxuLy8gLmhlYWRlciB7fVxyXG4vLyAuY29udGFpbmVyIHt9XHJcbi8vIC5oZWFkZXJfX25hdmJhciB7fVxyXG5cclxuLy8gLm5hdmJhciB7XHJcbi8vICAgZGlzcGxheTogZmxleDtcclxuLy8gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyAgIHBhZGRpbmc6IDQ1cHggMHB4O1xyXG4vLyAgIHBhZGRpbmctbGVmdDogNTZweDtcclxuLy8gfVxyXG5cclxuLy8gLm5hdmJhcl9fbGlzdCB7XHJcbi8vICAgZGlzcGxheTogZmxleDtcclxuLy8gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuLy8gICB3aWR0aDogMTAwJTtcclxuLy8gICBwYWRkaW5nLXJpZ2h0OiA2NXB4O1xyXG4vLyB9XHJcblxyXG4vLyAubmF2YmFyX19pdGVtIHtcclxuLy8gICAmOm5vdCg6bGFzdC1jaGlsZCl7XHJcbi8vICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XHJcbi8vICAgfVxyXG4vLyB9XHJcblxyXG4vLyAubmF2YmFyX19saW5rIHtcclxuLy8gICAvLyBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuLy8gICAvLyBjb2xvcjogJGgxLWNvbG9yO1xyXG4vLyAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbi8vICAgQGluY2x1ZGUgZm9udC1tZWRpYSgxNiwgMTQpO1xyXG4vLyAgIEBpbmNsdWRlIGxpbmUtaGVpZ2h0KDE2LCAyMik7XHJcbi8vICAgZm9udC1mYW1pbHk6ICR0aXRsZTtcclxuLy8gICBwYWRkaW5nLWJvdHRvbTogMnB4O1xyXG4vLyB9XHJcbi5oZWFkZXIge1xyXG4gIC8vIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG4uaGVhZGVyX19pbm5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAvLyBoZWlnaHQ6IDEyMHB4O1xyXG4gIHBhZGRpbmctdG9wOiA0NnB4O1xyXG4gIHBhZGRpbmctYm90dG9tOiA0M3B4O1xyXG59XHJcbi5tZW51IHtcclxuICBwYWRkaW5nLWxlZnQ6IDM1cHg7XHJcbiAgcGFkZGluZy1yaWdodDogNjBweDtcclxufVxyXG4ubWVudV9fbGlzdCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG4vLyAubWVudV9fbGlzdC1pdGVtICsgLm1lbnVfX2xpc3QtaXRlbSB7IC8v0L7QsdGA0LDRidC10L3QuNC1INC6INGB0L7RgdC10LTQvdC10LzRgyDRjdC70LXQvNC10L3RgtGDXHJcbi8vICAgcGFkZGluZy1yaWdodDogODBweDtcclxuLy8gfVxyXG4ubWVudV9fbGlzdC1pdGVtOmZpcnN0LWNoaWxkIHtcclxuICBwYWRkaW5nLXJpZ2h0OiA4MHB4O1xyXG59XHJcblxyXG4ubWVudV9fbGlzdC1saW5rIHtcclxuICBAZXh0ZW5kICV0aXRsZS1mb250O1xyXG4gIC8vIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIC8vIGNvbG9yOiAkaDEtY29sb3I7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICBAaW5jbHVkZSBmb250LW1lZGlhKDE2LCAxNCk7XHJcbiAgQGluY2x1ZGUgbGluZS1oZWlnaHQoMTYsIDIyKTtcclxuICBmb250LWZhbWlseTogJHRpdGxlO1xyXG4gIHBhZGRpbmctYm90dG9tOiAycHg7XHJcbn1cclxuLmxvZ28ge1xyXG4gIG1hcmdpbjogMCBhdXRvOyAvL9GA0LDQt9C00LLQuNC90LXRgiDRjdC70LXQvNC10L3RgtGLINC+0YIg0YHQtdCx0LVcclxuICB3aWR0aDogOTdweDtcclxuICBwYWRkaW5nLWJvdHRvbTogM3B4O1xyXG59XHJcbi5sb2dvX19pbWcge1xyXG59XHJcbi5oZWFkZXJfX2J0biB7XHJcbiAgd2lkdGg6IDM3cHg7XHJcbiAgaGVpZ2h0OiAyOXB4O1xyXG59XHJcbi5oZWFkZXJfX2J0bi1pY29uIHtcclxuICB3aWR0aDogMzdweDtcclxuICBoZWlnaHQ6IDI5cHg7XHJcbn1cclxuXHJcbi5oZWFkZXJfX2J0biB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi5yaWdodHNpZGUtbWVudSB7XHJcbiAgei1pbmRleDogMjA7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHRvcDogMDtcclxuICBib3R0b206IDA7XHJcbiAgbWF4LXdpZHRoOiA2OTRweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIHBhZGRpbmctdG9wOiA0MHB4O1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGVhc2UtaW47XHJcbmJveC1zaGFkb3c6IC0ycHggM3B4IDE3cHggMHB4ICMwMDA7XHJcbn1cclxuYm9keSB7XHJcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gIG1pbi13aWR0aDogMzIwcHg7XHJcbiAgLy8gdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XHJcbn1cclxuLm92ZXJsYXkge1xyXG4gIHotaW5kZXg6IDEwO1xyXG4gIC8vIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDA7IGxlZnQ6IDA7IHJpZ2h0OiAwOyBib3R0b206IDA7XHJcbiAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwwLjUpOyAvLyDRgdGC0LXQv9C10L3RjCDQt9Cw0YLQtdC80L3QtdC90LjRj1xyXG4gIC8vIHotaW5kZXg6IDA7ICAgICAgICAgICAgICAgICAgLy8g0L3QuNC20LUgLnJpZ2h0c2lkZS1tZW51LCDQvdC+INCy0YvRiNC1INC60L7QvdGC0LXQvdGC0LBcclxuICBvcGFjaXR5OiAwO1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcclxufVxyXG4ucmlnaHRzaWRlLW1lbnUtLW9wZW4gfiAub3ZlcmxheSB7XHJcbiAgb3BhY2l0eTogMTtcclxuICBwb2ludGVyLWV2ZW50czogYXV0bztcclxuICB6LWluZGV4OiAxMDtcclxufVxyXG4ucmlnaHRzaWRlLW1lbnUtLWNsb3NlIHtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTIwJSk7XHJcblxyXG59XHJcbi5vdmVybGF5IHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAwOyBsZWZ0OiAwOyByaWdodDogMDsgYm90dG9tOiAwO1xyXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsMC41KTtcclxuICB6LWluZGV4OiAxMDtcclxuICBvcGFjaXR5OiAwO1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcclxufVxyXG4ucmlnaHRzaWRlLW1lbnUtLW9wZW4gfiAub3ZlcmxheSB7XHJcbiAgb3BhY2l0eTogMTtcclxuICBwb2ludGVyLWV2ZW50czogYXV0bztcclxufVxyXG4ucmlnaHRzaWRlLW1lbnVfX2J0bi1jbG9zZSB7XHJcbiAgd2lkdGg6IDI2cHg7XHJcbiAgaGVpZ2h0OiAyNnB4O1xyXG4gIG1hcmdpbi1sZWZ0OiA1MHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDYwcHg7XHJcbn1cclxuLnJpZ2h0c2lkZS1tZW51X19jb250ZW50IHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWF4LXdpZHRoOiA0ODVweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG4ucmlnaHRzaWRlLW1lbnVfX2xvZ28ge1xyXG4gIHdpZHRoOiAxNTRweDtcclxuICBoZWlnaHQ6IDU4cHg7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIG1hcmdpbi1ib3R0b206IDQxcHg7XHJcbn1cclxuXHJcbi5tZW51X190aXRsZSB7XHJcbiAgZm9udC1zaXplOiAzNnB4O1xyXG4gIGxpbmUtaGVpZ2h0OiA1MXB4O1xyXG4gIHBhZGRpbmctYm90dG9tOiAyM3B4O1xyXG4gIG1hcmdpbi1ib3R0b206IDE3cHg7XHJcblxyXG4gICY6OmFmdGVyIHtcclxuICAgIC8vIHdpZHRoOiAyNTJweDtcclxuICAgIG1heC13aWR0aDogMjUycHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gIH1cclxufVxyXG4udGl0bGUtbGluZS1jZW50ZXIge1xyXG59XHJcbi5tZW51X190ZXh0IHtcclxuICAvLyBtYXgtd2lkdGg6IDQ4M3B4O1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBtYXJnaW4tYm90dG9tOiA3NXB4O1xyXG59XHJcbi5tZW51X19pbWFnZSB7XHJcbiAgbWF4LXdpZHRoOiA0ODVweDtcclxufVxyXG4iLCJAdXNlICd2YXInIGFzICo7XHJcbi8vIEB1c2UgJ2ZvbnQtbWVkaWEnIGFzICo7XHJcbkB1c2UgJ2ZvbnQtbWl4aW4nIGFzICo7XHJcblxyXG4udGl0bGUge1xyXG4gIGZvbnQtZmFtaWx5OiAkaDEtdGl0bGUsIHNhbnMtc2VyaWY7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICBAaW5jbHVkZSBmb250LW1lZGlhKDExMCwgNTApO1xyXG4gIEBpbmNsdWRlIGxpbmUtaGVpZ2h0KDExMCwgMTM0KTtcclxuICBsZXR0ZXItc3BhY2luZzogMHB4O1xyXG4gIGNvbG9yOiAkaDEtY29sb3I7XHJcbn1cclxuLnRpdGxlLWgyIHtcclxuICBmb250LWZhbWlseTogJGgyLXRpdGxlLCBzYW5zLXNlcmlmO1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgQGluY2x1ZGUgZm9udC1tZWRpYSg2MCwgMzQpO1xyXG4gIEBpbmNsdWRlIGxpbmUtaGVpZ2h0KDYwLCA4MCk7XHJcbiAgbGV0dGVyLXNwYWNpbmc6IDBweDtcclxuICBjb2xvcjogJGgxLWNvbG9yO1xyXG59XHJcbi50aXRsZS1oMyB7XHJcbiAgZm9udC1mYW1pbHk6ICRoMy10aXRsZSwgc2Fucy1zZXJpZjtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIEBpbmNsdWRlIGZvbnQtbWVkaWEoMzYsIDI1KTtcclxuICBAaW5jbHVkZSBsaW5lLWhlaWdodCgzNiwgNTEpO1xyXG4gIGxldHRlci1zcGFjaW5nOiAwcHg7XHJcbiAgY29sb3I6ICRoMS1jb2xvcjtcclxufVxyXG4udGl0bGUtaDQge1xyXG4gIGZvbnQtZmFtaWx5OiAkaDMtdGl0bGUsIHNhbnMtc2VyaWY7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICBAaW5jbHVkZSBmb250LW1lZGlhKDIwLCAxNik7XHJcbiAgQGluY2x1ZGUgbGluZS1oZWlnaHQoMjAsIDI0KTtcclxuICBsZXR0ZXItc3BhY2luZzogMHB4O1xyXG4gIGNvbG9yOiAkaDEtY29sb3I7XHJcbn1cclxuXHJcbi50aXRsZS1saW5lLWNlbnRlciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICY6OmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGxpbmUtY29sb3I7XHJcbiAgICAvLyB3aWR0aDogMTBweDtcclxuICAgIGhlaWdodDogMnB4O1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAvLyBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcblxyXG4gICAgLy8gbGVmdDogNTAlO1xyXG4gICAgLy8gdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xyXG4gIH1cclxufVxyXG5cclxuLnRpdGxlLWxpbmUtbGVmdCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICY6OmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgaGVpZ2h0OiAycHg7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGgxLWNvbG9yO1xyXG4gIH1cclxufVxyXG4iLCJAdXNlICd2YXInIGFzICo7XHJcblxyXG4ubGluayB7XHJcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbjtcclxuICAmOmhvdmVyIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcclxuICAgIGNvbG9yOiAkaDEtY29sb3I7XHJcbiAgfVxyXG59XHJcblxyXG4ubGluay0tYWN0aXZlIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW47XHJcbiAgJjo6YWZ0ZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGV4dC1jb2xvcjtcclxuICAgIGhlaWdodDogMnB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbiAgfVxyXG4gICY6aG92ZXIge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xyXG4gICAgY29sb3I6ICRoMS1jb2xvcjtcclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGgxLWNvbG9yO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIubG9nbyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4ubG9nb19faWNvbiB7XHJcbiAgaGVpZ2h0OiAzMnB4O1xyXG59IiwiLmJ1cmdlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgd2lkdGg6IDM3cHg7XHJcbiAgaGVpZ2h0OiAzN3B4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbjtcclxuICAmOmhvdmVyIHtcclxuICAgIGJveC1zaGFkb3c6IDAgMXB4IDRweCAwICMwMDAwMDBkOTsgLy8g0LTQvtCx0LDQstC70LXQvdCwINGC0LXQvdGMXHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XHJcbiAgfVxyXG59XHJcblxyXG4iLCJAdXNlICd2YXInIGFzICo7XHJcbi5pbnB1dCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgYm9yZGVyOiAycHggc29saWQgJHRleHQtY29sb3I7XHJcbiAgYm9yZGVyLXJhZGl1czogMjFweDtcclxuICBsaW5lLWhlaWdodDogY2FsYygyOCAvIDE2KTtcclxuICBjb2xvcjogJGgxLWNvbG9yO1xyXG4gIHRyYW5zaXRpb246IGJvcmRlciAwLjNzIGVhc2UtaW4tb3V0O1xyXG4gICY6Zm9jdXMsXHJcbiAgJjpob3ZlciB7XHJcbiAgICBib3JkZXItY29sb3I6ICAjMDAwO1xyXG4gICAgY29sb3I6ICMwMDA7XHJcbiAgfVxyXG4gICY6OnBsYWNlaG9sZGVyIHtcclxuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMnM7XHJcbiAgfVxyXG4gICY6aG92ZXI6OnBsYWNlaG9sZGVyLFxyXG4gICY6Zm9jdXM6OnBsYWNlaG9sZGVyIHtcclxuICAgIGNvbG9yOiAjMDAwOyAvLyDRhtCy0LXRgiDQv9GA0Lgg0L3QsNCy0LXQtNC10L3QuNC4INC40LvQuCDRhNC+0LrRg9GB0LVcclxuICB9XHJcbn1cclxuIiwiQHVzZSAndmFyJyBhcyAqO1xyXG5cclxuLmJ0biB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJ0bi1iZztcclxuICBjb2xvcjogJGJnLWNvbG9yO1xyXG4gIGZvbnQtc2l6ZTogJHRleHQ7XHJcbiAgYm9yZGVyLXJhZGl1czogMjFweDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG4gIGxpbmUtaGVpZ2h0OiBjYWxjKDI4IC8gMTYpO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgYm9yZGVyOiAxcHggJGJ0bi1iZyBzb2xpZDtcclxuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yLCBjb2xvciwgMC4zcyBlYXNlLW91dDtcclxuICB1c2VyLXNlbGVjdDogbm9uZTsgLy8g0LfQsNC/0YDQtdGCINCy0YvQtNC10LvQtdC90LjQtSDRgtC10LrRgdGC0LAg0LLQvdGD0YLRgNC4INGN0LvQtdC80LXQvdGC0LBcclxuXHJcbiAgJjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGNvbG9yOiAkYnRuLWJnO1xyXG4gIH1cclxuXHJcbiAgJjphY3RpdmUge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk2KTtcclxuICB9XHJcbn1cclxuXHJcbi5idG4tdGFicyB7XHJcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xyXG4gIGNvbG9yOiAkdGV4dC1jb2xvcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci1yYWRpdXM6IDIxcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJHRleHQtY29sb3I7XHJcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciwgY29sb3IsIDAuNXMgZWFzZS1vdXQ7XHJcbiAgdXNlci1zZWxlY3Q6IG5vbmU7IC8vINC30LDQv9GA0LXRgiDQstGL0LTQtdC70LXQvdC40LUg0YLQtdC60YHRgtCwINCy0L3Rg9GC0YDQuCDRjdC70LXQvNC10L3RgtCwXHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogJGJ0bi1iZy10YWItYWN0aXZlO1xyXG4gICAgLy8gY29sb3I6ICR0ZXh0LXRhYi1jb2xvcjtcclxuICAgIC8vIGJvcmRlci1jb2xvcjogJGJ0bi1iZy10YWItYWN0aXZlO1xyXG4gIH1cclxuXHJcbiAgJjphY3RpdmUge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk2KTtcclxuICB9XHJcblxyXG4gICYtLWFjdGl2ZSB7XHJcbiAgICBmb250LWZhbWlseTogJ09wZW4gU2FucycsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI4cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIxcHg7XHJcbiAgICAvLyBib3JkZXI6IDFweCBzb2xpZCAkdGV4dC1jb2xvcjtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IsIGNvbG9yLCAwLjVzIGVhc2Utb3V0O1xyXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7IC8vINC30LDQv9GA0LXRgiDQstGL0LTQtdC70LXQvdC40LUg0YLQtdC60YHRgtCwINCy0L3Rg9GC0YDQuCDRjdC70LXQvNC10L3RgtCwXHJcbiAgICBib3JkZXItcmFkaXVzOiAyMXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZWYzNTtcclxuICAgIGNvbG9yOiAjMzYzODM4O1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgI2ZmZWYzNTtcclxuICB9XHJcbn1cclxuXHJcbi5wbGF5IHtcclxuXHJcbiAgLy8gd2lkdGg6IDgwcHg7XHJcbiAgLy8gaGVpZ2h0OiA4MHB4O1xyXG4gIC8vIGJhY2tncm91bmQtY29sb3I6ICM5Nzk3OTc7XHJcbiAgLy8gYm9yZGVyLXJhZGl1czogNTBweDtcclxuICAvLyB0cmFuc2l0aW9uOiBhbGwgMC4zcztcclxuICAmX19nbyB7XHJcbiAgICAvLyB3aWR0aDogMDtcclxuICAgIC8vIGhlaWdodDogMDtcclxuICAgIC8vIGJvcmRlci10b3A6IDE4cHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICAvLyBib3JkZXItYm90dG9tOiAxOHB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgLy8gYm9yZGVyLWxlZnQ6IDI4cHggc29saWQgI2ZmZmZmZmVkOyAvLyDRhtCy0LXRgiDRgtGA0LXRg9Cz0L7Qu9GM0L3QuNC60LBcclxuICAgIC8vIG1hcmdpbjogMjJweCBhdXRvO1xyXG4gICAgLy8gZGlzcGxheTogYmxvY2s7XHJcbiAgICAvLyBib3gtc2hhZG93OiAwIDFweCA0cHggMCAjMDAwMDAwZDk7IC8vINC00L7QsdCw0LLQu9C10L3QsCDRgtC10L3RjFxyXG4gICAgLy8gYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNnB4O1xyXG4gICAgLy8gYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNnB4O1xyXG4gIH1cclxuXHJcbiAgJjphY3RpdmUge1xyXG4gICAgLy8gdHJhbnNmb3JtOiBzY2FsZSgwLjk2KTtcclxuICB9XHJcbn0iLCJAdXNlICcuLi9iYXNlL3ZhcicgYXMgKjtcclxuQHVzZSAnLi4vYmFzZS9mb250LW1peGluJyBhcyAqO1xyXG5cclxuJGJsYWNrOiAjMzYzODM4O1xyXG5cclxuLmZvb3RlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RmZGZkZjtcclxufVxyXG4vLyAuZm9vdGVyX19jb250ZW50IHtcclxuLy8gfVxyXG4uZm9vdGVyX19pbm5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgcGFkZGluZzogNjBweCAwIDgwcHg7XHJcbn1cclxuLmZvb3Rlcl9faW5mbyB7XHJcbiAgbWF4LXdpZHRoOiA1NDBweDtcclxufVxyXG4uZm9vdGVyX19pbmZvLXRpdGxlIHtcclxuICBtYXJnaW4tYm90dG9tOiAxNHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgbGluZS1oZWlnaHQ6IDIzcHg7XHJcbiAgQGV4dGVuZCAldGl0bGUtZm9udDtcclxuICBjb2xvcjogIzM2MzgzODtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuLmZvb3Rlcl9faW5mby10ZXh0IHtcclxuICBtYXgtd2lkdGg6IDQ3NnB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbn1cclxuLmZvb3Rlcl9faW5mby1lbWFpbCB7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICBtYXJnaW4tYm90dG9tOiAyMnB4O1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBwYWRkaW5nLWxlZnQ6IDMwcHg7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG4uZm9vdGVyX19mb3JtLWljb24ge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAwO1xyXG4gIHRvcDogNTAlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxufVxyXG4uZm9vdGVyX19mb3JtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcbi5mb290ZXJfX2Zvcm0taW5wdXQge1xyXG4gIHBhZGRpbmc6IDZweCAxMHB4IDZweCAxOHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDIxcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiKCRibGFjaywgMC43KTtcclxuICBjb2xvcjogIzAwMDtcclxuICB3aWR0aDogMTAwJTtcclxuICAmOjpwbGFjZWhvbGRlciB7XHJcbiAgICBmb250LWZhbWlseTogJ09wZW4gU2FucycsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgfVxyXG59XHJcbi5mb290ZXJfX2Zvcm0tYnRuIHtcclxuICBwYWRkaW5nOiA2cHggMTJweDtcclxuICBtaW4td2lkdGg6IDE2MHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiA5cHg7XHJcbn1cclxuLmZvb3Rlcl9fc29jaWFsIHtcclxuICB3aWR0aDogMTI1cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gIG1hcmdpbi1sZWZ0OiAxMDBweDtcclxufVxyXG4uZm9vdGVyX19tZW51IHtcclxuICBtYXJnaW4tcmlnaHQ6IDYwcHg7XHJcbiAgd2lkdGg6IDEyNXB4O1xyXG59XHJcbi8vIC5mb290ZXJfX21lbnUtbGlzdCB7XHJcbi8vIH1cclxuXHJcbi5mb290ZXJfX3NvY2lhbC1pdGVtIHtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIGNvbG9yOiAjNzA3MDcwO1xyXG59XHJcbi5mb290ZXJfX21lbnUtaXRlbSB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuLmxpc3RfX3NvY2lhbC1saW5rIHtcclxuICBjb2xvcjogIzcwNzA3MDtcclxuICBwYWRkaW5nLWxlZnQ6IDI4cHg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcbi5mb290ZXJfX21lbnUtbGluayB7XHJcbiAgY29sb3I6ICM3MDcwNzA7XHJcbn1cclxuXHJcbi5saXN0X19zb2NpYWwtaWNvbiB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGxlZnQ6IDA7XHJcbiAgdG9wOiA1MCU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICY6aG92ZXIge1xyXG4gICAgLy8gbGVmdDogMDtcclxuICB9XHJcbn1cclxuXHJcbi5mb290ZXJfX2NvcHkge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmxhY2s7XHJcbiAgY29sb3I6ICNhMWExYTE7XHJcbiAgcGFkZGluZzogNDJweCAxNXB4IDQxcHg7XHJcbn1cclxuXHJcbi8vIC5mb290ZXIge1xyXG4vLyAgIGJhY2tncm91bmQtY29sb3I6ICRmb290ZXItYmctY29sb3I7XHJcbi8vIH1cclxuLy8gLmZvb3Rlcl9fY29weSB7XHJcbi8vICAgcGFkZGluZy1ib3R0b206IDQycHg7XHJcbi8vICAgYmFja2dyb3VuZC1jb2xvcjogJGZvb3Rlci1iZy1jb3B5LWNvbG9yO1xyXG4vLyAgIHBhZGRpbmctdG9wOiA0MXB4O1xyXG4vLyAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuLy8gfVxyXG4vLyAuZm9vdGVyX19jb3B5LWxpbmsge1xyXG4vLyAgIGNvbG9yOiAjYTFhMWExO1xyXG4vLyAgICY6aG92ZXIge1xyXG4vLyAgICAgY29sb3I6ICNhMWExYTE7XHJcbi8vICAgfVxyXG4vLyB9XHJcbi8vIC5mb290ZXJfX2Zvcm0tYm94IHtcclxuLy8gICBtYXgtd2lkdGg6IDUzNnB4O1xyXG4vLyAgIHdpZHRoOiAxMDAlO1xyXG4vLyB9XHJcbi8vIC5mb290ZXJfX2Zvcm0tdGl0bGUge1xyXG4vLyAgIEBpbmNsdWRlIGZvbnQtbWVkaWEoMTYsIDE0KTtcclxuLy8gICBAaW5jbHVkZSBsaW5lLWhlaWdodCgxNiwgMjMpO1xyXG4vLyAgIG1hcmdpbi1ib3R0b206IDE0cHg7XHJcbi8vIH1cclxuLy8gLmZvb3Rlcl9fZm9ybS10ZXh0IHtcclxuLy8gICBtYXgtd2lkdGg6IDQ3NnB4O1xyXG4vLyAgIHdpZHRoOiAxMDAlO1xyXG4vLyAgIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbi8vIH1cclxuLy8gLmZvb3Rlcl9fZm9ybS1lbWFpbCB7XHJcbi8vICAgZm9udC1zaXplOiAxNHB4O1xyXG4vLyAgIEBpbmNsdWRlIGxpbmUtaGVpZ2h0KDE0LCAyOCk7XHJcbi8vICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuLy8gICAvLyBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuLy8gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyAgIGdhcDogOHB4O1xyXG4vLyAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuLy8gICBtYXJnaW4tYm90dG9tOiAyMnB4O1xyXG4vLyAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW47XHJcbi8vICAgJjpob3ZlciB7XHJcbi8vICAgICBmb250LXdlaWdodDogNzAwO1xyXG4vLyAgIH1cclxuLy8gfVxyXG4vLyAuZm9ybV9faW5wdXQge1xyXG4vLyAgIG1heC13aWR0aDogMzY4cHg7XHJcbi8vICAgd2lkdGg6IDEwMCU7XHJcbi8vICAgcGFkZGluZzogNnB4IDE4cHg7XHJcbi8vIH1cclxuLy8gLmZvcm1fX2J0biB7XHJcbi8vICAgcGFkZGluZzogNnB4IDE4cHg7XHJcbi8vICAgbWF4LXdpZHRoOiAxMzZweDtcclxuLy8gICB3aWR0aDogMTAwJTtcclxuLy8gfVxyXG4vLyAuZm9vdGVyX19jb250YWluZXIge1xyXG4vLyAgIHBhZGRpbmctdG9wOiA2MHB4O1xyXG4vLyAgIHBhZGRpbmctYm90dG9tOiA4MHB4O1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4vLyAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4vLyB9XHJcbi8vIC5mb290ZXJfX3NvY2lhbC1pdGVtLFxyXG4vLyAuZm9vdGVyX19pbmZvLWl0ZW0ge1xyXG4vLyAgIC8vIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbi8vICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuLy8gfVxyXG5cclxuLy8gLmZvb3Rlcl9fZm9ybS1pY29uIHtcclxuLy8gICAvLyBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbi8vICAgLy8gdGV4dC1hbGlnbjogY2VudGVyO1xyXG4vLyB9XHJcbi8vIC5mb290ZXJfX2Zvcm0ge1xyXG4vLyAgIC8vICAgbWF4LXdpZHRoOiAzNjhweDtcclxuLy8gICAvLyAgIHdpZHRoOiAxMDAlO1xyXG5cclxuLy8gICAvLyBnYXA6IDEycHg7IC8vINC00LvRjyDQvtGC0YHRgtGD0L/QsCDQvNC10LbQtNGDIGlucHV0INC4INC60L3QvtC/0LrQvtC5XHJcbi8vICAgLy8gbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbi8vIH1cclxuXHJcbi8vIC8vIC5mb290ZXJfX3NvY2lhbCB7fVxyXG4vLyAuZm9vdGVyX19zb2NpYWwtaXRlbSB7XHJcbi8vICAgLy8gZGlzcGxheTogZmxleDtcclxuLy8gICAvLyBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyB9XHJcbi8vIC5saXN0X19zb2NpYWwtbGluayB7XHJcbi8vICAgLy8gZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbi8vICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuLy8gICBnYXA6IDhweDsgLyog0YDQsNGB0YHRgtC+0Y/QvdC40LUg0LzQtdC20LTRgyDQuNC60L7QvdC60L7QuSDQuCDRgtC10LrRgdGC0L7QvCAqL1xyXG4vLyAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW47XHJcbi8vICAgJjpob3ZlciB7XHJcbi8vICAgICBjb2xvcjogJGgxLWNvbG9yO1xyXG4vLyAgIC8vICAgY29sb3I6ICR0ZXh0LWNvbG9yO1xyXG4vLyAgIH1cclxuLy8gfVxyXG4vLyAubGlzdF9fc29jaWFsLWljb24ge1xyXG4vLyAgIGRpc3BsYXk6IGJsb2NrO1xyXG4vLyAgIGZsZXgtc2hyaW5rOiAwO1xyXG4vLyAgIC8vIGZsZXgtc2hyaW5rIOKAlCDRjdGC0L4gQ1NTLdGB0LLQvtC50YHRgtCy0L4sINC60L7RgtC+0YDQvtC1INC+0L/RgNC10LTQtdC70Y/QtdGCLCDQvdCw0YHQutC+0LvRjNC60L4g0Y3Qu9C10LzQtdC90YIg0LzQvtC20LXRgiDRg9C80LXQvdGM0YjQsNGC0YzRgdGPINC/0L4g0YjQuNGA0LjQvdC1ICjQuNC70Lgg0LLRi9GB0L7RgtC1KSDQstC90YPRgtGA0LggZmxleC3QutC+0L3RgtC10LnQvdC10YDQsCwg0LXRgdC70Lgg0L3QtSDRhdCy0LDRgtCw0LXRgiDQvNC10YHRgtCwLlxyXG4vLyAgIC8vINCX0L3QsNGH0LXQvdC40LUg0L/QviDRg9C80L7Qu9GH0LDQvdC40Y46IGZsZXgtc2hyaW5rOiAxOyDigJQg0Y3Qu9C10LzQtdC90YIg0LzQvtC20LXRgiDRgdC20LjQvNCw0YLRjNGB0Y8uXHJcbi8vICAgLy8g0JXRgdC70LggZmxleC1zaHJpbms6IDA7IOKAlCDRjdC70LXQvNC10L3RgiDQvdC1INCx0YPQtNC10YIg0YHQttC40LzQsNGC0YzRgdGPLCDQtNCw0LbQtSDQtdGB0LvQuCDQvNC10YHRgtCwINC80LDQu9C+LlxyXG4vLyAgIC8vINCV0YHQu9C4IGZsZXgtc2hyaW5rOiAyOyDigJQg0Y3Qu9C10LzQtdC90YIg0LHRg9C00LXRgiDRgdC20LjQvNCw0YLRjNGB0Y8g0LIgMiDRgNCw0LfQsCDQsdGL0YHRgtGA0LXQtSwg0YfQtdC8INGN0LvQtdC80LXQvdGC0Ysg0YEgZmxleC1zaHJpbms6IDE7LlxyXG5cclxuLy8gICAmOmhvdmVyIHtcclxuLy8gICAgIC8vIHN0cm9rZTogJGgxLWNvbG9yO1xyXG4vLyAgICAgLy8gZmlsbDogJGgxLWNvbG9yO1xyXG4vLyAgIH1cclxuLy8gfVxyXG4vLyAvLyAuZm9vdGVyX19pbmZvIHt9XHJcbi8vIC8vIC5mb290ZXJfX2luZm8taXRlbSB7fVxyXG4vLyAuZm9vdGVyX19pbmZvLWxpbmsge1xyXG4vLyAgIC8vIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW47XHJcbi8vICAgJjpob3ZlciB7XHJcbi8vICAgICAvLyBjb2xvcjogJHRleHQtY29sb3I7XHJcbi8vICAgICAvLyBmb250LXdlaWdodDogNzAwO1xyXG4vLyAgICAgY29sb3I6ICRoMS1jb2xvcjtcclxuLy8gICB9XHJcbi8vIH1cclxuXHJcbi8vIC8vIC5mb290ZXJfX2Zvcm0tc2Fwb3Ige1xyXG4vLyAvLyAgIGZvbnQtc2l6ZTogMTRweDtcclxuLy8gLy8gICBsaW5lLWhlaWdodDogY2FsYygyOCAvIDE0KTtcclxuLy8gLy8gICBmb250LXdlaWdodDogNjAwO1xyXG4vLyAvLyB9XHJcbi8vIC8vIC5mb290ZXJfX2NvcHkge1xyXG5cclxuLy8gLy8gfVxyXG5cclxuLy8gLy8gLmZvb3RlciB7XHJcbi8vIC8vICAgYmFja2dyb3VuZC1jb2xvcjogJGJnLWZvb3Rlci1jb2xvcjtcclxuXHJcbi8vIC8vICAgJl9fY29weSB7XHJcbi8vIC8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmctZm9vdGVyLWNvcHktY29sb3I7XHJcbi8vIC8vICAgfVxyXG4vLyAvLyB9XHJcblxyXG4vLyAvLyAuZm9vdGVyX19jb250YWluZXIge1xyXG4vLyAvLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vIC8vICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4vLyAvLyAgIHBhZGRpbmc6IDYwcHggMDtcclxuLy8gLy8gfVxyXG5cclxuLy8gLy8gLmZvb3Rlcl9fZm9ybS10aXRsZSB7XHJcbi8vIC8vICAgZm9udC1zaXplOiAxNnB4O1xyXG4vLyAvLyAgIGxpbmUtaGVpZ2h0OiBjYWxjKDIzIC8gJHApO1xyXG4vLyAvLyAgIG1hcmdpbi1ib3R0b206IDE0cHg7XHJcbi8vIC8vIH1cclxuXHJcbi8vIC8vIC5mb290ZXJfX2Zvcm0tdGV4dCB7XHJcbi8vIC8vICAgbWF4LXdpZHRoOiA0NzVweDtcclxuLy8gLy8gICB3aWR0aDogMTAwJTtcclxuLy8gLy8gICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4vLyAvLyAgIGxpbmUtaGVpZ2h0OiAyN3B4O1xyXG4vLyAvLyB9XHJcblxyXG4vLyAvLyAuZm9vdGVyX19mb3JtLWVtYWlsIHtcclxuLy8gLy8gICBmb250LXdlaWdodDogNjAwO1xyXG4vLyAvLyAgIGZvbnQtc2l6ZTogMTRweDtcclxuLy8gLy8gICBjb2xvcjogJHRpdGxlO1xyXG4vLyAvLyAgIG1hcmdpbi1ib3R0b206IDIycHg7XHJcbi8vIC8vICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xyXG4vLyAvLyAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbi8vIC8vICAgJjo6YmVmb3JlIHtcclxuLy8gLy8gICAgIGNvbnRlbnQ6ICcnO1xyXG4vLyAvLyAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9zdmcvZm9vdGVyX21haWwuc3ZnKTtcclxuLy8gLy8gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuLy8gLy8gICAgIHRvcDogN3B4O1xyXG4vLyAvLyAgICAgbGVmdDogMDtcclxuLy8gLy8gICAgIHdpZHRoOiAxNnB4O1xyXG4vLyAvLyAgICAgaGVpZ2h0OiAxMnB4O1xyXG4vLyAvLyAgIH1cclxuLy8gLy8gfVxyXG5cclxuLy8gLy8gLmZvb3Rlcl9fZm9ybSB7XHJcbi8vIC8vICAgbWF4LXdpZHRoOiA1NTVweDtcclxuLy8gLy8gICB3aWR0aDogMTAwJTtcclxuLy8gLy8gICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xyXG4vLyAvLyB9XHJcblxyXG4vLyAvLyAuZm9vdGVyX19mb3JtLXNlbmQge1xyXG4vLyAvLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vIC8vICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4vLyAvLyB9XHJcblxyXG4vLyAvLyAuZm9ybV9faW5wdXQge1xyXG4vLyAvLyAgIG1heC13aWR0aDogMzY4cHg7XHJcbi8vIC8vICAgd2lkdGg6IDEwMCU7XHJcbi8vIC8vICAgcGFkZGluZy1sZWZ0OiAxOHB4O1xyXG5cclxuLy8gLy8gICBtYXJnaW4tcmlnaHQ6IDE1cHg7XHJcbi8vIC8vICAgJjo6cGxhY2Vob2xkZXIge1xyXG4vLyAvLyAgICAgJjpob3ZlciB7XHJcbi8vIC8vICAgICAgIGNvbG9yOiAjMDAwO1xyXG4vLyAvLyAgICAgfVxyXG4vLyAvLyAgIH1cclxuLy8gLy8gfVxyXG5cclxuLy8gLy8gLmZvcm1fX2J0biB7XHJcbi8vIC8vICAgbWF4LXdpZHRoOiAxNjBweDtcclxuLy8gLy8gICB3aWR0aDogMTAwJTtcclxuLy8gLy8gICBwYWRkaW5nOiA2cHggMTJweDtcclxuLy8gLy8gfVxyXG5cclxuLy8gLy8gLy9cclxuLy8gLy8gLmZvb3Rlcl9fZm9ybS1zb2NpYWwge1xyXG4vLyAvLyAgIG1heC13aWR0aDogMTA4cHg7XHJcbi8vIC8vICAgd2lkdGg6IDEwMCU7XHJcbi8vIC8vICAgcGFkZGluZy1yaWdodDogMTVweDtcclxuLy8gLy8gfVxyXG5cclxuLy8gLy8gLmxpc3RfX2l0ZW0ge1xyXG4vLyAvLyAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbi8vIC8vIH1cclxuXHJcbi8vIC8vIC5saXN0X19pdGVtLWxpbmstLWZhY2Vib29rLFxyXG4vLyAvLyAubGlzdF9faXRlbS1saW5rLS1pbnN0YWdyYW0sXHJcbi8vIC8vIC5saXN0X19pdGVtLWxpbmstLXBpbnRlcmVzdCxcclxuLy8gLy8gLmxpc3RfX2l0ZW0tbGluay0td2hhdHNhcHAsXHJcbi8vIC8vIC5saXN0X19pdGVtLWxpbmstLXlvdXR1YmUge1xyXG4vLyAvLyAgIGZvbnQtc2l6ZTogMTRweDtcclxuLy8gLy8gICBsaW5lLWhlaWdodDogY2FsYygyOCAvIDE0KTtcclxuLy8gLy8gICBmb250LXdlaWdodDogNjAwO1xyXG4vLyAvLyAgIHBhZGRpbmctbGVmdDogMjhweDtcclxuLy8gLy8gICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbi8vIC8vICAgJjo6YmVmb3JlIHtcclxuLy8gLy8gICAgIGNvbnRlbnQ6ICcnO1xyXG4vLyAvLyAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuLy8gLy8gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuLy8gLy8gICAgIHRvcDogOHB4O1xyXG4vLyAvLyAgICAgbGVmdDogMDtcclxuLy8gLy8gICAgIHdpZHRoOiAxOHB4O1xyXG4vLyAvLyAgICAgaGVpZ2h0OiAxOHB4O1xyXG4vLyAvLyAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuLy8gLy8gICB9XHJcbi8vIC8vIH1cclxuXHJcbi8vIC8vIC5saXN0X19pdGVtLWxpbmstLWZhY2Vib29rOjpiZWZvcmUge1xyXG4vLyAvLyAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvc3ZnL2ZhY2Vib29rLnN2Zyk7XHJcbi8vIC8vIH1cclxuXHJcbi8vIC8vIC5saXN0X19pdGVtLWxpbmstLWluc3RhZ3JhbTo6YmVmb3JlIHtcclxuLy8gLy8gICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL3N2Zy9pbnN0YWdyYW0uc3ZnKTtcclxuLy8gLy8gfVxyXG5cclxuLy8gLy8gLmxpc3RfX2l0ZW0tbGluay0tcGludGVyZXN0OjpiZWZvcmUge1xyXG4vLyAvLyAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvc3ZnL3BpbnRlcmVzdC5zdmcpO1xyXG4vLyAvLyB9XHJcblxyXG4vLyAvLyAubGlzdF9faXRlbS1saW5rLS13aGF0c2FwcDo6YmVmb3JlIHtcclxuLy8gLy8gICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL3N2Zy93aGF0c2FwcC5zdmcpO1xyXG4vLyAvLyB9XHJcblxyXG4vLyAvLyAubGlzdF9faXRlbS1saW5rLS15b3V0dWJlOjpiZWZvcmUge1xyXG4vLyAvLyAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvc3ZnL3lvdXR1YmUuc3ZnKTtcclxuLy8gLy8gfVxyXG4iLCIvKiBTbGlkZXIgKi9cblxuLnNsaWNrLXNsaWRlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLWtodG1sLXVzZXItc2VsZWN0OiBub25lO1xuICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xuICAgIC1tcy10b3VjaC1hY3Rpb246IHBhbi15O1xuICAgIHRvdWNoLWFjdGlvbjogcGFuLXk7XG4gICAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cbi5zbGljay1saXN0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcblxuICAgICY6Zm9jdXMge1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgIH1cblxuICAgICYuZHJhZ2dpbmcge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIGN1cnNvcjogaGFuZDtcbiAgICB9XG59XG4uc2xpY2stc2xpZGVyIC5zbGljay10cmFjayxcbi5zbGljay1zbGlkZXIgLnNsaWNrLWxpc3Qge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xufVxuXG4uc2xpY2stdHJhY2sge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG5cbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgfVxuXG4gICAgJjphZnRlciB7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cblxuICAgIC5zbGljay1sb2FkaW5nICYge1xuICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgfVxufVxuLnNsaWNrLXNsaWRlIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWluLWhlaWdodDogMXB4O1xuICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgIGZsb2F0OiByaWdodDtcbiAgICB9XG4gICAgaW1nIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICAgICYuc2xpY2stbG9hZGluZyBpbWcge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICAmLmRyYWdnaW5nIGltZyB7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIH1cblxuICAgIC5zbGljay1pbml0aWFsaXplZCAmIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgLnNsaWNrLWxvYWRpbmcgJiB7XG4gICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICB9XG5cbiAgICAuc2xpY2stdmVydGljYWwgJiB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIH1cbn1cbi5zbGljay1hcnJvdy5zbGljay1oaWRkZW4ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG4iLCJAdXNlICcuLi9iYXNlL3ZhcicgYXMgKjtcclxuQHVzZSAnLi4vLi4vbm9kZV9tb2R1bGVzL3NsaWNrLWNhcm91c2VsL3NsaWNrL3NsaWNrLnNjc3MnIGFzICo7XHJcblxyXG4uaGVybyB7XHJcbn1cclxuLmNvbnRhaW5lciB7XHJcbn1cclxuLmhlcm9fX2lubmVyIHtcclxuICBtYXJnaW4tYm90dG9tOiA3MHB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAmOjphZnRlciB7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvYmcvaGVyby1iZy5qcGcpO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgICB0b3A6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogNzIycHg7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICB9XHJcbn1cclxuLmhlcm9fX3NsaWRlciB7XHJcbiAgLy8gbWFyZ2luLWJvdHRvbTogODdweDtcclxufVxyXG4uaGVyb19fc2xpZGVyLWl0ZW0ge1xyXG4gIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi5oZXJvX19zbGlkZXItaW1nIHtcclxuICBtYXJnaW4tbGVmdDogLTE0JTtcclxuICBtYXgtd2lkdGg6IDcwM3B4O1xyXG4gIGhlaWdodDogODE1cHg7XHJcbiAgb2JqZWN0LWZpdDogY292ZXI7XHJcbn1cclxuLmhlcm9fX3NsaWRlci1pbmZvIHtcclxuICBtYXgtd2lkdGg6IDY0NXB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAyNXB4O1xyXG59XHJcbi5oZXJvX19zbGlkZXItdGl0bGUge1xyXG4gIGxpbmUtaGVpZ2h0OiAxMzVweDtcclxuICBwYWRkaW5nLWJvdHRvbTogNTBweDtcclxuICBtYXJnaW4tYm90dG9tOiAyNnB4O1xyXG59XHJcbi5oZXJvX19zbGlkZXItdGV4dCB7XHJcbiAgbWF4LXdpZHRoOiA1ODVweDtcclxufVxyXG5cclxuLy8gLmhlcm8ge1xyXG4vLyAgIC8vIG1hcmdpbi1ib3R0b206IDIzMHB4O1xyXG4vLyAgIC8vIG1heC13aWR0aDogMTk4MnB4O1xyXG4vLyAgIC8vIG1hcmdpbi1ib3R0b206IDE4MHB4O1xyXG4vLyB9XHJcblxyXG4vLyAuaGVyb19fc2xpZGVyIHtcclxuLy8gICAvLyBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbi8vICAgLy8gZGlzcGxheTogZmxleDtcclxuLy8gICAvLyBoZWlnaHQ6IDgxMnB4O1xyXG4vLyAgIC8vIHBhZGRpbmctcmlnaHQ6IDIwMHB4O1xyXG4vLyAgIC8vIHBhZGRpbmctbGVmdDogMjAwcHg7XHJcbi8vIH1cclxuLy8gLmhlcm9fX2l0ZW0ge1xyXG4vLyAgIC8vIG1heC13aWR0aDogMTM2NXB4O1xyXG4vLyAgIC8vIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgLy8gYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuLy8gICAvLyBwYWRkaW5nLXRvcDogMTc0cHg7XHJcbi8vICAgLy8gcGFkZGluZy1ib3R0b206IDE0NnB4O1xyXG4vLyAgIC8vIHdpZHRoOiAxMDAlO1xyXG4vLyAgIC8vIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuLy8gICAvLyBtYXJnaW46IDAgYXV0bztcclxuLy8gICAvLyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuLy8gfVxyXG4vLyAuaGVyb19faW1nIHtcclxuLy8gICAvLyB3aWR0aDogMTAwJTtcclxuLy8gICAvLyBoZWlnaHQ6IDEwMCU7XHJcbi8vICAgLy8gd2lkdGg6IDcwM3B4O1xyXG4vLyAgIC8vIGhlaWdodDogODE1cHg7XHJcbi8vICAgLy8gb2JqZWN0LWZpdDogY292ZXI7IC8vINCh0L7RhdGA0LDQvdGP0LXRgiDQv9GA0L7Qv9C+0YDRhtC40LgsINC+0LHRgNC10LfQsNGPINC70LjRiNC90LXQtVxyXG4vLyAgIC8vIG1hcmdpbi1yaWdodDogMTlweDtcclxuLy8gICAvLyBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbi8vICAgLy8gdG9wOiAwO1xyXG4vLyB9XHJcbi8vIC5oZXJvX19ib3gge1xyXG4vLyAgIC8vIG1heC13aWR0aDogNjM1cHg7XHJcbi8vIH1cclxuLy8gLmhlcm9fX3RpdGxlIHtcclxuLy8gICAvLyBwYWRkaW5nLWJvdHRvbTogMjZweDtcclxuLy8gICAvLyBtYXJnaW4tYm90dG9tOiAyNnB4O1xyXG4vLyAgIC8vICYgc3BhbiB7XHJcbi8vICAgLy8gICBkaXNwbGF5OiBibG9jaztcclxuLy8gICAvLyB9XHJcbi8vIH1cclxuLy8gLmhlcm9fX3RleHQge1xyXG4vLyAgIC8vIG1heC13aWR0aDogNTg2cHg7XHJcbi8vICAgLy8gd2lkdGg6IDEwMCU7XHJcbi8vIH1cclxuXHJcbi8vIC8vIC5oZXJvIHtcclxuLy8gLy8gICAvLyBtaW4taGVpZ2h0OiA3MjJweDtcclxuLy8gLy8gICAvLyB3aWR0aDogMTAwdnc7XHJcbi8vIC8vICAgLy8gbWluLXdpZHRoOiAxMDAlO1xyXG4vLyAvLyAgIC8vIGhlaWdodDogNzIycHg7XHJcblxyXG4vLyAvLyB9XHJcbi8vIC8vIC5oZXJvX19jb250YWluZXIge1xyXG4vLyAvLyAgIG1heC13aWR0aDogMTM2MHB4O1xyXG4vLyAvLyAgIG1hcmdpbjogMCBhdXRvO1xyXG4vLyAvLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vIC8vIH1cclxuLy8gLy8gLmhlcm9fX3RpdGxlIHtcclxuLy8gLy8gICAvLyBtYXJnaW4tYm90dG9tOiAyNnB4O1xyXG4vLyAvLyAgIHBhZGRpbmctYm90dG9tOiAyNnB4O1xyXG4vLyAvLyAgIG1hcmdpbi1ib3R0b206IDI2cHg7XHJcbi8vIC8vIH1cclxuLy8gLy8gLmhlcm9fX2ltZyB7XHJcbi8vIC8vICAgLy8gZGlzcGxheTogYmxvY2s7XHJcbi8vIC8vICAgLy8gd2lkdGg6IDcwM3B4O1xyXG4vLyAvLyAgIC8vIHdpZHRoOiAxMDAlO1xyXG4vLyAvLyAgIC8vIGhlaWdodDogODE1cHg7XHJcbi8vIC8vICAgLy8gaGVpZ2h0OiBhdXRvO1xyXG4vLyAvLyAgIC8vIG9iamVjdC1maXQ6IGNvbnRhaW47XHJcbi8vIC8vIH1cclxuXHJcbi8vIC8vIC5oZXJvX190ZXh0IHtcclxuLy8gLy8gbWF4LXdpZHRoOiA1ODZweDtcclxuLy8gLy8gfVxyXG4iLCJAdXNlICcuLi9iYXNlL3ZhcicgYXMgKjtcclxuXHJcbi5mdXJuaXR1cmUge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwYWRkaW5nOiA0NXB4IDAgMTA0cHg7XHJcbn1cclxuXHJcbi5mdXJuaXR1cmVfX3RpdGxlIHtcclxuICBmb250LXNpemU6IDM2cHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDI1cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjRweDtcclxuICBjb2xvcjogIzM2MzgzODtcclxuXHJcbiAgJjo6YWZ0ZXIge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gICAgd2lkdGg6IDE1JTtcclxuICB9XHJcbn1cclxuXHJcbi5mdXJuaXR1cmVfX3RleHQge1xyXG4gIG1heC13aWR0aDogNzMwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgbWFyZ2luLWJvdHRvbTogMjdweDtcclxufVxyXG5cclxuLyoqL1xyXG5cclxuLmNvbGxlY3Rpb24ge1xyXG4gIC8vIGRpc3BsYXk6IGdyaWQ7XHJcbiAgLy8gZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNSwgMWZyKTtcclxuICAvLyBncmlkLWdhcDogMzBweDtcclxuICAvLyBncmlkLWdhcDogMzBweDtcclxuXHJcbn1cclxuXHJcbi8vIC5zbGljay1zbGlkZXIge1xyXG4vLyAgIG1hcmdpbjogMDtcclxuLy8gICBwYWRkaW5nOiAwO1xyXG4vLyAgICYgZGl2IHtcclxuLy8gICAgIG1hcmdpbjogMDtcclxuLy8gICAgIHBhZGRpbmc6IDA7XHJcbi8vICAgfVxyXG4vLyB9XHJcblxyXG4uY29sbGVjdGlvbl9faXRlbSB7XHJcbiAgLy8gJjpub3QobGFzdC1jaGlsZCl7XHJcbiAgLy8gbWFyZ2luLXJpZ2h0OiAzMHB4O1xyXG4gIHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gIC8vIH1cclxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluO1xyXG5cclxuICAmOmhvdmVyIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcclxuICB9XHJcbn1cclxuXHJcbi5jb2xsZWN0aW9uX19jYXJkIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5jb2xsZWN0aW9uX19saW5rIHtcclxuICAvLyBwb3NpdGlvbjogYWJzb2x1dGU7XHJcblxyXG59XHJcblxyXG4uY29sbGVjdGlvbl9faW5mbyB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOWU7XHJcbiAgbGVmdDogMDtcclxuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIG9wYWNpdHk6IDA7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbjtcclxuXHJcbiAgJjpob3ZlciB7XHJcbiAgICAmIHNwYW4ge1xyXG4gICAgICBjb2xvcjogIzAwMDtcclxuICAgIH1cclxuXHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbi5jb2xsZWN0aW9uX19pbWcge1xyXG4gIC8vIG1heC13aWR0aDogMzUwcHg7XHJcbiAgLy8gbWluLWhlaWdodDogMzUwcHg7XHJcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcclxufVxyXG5cclxuLmNvbGxlY3Rpb25fX3RpdGxlIHtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDE5cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTlweDtcclxuXHJcbiAgJjo6YWZ0ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzk3OTc5NztcclxuICAgIGhlaWdodDogMnB4O1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICB9XHJcbn1cclxuXHJcbi5jb2xsZWN0aW9uX190ZXh0IHtcclxuICBjb2xvcjogIzcwNzA3MDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG5cclxuICAmIHNwYW4ge1xyXG4gICAgcGFkZGluZy1sZWZ0OiA2cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbjtcclxuXHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICBjb250ZW50OiAnJztcclxuICAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHdpZHRoOiAxcHg7XHJcbiAgICAgIGhlaWdodDogNjAlO1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGV4dC1jb2xvcjtcclxuICAgICAgdG9wOiA1MCU7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuLy8gLmZ1cm5pdHVyZSB7XHJcbi8vICAgcGFkZGluZy10b3A6IDUwcHg7XHJcbi8vICAgbWFyZ2luLWJvdHRvbTogMTA0cHg7XHJcbi8vIH1cclxuLy8gLmZ1cm5pdHVyZV9fY29udGFpbmVyIHtcclxuLy8gICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbi8vIH1cclxuLy8gLmZ1cm5pdHVyZV9fdGl0bGUge1xyXG4vLyAgIHBhZGRpbmctYm90dG9tOiAyNXB4O1xyXG4vLyAgIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbi8vICAgJjo6YWZ0ZXIge1xyXG4vLyAgICAgd2lkdGg6IDIwMHB4O1xyXG4vLyAgICAgYmFja2dyb3VuZC1jb2xvcjogJGgxLWNvbG9yO1xyXG4vLyAgIH1cclxuLy8gfVxyXG4vLyAuZnVybml0dXJlX19kZXNjciB7XHJcbi8vICAgbWF4LXdpZHRoOiA3MzBweDtcclxuLy8gICBwYWRkaW5nLWJvdHRvbTogMjdweDtcclxuLy8gICBtYXJnaW46IDAgYXV0bztcclxuLy8gfSIsIi8vIC5hZXN0aGV0aWMge1xyXG5cclxuLy8gICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAyMDB2dyAjZmZmZmZmOGU7XHJcbi8vICAgbWFyZ2luLWJvdHRvbTogNzlweDtcclxuLy8gfVxyXG4vLyAuYWVzdGhldGljX19jb250YWluZXIge1xyXG4vLyAgIHBhZGRpbmctdG9wOiAxNzJweDtcclxuLy8gICBwYWRkaW5nLWJvdHRvbTogMTU2cHg7XHJcbi8vIH1cclxuLy8gLmFlc3RoZXRpY19fdGl0bGUge1xyXG4vLyAgIGNvbG9yOiAjMzYzODM4O1xyXG4vLyAgIG1hcmdpbi1ib3R0b206IDIxcHg7XHJcbi8vIH1cclxuLy8gLmFlc3RoZXRpY19fdGl0bGUtc3BhbiB7XHJcbi8vICAgZGlzcGxheTogYmxvY2s7XHJcbi8vICAgcGFkZGluZy1ib3R0b206IDIycHg7XHJcbi8vIH1cclxuLy8gLmFlc3RoZXRpY19fc3VtbWFyeSB7XHJcbi8vICAgbWF4LXdpZHRoOiA1NDBweDtcclxuLy8gICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4vLyB9XHJcblxyXG5cclxuLmFlc3RoZXRpYyB7XHJcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMjAwdncgI2ZmZmZmZjhlO1xyXG4gIC8vIG1hcmdpbi1ib3R0b206IDgwcHg7XHJcbiAgcGFkZGluZy10b3A6IDE3MnB4O1xyXG4gIHBhZGRpbmctYm90dG9tOiAxNTZweDtcclxuXHJcbn1cclxuLmFlc3RoZXRpY19fY29udGFpbmVyIHtcclxuICAvLyBtYXgtd2lkdGg6IDczMXB4O1xyXG59XHJcbi5hZXN0aGV0aWNfX3RpdGxlIHtcclxuICBmb250LXNpemU6IDYwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICBwYWRkaW5nLWJvdHRvbTogMjdweDtcclxuICBtYXJnaW4tYm90dG9tOiAyMXB4O1xyXG59XHJcbi5hZXN0aGV0aWNfX3N1bW1hcnkge1xyXG4gIG1heC13aWR0aDogNTQwcHg7XHJcbn0iLCIud29ya3MtcGF0aCB7XHJcbiAgcGFkZGluZy10b3A6IDU5cHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDEwOXB4O1xyXG59XHJcbi53b3Jrcy1wYXRoX190aXRsZSB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMzZweDtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGxpbmUtaGVpZ2h0OiA1MXB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDE5cHg7XHJcbn1cclxuXHJcbi53b3Jrcy1wYXRoX19pdGVtcyB7XHJcbn1cclxuLndvcmtzLXBhdGhfX2l0ZW1zLWJveCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMzNjM4Mzg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICY6OmJlZm9yZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGJvdHRvbTogLTZweDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTBweDtcclxuICAgIGhlaWdodDogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNjM4Mzg7XHJcbiAgfVxyXG59XHJcbi53b3Jrcy1wYXRoX19pdGVtIHtcclxuICB3aWR0aDogMjUwcHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gICYtLXByb2Qge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMxN3B4O1xyXG4gICAgLy8gbWFyZ2luLWJvdHRvbTogYXV0bztcclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBjb250ZW50OiAnJztcclxuICAgICAgd2lkdGg6IDJweDtcclxuICAgICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzYzODM4O1xyXG4gICAgICBib3R0b206IDA7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICB9XHJcbiAgfVxyXG4gICYtLXByb2QsXHJcbiAgJi0tY29ucyB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMzhweDtcclxuICB9XHJcbiAgJi0tdGhlcnQge1xyXG4gICAgcGFkZGluZy10b3A6IDM4cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMzA1cHg7XHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICBjb250ZW50OiAnJztcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDA7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICAgIHdpZHRoOiAycHg7XHJcbiAgICAgIGhlaWdodDogMjBweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzM2MzgzODtcclxuICAgIH1cclxuICB9XHJcbiAgJjpudGgtY2hpbGQoMykge1xyXG4gIH1cclxufVxyXG4ud29ya3MtcGF0aF9faXRlbS1pbWcge1xyXG59XHJcbi53b3Jrcy1wYXRoX19pdGVtLXRpdGxlIHtcclxuICBtYXJnaW4tbGVmdDogMTNweDtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBsaW5lLWhlaWdodDogMjNweDtcclxufVxyXG4ud29ya3MtcGF0aF9faXRlbS10ZXh0IHtcclxuICBtYXJnaW4tdG9wOiAxM3B4O1xyXG59XHJcbiIsIi5nYWxsZXJ5IHtcclxuICBwYWRkaW5nOiAwcHggMCA5MHB4O1xyXG59XHJcblxyXG4uZ2FsbGVyeV9fZmlsdGVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbn1cclxuXHJcbi5nYWxsZXJ5X19maWx0ZXItaXRlbSB7XHJcbiAgbWFyZ2luOiAwIDEzcHg7XHJcblxyXG4gICY6bm90KGxhc3QtY2hpbGQpIHtcclxuICAgIC8vIG1hcmdpbi1yaWdodDogMjVweDtcclxuICB9XHJcbn1cclxuXHJcbi5nYWxsZXJ5X19maWx0ZXItYnRuIHtcclxuICBwYWRkaW5nOiA2cHggMTZweDtcclxufVxyXG5cclxuLy8qKioqKioqKioqKioqKiFTRUNUSU9OXHJcbi5nYWxsZXJ5X19pdGVtcyB7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg3LCAxZnIpO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XHJcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAzNHB4O1xyXG4gIGdyaWQtcm93LWdhcDogMzBweDtcclxufVxyXG5cclxuLmdhbGxlcnlfX2l0ZW0ge1xyXG5cclxuXHJcblxyXG4gICY6bnRoLWNoaWxkKDEpIHtcclxuICAgIGdyaWQtY29sdW1uOiBzcGFuIDMgLyBzcGFuIDM7XHJcbiAgICBncmlkLXJvdzogc3BhbiAyIC8gc3BhbiAyO1xyXG4gIH1cclxuXHJcbiAgJjpudGgtY2hpbGQoMikge1xyXG4gICAgZ3JpZC1jb2x1bW46IHNwYW4gMiAvIHNwYW4gMjtcclxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiA0O1xyXG4gIH1cclxuXHJcblxyXG4gICY6bnRoLWNoaWxkKDMpIHtcclxuICAgIGdyaWQtY29sdW1uOiBzcGFuIDIgLyBzcGFuIDI7XHJcbiAgICBncmlkLWNvbHVtbi1zdGFydDogNjtcclxuXHJcbiAgfVxyXG5cclxuICAmOm50aC1jaGlsZCg0KSB7XHJcbiAgICBncmlkLWNvbHVtbjogc3BhbiAyIC8gc3BhbiAyO1xyXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDQ7XHJcbiAgICBncmlkLXJvdy1zdGFydDogMjtcclxuXHJcbiAgfVxyXG5cclxuICAmOm50aC1jaGlsZCg1KSB7XHJcbiAgICBncmlkLWNvbHVtbjogc3BhbiAyIC8gc3BhbiAyO1xyXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDY7XHJcbiAgICBncmlkLXJvdy1zdGFydDogMjtcclxuICAgIC8vXHJcbiAgfVxyXG59XHJcblxyXG4uZ2FsbGVyeV9faXRlbSB7XHJcbiAgLy8gZGlzcGxheTogZmxleDtcclxuICAvLyBhbGlnbi1pdGVtczogc3RyZXRjaDtcclxuICAvLyBoZWlnaHQ6IDEwMCU7XHJcbiAgLy8gd2lkdGg6IDEwMCU7XHJcblxyXG4gIHBpY3R1cmUge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIC8vIG1heC1oZWlnaHQ6IDExNTBweDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4gIHBpY3R1cmUgaW1nIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICB9XHJcbn1cclxuXHJcbi8vIC5nYWxsZXJ5X19pbWctZnJvbnQge1xyXG4vLyAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbi8vICAgICAvLyB3aWR0aDogYXV0bztcclxuLy8gICAgIGhlaWdodDogMTAwJTtcclxuLy8gICAgICAgd2lkdGg6IDEwMCU7XHJcbi8vICAgICAgIC8vIGhlaWdodDogMTAwJTtcclxuLy8gICAgICAgLy8gbWF4LWhlaWdodDogMTE0OHB4O1xyXG4vLyAgICAgICBwaWN0dXJlIHtcclxuLy8gICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuLy8gICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4vLyAgICAgICAgICAgLyog0LXRgdC70Lgg0YXQvtGH0LXRiNGMLCDRh9GC0L7QsdGLINC+0L0g0LfQsNC90LjQvNCw0Lsg0LLRgdGOINGI0LjRgNC40L3RgyDRgtC+0LbQtSAqL1xyXG4vLyAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbi8vICAgICAgICAgICAvKiDQv9GA0Lgg0L3QtdC+0LHRhdC+0LTQuNC80L7RgdGC0LggKi9cclxuLy8gICAgICAgICB9XHJcbi8vICAgICAgICAgICAgICAgICBwaWN0dXJlIGltZyB7XHJcbi8vICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuLy8gICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbi8vICAgICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4vLyAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuLy8gICAgICAgICAgICAgICAgIH1cclxuLy8gfVxyXG5cclxuLmdhbGxlcnlfX2ltZyB7XHJcbiAgLy8gaGVpZ2h0OiAxMDAlO1xyXG4gIC8vICAgd2lkdGg6IDEwMCU7XHJcbiAgLy8gICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAvLyAgIGRpc3BsYXk6IGJsb2NrO1xyXG5cclxuICAvLyAvLyBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAvLyB3aWR0aDogMTAwJTtcclxuICAvLyAvLyBoZWlnaHQ6IDEwMCU7XHJcbiAgLy8gICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAvLyAgICAgLy8gd2lkdGg6IGF1dG87XHJcbiAgLy8gICAgIGhlaWdodDogMTAwJTtcclxuICAvLyBwaWN0dXJlIHtcclxuICAvLyAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIC8vICAgaGVpZ2h0OiAxMDAlO1xyXG4gIC8vICAgd2lkdGg6IDEwMCU7XHJcbiAgLy8gICAvKiDQtdGB0LvQuCDRhdC+0YfQtdGI0YwsINGH0YLQvtCx0Ysg0L7QvSDQt9Cw0L3QuNC80LDQuyDQstGB0Y4g0YjQuNGA0LjQvdGDINGC0L7QttC1ICovXHJcbiAgLy8gICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAvLyAgIC8qINC/0YDQuCDQvdC10L7QsdGF0L7QtNC40LzQvtGB0YLQuCAqL1xyXG4gIC8vIH1cclxuXHJcbiAgLy8gcGljdHVyZSBpbWcge1xyXG4gIC8vICAgaGVpZ2h0OiAxMDAlO1xyXG4gIC8vICAgd2lkdGg6IDEwMCU7XHJcbiAgLy8gICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAvLyAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIC8vIH1cclxuXHJcbiAgLy8gb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgLy8gd2lkdGg6IDEwMCU7XHJcbiAgLy8gbWF4LWhlaWdodDogMTE1MHB4O1xyXG4gIC8vIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLy8gLnBhcmVudCB7XHJcbi8vICAgZGlzcGxheTogZ3JpZDtcclxuLy8gICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg3LCAxZnIpO1xyXG4vLyAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDQsIDFmcik7XHJcbi8vICAgZ2FwOiA4cHg7XHJcbi8vIH1cclxuXHJcbi8vIC5kaXYxIHtcclxuLy8gICBncmlkLWNvbHVtbjogc3BhbiAzIC8gc3BhbiAzO1xyXG4vLyAgIGdyaWQtcm93OiBzcGFuIDIgLyBzcGFuIDI7XHJcbi8vIH1cclxuXHJcbi8vIC5kaXYyIHtcclxuLy8gICBncmlkLWNvbHVtbjogc3BhbiAyIC8gc3BhbiAyO1xyXG4vLyAgIGdyaWQtY29sdW1uLXN0YXJ0OiA0O1xyXG4vLyB9XHJcblxyXG4vLyAuZGl2MyB7XHJcbi8vICAgZ3JpZC1jb2x1bW46IHNwYW4gMiAvIHNwYW4gMjtcclxuLy8gICBncmlkLWNvbHVtbi1zdGFydDogNjtcclxuLy8gfVxyXG5cclxuLy8gLmRpdjQge1xyXG4vLyAgIGdyaWQtY29sdW1uOiBzcGFuIDIgLyBzcGFuIDI7XHJcbi8vICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDQ7XHJcbi8vICAgZ3JpZC1yb3ctc3RhcnQ6IDI7XHJcbi8vIH1cclxuXHJcbi8vIC5kaXY1IHtcclxuLy8gICBncmlkLWNvbHVtbjogc3BhbiAyIC8gc3BhbiAyO1xyXG4vLyAgIGdyaWQtY29sdW1uLXN0YXJ0OiA2O1xyXG4vLyAgIGdyaWQtcm93LXN0YXJ0OiAyO1xyXG4vLyB9XHJcblxyXG4vLyAuZGl2NiB7XHJcbi8vICAgZ3JpZC1jb2x1bW46IHNwYW4gMiAvIHNwYW4gMjtcclxuLy8gICBncmlkLXJvdy1zdGFydDogMztcclxuLy8gfVxyXG5cclxuLy8gLmRpdjcge1xyXG4vLyAgIGdyaWQtY29sdW1uOiBzcGFuIDIgLyBzcGFuIDI7XHJcbi8vICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDM7XHJcbi8vICAgZ3JpZC1yb3ctc3RhcnQ6IDM7XHJcbi8vIH1cclxuXHJcbi8vIC5kaXY4IHtcclxuLy8gICBncmlkLWNvbHVtbjogc3BhbiAyIC8gc3BhbiAyO1xyXG4vLyAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xyXG4vLyAgIGdyaWQtcm93LXN0YXJ0OiA0O1xyXG4vLyB9XHJcblxyXG4vLyAuZGl2OSB7XHJcbi8vICAgZ3JpZC1jb2x1bW46IHNwYW4gMiAvIHNwYW4gMjtcclxuLy8gICBncmlkLWNvbHVtbi1zdGFydDogMztcclxuLy8gICBncmlkLXJvdy1zdGFydDogNDtcclxuLy8gfVxyXG5cclxuLy8gLmRpdjEwIHtcclxuLy8gICBncmlkLWNvbHVtbjogc3BhbiAzIC8gc3BhbiAzO1xyXG4vLyAgIGdyaWQtcm93OiBzcGFuIDIgLyBzcGFuIDI7XHJcbi8vICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDU7XHJcbi8vICAgZ3JpZC1yb3ctc3RhcnQ6IDM7XHJcbi8vIH1cclxuXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKiohU0VDVElPTiBnYWxsZXJ5LXBhZ2VcclxuXHJcblxyXG4uZ2FsbGVyeS1wYWdlIHtcclxuICBwYWRkaW5nLXRvcDogMTM5cHg7XHJcbiAgLy9tYXJnaW4tdG9wOiAxMzlweDtcclxufVxyXG5cclxuLmdhbGxlcnkge1xyXG5cclxuICAmLmdhbGxlcnktcGFnZSB7XHJcblxyXG4gICAgLmdhbGxlcnlfX2l0ZW06bnRoLWNoaWxkKDYpIHtcclxuICAgICAgZ3JpZC1jb2x1bW46IHNwYW4gMiAvIHNwYW4gMjtcclxuICAgICAgZ3JpZC1yb3ctc3RhcnQ6IDM7XHJcbiAgICB9XHJcblxyXG4gICAgLmdhbGxlcnlfX2l0ZW06bnRoLWNoaWxkKDcpIHtcclxuICAgICAgZ3JpZC1jb2x1bW46IHNwYW4gMiAvIHNwYW4gMjtcclxuICAgICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDM7XHJcbiAgICAgIGdyaWQtcm93LXN0YXJ0OiAzO1xyXG4gICAgfVxyXG5cclxuICAgIC5nYWxsZXJ5X19pdGVtOm50aC1jaGlsZCg4KSB7XHJcbiAgICAgIGdyaWQtY29sdW1uOiBzcGFuIDMgLyBzcGFuIDM7XHJcbiAgICAgIGdyaWQtcm93OiBzcGFuIDIgLyBzcGFuIDI7XHJcbiAgICAgIGdyaWQtY29sdW1uLXN0YXJ0OiA1O1xyXG4gICAgICBncmlkLXJvdy1zdGFydDogMztcclxuICAgIH1cclxuXHJcbiAgICAuZ2FsbGVyeV9faXRlbTpudGgtY2hpbGQoOSkge1xyXG4gICAgICBncmlkLWNvbHVtbjogc3BhbiAyIC8gc3BhbiAyO1xyXG4gICAgICBncmlkLXJvdy1zdGFydDogNDtcclxuICAgIH1cclxuXHJcbiAgICAuZ2FsbGVyeV9faXRlbTpudGgtY2hpbGQoMTApIHtcclxuICAgICAgZ3JpZC1jb2x1bW46IHNwYW4gMiAvIHNwYW4gMjtcclxuICAgICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDM7XHJcbiAgICAgIGdyaWQtcm93LXN0YXJ0OiA0O1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuLy/Qs9GA0LjQtNGLXHJcblxyXG4vL9C90LDRgdGC0YDQvtC50LrQuFxyXG4ucGFyZW50IHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMiwgMWZyKTtcclxuICBncmlkLWdhcDogMzBweCAzNXB4O1xyXG5cclxuICAmX19pdGVtIHtcclxuICAgIGdyaWQtY29sdW1uOiBzcGFuIDI7XHJcbiAgICBncmlkLXJvdzogc3BhbiAyO1xyXG4gIH1cclxuXHJcbiAgJi5wYXJlbnQtcGFnZSB7XHJcbiAgICAucGFyZW50X19pdGVtOm50aC1jaGlsZCg4KSB7XHJcbiAgICAgIGdyaWQtY29sdW1uOiBzcGFuIDI7XHJcbiAgICAgIGdyaWQtcm93OiBzcGFuIDI7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiQHVzZSAnLi4vYmFzZS92YXInIGFzICo7XHJcbkB1c2UgJy4uL2Jhc2UvZm9udC1taXhpbicgYXMgKjtcclxuXHJcbi8vIC5tb3JlIHtcclxuLy8gICBtYXJnaW4tYm90dG9tOiA0NnB4O1xyXG4vLyB9XHJcbi8vIC5tb3JlX190aXRsZSB7XHJcbi8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4vLyAgIEBpbmNsdWRlIGZvbnQtbWVkaWEoMzYsIDI1KTtcclxuLy8gICBtYXJnaW4tYm90dG9tOiAyOXB4O1xyXG4vLyAgICYgc3BhbiB7XHJcbi8vICAgICBkaXNwbGF5OiBibG9jaztcclxuLy8gICB9XHJcbi8vIH1cclxuLy8gLm1vcmVfX2JveCB7XHJcblxyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4vLyB9XHJcbi8vIC5tb3JlX19ib3gtaXRlbSB7XHJcbi8vICAgbWF4LXdpZHRoOiA1NTBweDtcclxuXHJcbi8vICAgJjpudGgtY2hpbGQoMSkge1xyXG4vLyAgICAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xyXG4vLyAgIH1cclxuLy8gfVxyXG5cclxuLy8gLm1vcmVfX2JveC1saW5rIHtcclxuLy8gICBkaXNwbGF5OiBibG9jaztcclxuLy8gICB3aWR0aDogMTAwJTtcclxuLy8gfVxyXG5cclxuLy8gLm1vcmVfX2JveC1pbWcge1xyXG4vLyAgIHdpZHRoOiAxMDAlO1xyXG4vLyAgIGhlaWdodDogMzA3cHg7XHJcbi8vICAgb2JqZWN0LWZpdDogY292ZXI7IC8vINCh0L7RhdGA0LDQvdGP0LXRgiDQv9GA0L7Qv9C+0YDRhtC40LgsINC+0LHRgNC10LfQsNGPINC70LjRiNC90LXQtVxyXG4vLyAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbi8vICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbjtcclxuLy8gICAmOmhvdmVyIHtcclxuLy8gICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcclxuLy8gICB9XHJcbi8vIH1cclxuLy8gLm1vcmVfX2luZm8ge1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuLy8gICBtYXJnaW4tYm90dG9tOiA3cHg7XHJcbi8vIH1cclxuLy8gLm1vcmVfX2luZm8taXRlbSB7XHJcbi8vICAgQGluY2x1ZGUgZm9udC1tZWRpYSgxNCwgMTIpO1xyXG4vLyAgIEBpbmNsdWRlIGxpbmUtaGVpZ2h0KDE0LCAyOCk7XHJcbi8vICAgZGlzcGxheTogZmxleDtcclxuLy8gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuLy8gICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4vLyAgICY6bm90KDpsYXN0LWNoaWxkKSB7XHJcbi8vICAgICBwYWRkaW5nLXJpZ2h0OiA3cHg7XHJcbi8vICAgICAmOjphZnRlciB7XHJcbi8vICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4vLyAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGV4dC1jb2xvcjtcclxuLy8gICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4vLyAgICAgICB3aWR0aDogMXB4O1xyXG4vLyAgICAgICByaWdodDogMDtcclxuLy8gICAgICAgaGVpZ2h0OiA1MCU7XHJcbi8vICAgICB9XHJcbi8vICAgfVxyXG4vLyAgICY6bm90KDpmaXJzdC1jaGlsZCkge1xyXG4vLyAgICAgcGFkZGluZy1sZWZ0OiA3cHg7XHJcbi8vICAgfVxyXG4vLyB9XHJcbi8vIC5tb3JlX19pbmZvLWxpbmstYXV0aG9yLFxyXG4vLyAubW9yZV9faW5mby1saW5rLWNhdGVnb3J5IHtcclxuLy8gICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluO1xyXG4vLyAgICY6aG92ZXIge1xyXG4vLyAgICAgY29sb3I6ICMwMDA7XHJcbi8vICAgfVxyXG4vLyB9XHJcbi8vIC5tb3JlX19ib3gtZGVzY3Ige1xyXG4vLyAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbi8vICAgQGluY2x1ZGUgZm9udC1tZWRpYSgyNCwgMTYpO1xyXG4vLyAgIEBpbmNsdWRlIGxpbmUtaGVpZ2h0KDI0LCAzOCk7XHJcbi8vICAgbWF4LXdpZHRoOiA1NDBweDtcclxuLy8gICB3aWR0aDogMTAwJTtcclxuLy8gICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4vLyAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW47XHJcbi8vICAgJjpob3ZlciB7XHJcbi8vICAgICBjb2xvcjogJGgxLWNvbG9yO1xyXG4vLyAgIH1cclxuLy8gfVxyXG5cclxuXHJcbi5ibG9nLWJveCB7XHJcbiAgcGFkZGluZy1ib3R0b206IDEwMHB4O1xyXG59XHJcblxyXG4uYmxvZy1ib3hfX3RpdGxlIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWF4LXdpZHRoOiA0MzBweDtcclxuICBtYXJnaW46IDAgYXV0byAzMHB4O1xyXG59XHJcblxyXG5cclxuLmJsb2ctYm94X19pdGVtcyB7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgZ3JpZC1nYXA6IDMwcHg7XHJcbn1cclxuXHJcbi5ibG9nLWJveF9faXRlbSB7fVxyXG5cclxuLmJsb2ctYm94X19pbWctbGluayB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbjtcclxuXHJcbiAgJjpob3ZlciB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XHJcbiAgfVxyXG59XHJcblxyXG4uYmxvZy1ib3hfX2ltZyB7fVxyXG5cclxuLmJsb2ctYm94X19saW5rcyB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIGNvbG9yOiAjNzA3MDcwO1xyXG4gIG1hcmdpbi1ib3R0b206IDlweDtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG59XHJcblxyXG4uYmxvZy1ib3hfX2RhdGUge1xyXG4gIHBhZGRpbmctcmlnaHQ6IDdweDtcclxufVxyXG5cclxuLmJsb2ctYm94X19kYXRlLFxyXG4uYmxvZy1ib3hfX2F1dGhvciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAmOjphZnRlciB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM3MDcwNzA7XHJcbiAgICB3aWR0aDogMXB4O1xyXG4gICAgaGVpZ2h0OiA4MCU7XHJcbiAgICByaWdodDogMDtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbi5ibG9nLWJveF9fYXV0aG9yIHtcclxuICBwYWRkaW5nLWxlZnQ6IDdweDtcclxuICBwYWRkaW5nLXJpZ2h0OiA3cHg7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4uYmxvZy1ib3hfX3RoZW1hIHtcclxuICBwYWRkaW5nLWxlZnQ6IDdweDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi5ibG9nLWJveF9fYXV0aG9yLFxyXG4uYmxvZy1ib3hfX3RoZW1hIHtcclxuICAmOmhvdmVyIHtcclxuICAgIGNvbG9yOiAjMDAwO1xyXG4gIH1cclxufVxyXG5cclxuLmJsb2ctYm94X19pdGVtLWxpbmsge1xyXG4gIGZvbnQtc2l6ZTogMjRweDtcclxufVxyXG5cclxuLmJsb2ctYm94X19pdGVtLWRlc2NyIHtcclxuICBmb250LXNpemU6IDI0cHg7XHJcbiAgY29sb3I6ICMzNjM4Mzg7XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICMwMDA7XHJcbiAgfVxyXG59IiwiQHVzZSAnLi4vYmFzZS92YXInIGFzICo7XHJcbkB1c2UgJy4uL2Jhc2UvZm9udC1taXhpbicgYXMgKjtcclxuXHJcblxyXG5cclxuLmJyZWFkY3J1bWJzIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RmZGZkZjg2O1xyXG4gIHBhZGRpbmc6IDEzcHggMTRweDtcclxufVxyXG5cclxuLmJyZWFkY3J1bWJzX19saXN0IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4uYnJlYWRjcnVtYnNfX2l0ZW0ge1xyXG4gICY6bm90KDpmaXJzdC1jaGlsZCkge1xyXG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcbiAgfVxyXG5cclxuICAmOm5vdCg6bGFzdC1jaGlsZCkge1xyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICBjb250ZW50OiAnLyc7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmOmhvdmVyIHtcclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgY29sb3I6ICRoMS1jb2xvcjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5icmVhZGNydW1ic19fbGluayB7XHJcbiAgJjpob3ZlciB7XHJcbiAgICBjb2xvcjogJGgxLWNvbG9yO1xyXG4gIH1cclxuXHJcbn0iLCJAdXNlICcuLi9iYXNlL3ZhcicgYXMgKjtcclxuQHVzZSAnLi4vYmFzZS9saWInIGFzICo7XHJcblxyXG5cclxuXHJcblxyXG4uYWJvdXQge1xyXG4gIC8vIHBhZGRpbmctYm90dG9tOiA5OHB4O1xyXG59XHJcblxyXG4uYWJvdXRfX3ByZXYge1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvYmcvYWJvdXQtYmcuanBnKTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcCBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogMTYwcHggMDtcclxuICBtYXJnaW4tYm90dG9tOiAzMXB4O1xyXG5cclxufVxyXG5cclxuLmFib3V0X190aXRsZSB7XHJcbiAgY29sb3I6ICMzNjM4Mzg7XHJcbiAgZm9udC1zaXplOiA2MHB4O1xyXG59XHJcblxyXG5cclxuXHJcbi5hYm91dF9faW5mbyB7XHJcbiAgcGFkZGluZzogOThweCAwIDQwcHg7XHJcblxyXG59XHJcblxyXG5cclxuXHJcbi5hYm91dF9faW5mby10aXRsZSB7XHJcbiAgbWF4LXdpZHRoOiA4MjJweDtcclxuICBmb250LXNpemU6IDM2cHg7XHJcbiAgY29sb3I6ICMzNjM4Mzg7XHJcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjNweDtcclxufVxyXG5cclxuXHJcblxyXG4uYWJvdXRfX2luZm8tdGV4dCB7XHJcbiAganVzdGlmeS1jb250ZW50OiBlbmQ7XHJcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxuICBwYWRkaW5nLWxlZnQ6IDI4NHB4O1xyXG59XHJcblxyXG4uYWJvdXRfX3ZpZGVvIHtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2JnL3ZpZGVvLWJnLmpwZWcpO1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wIGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIG1pbi1oZWlnaHQ6IDQxNHB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuXHJcbi5hYm91dF9fdmlkZW8tcGxheSB7XHJcbiAgd2lkdGg6IDgwcHg7XHJcbiAgaGVpZ2h0OiA4MHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzNjM4Mzg2NjtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluO1xyXG5cclxuICAmOjpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL3N2Zy9wbGF5LnN2Zyk7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgfVxyXG5cclxuICAmOmhvdmVyIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4zKTtcclxuICB9XHJcbn0iLCIubWV0cmljcyB7XHJcbiAgbWFyZ2luLXRvcDogNTRweDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuXHJcbiAgJjo6YWZ0ZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGhlaWdodDogNTE0cHg7XHJcbiAgICB6LWluZGV4OiAtMTtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvYmcvaGVyby1iZy5qcGcpO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IHRvcCBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIH1cclxufVxyXG5cclxuLm1ldHJpY3NfX2NvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLm1ldHJpY3NfX2NvbnRlbnQge1xyXG4gIHBhZGRpbmctbGVmdDogMjg0cHg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICY6OmJlZm9yZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBjb250ZW50OiB1cmwoLi4vLi4vaW1nL2hlcm8vaGVyby1pbWcud2VicCk7XHJcbiAgICB3aWR0aDogNDMzcHg7XHJcbiAgICBoZWlnaHQ6IDUwNnB4O1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgYm90dG9tOiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB9XHJcbn1cclxuXHJcbi5tZXRyaWNzX190aXRsZSB7XHJcbiAgZm9udC1zaXplOiAzNnB4O1xyXG4gIHBhZGRpbmctYm90dG9tOiAxNnB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbn1cclxuXHJcbi5tZXRyaWNzX190ZXh0IHtcclxuICBtYXgtd2lkdGg6IDgxMHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuXHJcbi5tZXRyaWNzX19saXN0IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW4tdG9wOiA3NXB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDc1cHg7XHJcbn1cclxuXHJcbi5tZXRyaWNzX19pdGVtIHtcclxuICAmOm5vdCg6bGFzdC1jaGlsZCkge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzNweDtcclxuICB9XHJcbn1cclxuXHJcbi5tZXRyaWNzX19pdGVtLXRleHQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGNvbG9yOiAjMzYzODM4O1xyXG4gIG1hcmdpbi1ib3R0b206IDE0cHg7XHJcbn1cclxuXHJcbi5tZXRyaWNzX19saW5lIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDJweDtcclxuICBib3JkZXItcmFkaXVzOiAyMXB4O1xyXG5cclxuICAmOjotd2Via2l0LW1ldGVyLWJhciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgaGVpZ2h0OiAycHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIH1cclxuXHJcbiAgJjo6LXdlYmtpdC1tZXRlci1vcHRpbXVtLXZhbHVlIHtcclxuICAgIGJhY2tncm91bmQ6ICMzNjM4Mzg7XHJcbiAgfVxyXG5cclxuICAmOjotd2Via2l0LW1ldGVyLXN1Ym9wdGltdW0tdmFsdWUge1xyXG4gICAgYmFja2dyb3VuZDogIzM2MzgzODtcclxuICB9XHJcblxyXG4gICY6Oi13ZWJraXQtbWV0ZXItZXZlbi1sZXNzLWdvb2QtdmFsdWUge1xyXG4gICAgYmFja2dyb3VuZDogIzM2MzgzODtcclxuICB9XHJcbn1cclxuIiwiQHVzZSAnLi4vYmFzZS92YXInIGFzICo7XHJcbkB1c2UgJy4uL2Jhc2UvZm9udC1taXhpbicgYXMgKjtcclxuLnBhcnRuZXJzIHtcclxuICAvLyBtYXJnaW4tYm90dG9tOiA3MnB4O1xyXG59XHJcbi5wYXJ0bmVyc19fbGlzdCB7XHJcbiAgbWF4LXdpZHRoOiAxOTIwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgLy8gbWFyZ2luLWJvdHRvbTogNTRweDtcclxufVxyXG4ucGFydG5lcnNfX2l0ZW0ge1xyXG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XHJcbiAgJjpub3QoOmxhc3QtY2hpbGQpIHtcclxuICAgIG1hcmdpbi1yaWdodDogNjhweDtcclxuICB9XHJcbn1cclxuLnBhcnRuZXJzX19pY29uIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgb2JqZWN0LWZpdDogY292ZXI7XHJcbn1cclxuXHJcbi5wYXJ0bmVycyB7XHJcbiAgLy8gcGFkZGluZy1ib3R0b206IDcycHg7XHJcbn1cclxuXHJcbi5wYXJ0bmVyc19fbGlzdCB7XHJcbiAgLy8gbWFyZ2luLWJvdHRvbTogNDdweDtcclxuICBtYXJnaW4tcmlnaHQ6IDUwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDUwcHg7XHJcbiAgLy8gZGlzcGxheTogZ3JpZDtcclxuICAvLyBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg1LCAxZnIpO1xyXG4gIC8vIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZGlzcGxheTogZmxleDtcclxuXHJcbn1cclxuXHJcbi5wYXJ0bmVyc19faXRlbSB7XHJcbiAgLy8gd2lkdGg6IDEwMCU7XHJcbiAgLy8gaGVpZ2h0OiBhdXRvO1xyXG4gIC8vIG1heC13aWR0aDogMzE5cHg7XHJcblxyXG4gICY6bm90KDpsYXN0LWNoaWxkKSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDY4cHg7XHJcbiAgfVxyXG59XHJcblxyXG4ucGFydG5lcnNfX2ljb24ge1xyXG4gIC8vIHdpZHRoOiAzMTlweDsgLy8g0YTQuNC60YHQuNGA0L7QstCw0L3QvdGL0Lkg0YDQsNC30LzQtdGAINC/0L4g0LzQsNC60LXRgtGDXHJcbiAgLy8gaGVpZ2h0OiAzMjBweDtcclxuICAvLyBkaXNwbGF5OiBibG9jaztcclxuICBvYmplY3QtZml0OiBjb250YWluO1xyXG4gIC8vIHdpZHRoOiAxMDAlO1xyXG4gIC8vIGhlaWdodDogYXV0bztcclxuICAvLyBtYXgtd2lkdGg6IDMxOXB4O1xyXG4gIC8vIGRpc3BsYXk6IGJsb2NrO1xyXG5cclxuICAvLyAmIHVzZSB7XHJcbiAgLy8gICB3aWR0aDogMTAwJTtcclxuICAvLyAgIGhlaWdodDogYXV0bztcclxuICAvLyAgIG1heC13aWR0aDogMzE5cHg7XHJcbiAgLy8gICBkaXNwbGF5OiBibG9jaztcclxuICAvLyB9XHJcblxyXG4gIC8vIHdpZHRoOiAzMTlweDtcclxuICAvLyBoZWlnaHQ6IDMyMHB4O1xyXG4gIC8vIG9iamVjdC1maXQ6IGNvbnRhaW47XHJcbn1cclxuXHJcbi5wYXJ0bmVyc19fY29sbGVjdGlvbiB7XHJcbiAgbWFyZ2luLWJvdHRvbTogNzJweDtcclxufSJdfQ== */