@import url(https://fonts.googleapis.com/css?family=Open+Sans:300,regular,500,600,700,800,300italic,italic,500italic,600italic,700italic,800italic&display=swap);@import url(https://fonts.googleapis.com/css?family=Montserrat:100,200,300,regular,500,600,700,800,900,100italic,200italic,300italic,italic,500italic,600italic,700italic,800italic,900italic&display=swap);.footer__info-title{font-family:Monserat,sans-serif}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}img{max-width:100%;display:block}*,:after,:before{margin:0;border:0;padding:0}input,textarea{border-radius:0;outline:0}input,select,textarea{color:inherit;border:0}blockquote,dd,dl,figcaption,figure,h1,h2,h3,h4,h5,h6,li,p{margin:0;font-size:inherit}body,ol,ul{font-size:inherit}ol[class],ul[class]{list-style:none;padding:0}ol,picture,ul{padding:0;margin:0}picture{display:block;line-height:0}button,input,select,textarea{font:inherit}a,button{cursor:pointer;color:inherit}button{border:0;background-color:transparent}a{text-decoration:none;outline:0}body,html{height:100%;margin:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}main{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto}@font-face{font-family:Open Sans;src:url(../font/Open\ Sans-Regular.woff2) format("woff2"),url(../font/Open\ Sans-Regular.woff) format("woff");font-weight:400;font-display:swap;font-style:normal;font-stretch:normal;unicode-range:u+0020-2212}@font-face{font-family:Montserrat;src:url(../font/Montserrat-Bold.woff2) format("woff2"),url(../font/Montserrat-Bold.woff) format("woff");font-weight:700;font-display:swap;font-style:normal;font-stretch:normal;unicode-range:u+0020-2212}body{background-color:#fff;font-family:Open Sans,Helvetica,Arial,sans-serif;font-size:calc(14px + 2*(100vw - 340px)/1580);line-height:1.6875;font-weight:400;letter-spacing:0;color:#5a5a5a;overflow-x:hidden;min-width:320px}.container{max-width:1133px;width:100%;margin:0 auto}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);border:0}.bg-img{background-repeat:no-repeat;background-position:50%;background-size:cover}.title,.title-h2,.title-h3,.title-h4{font-family:Montserrat,sans-serif;font-weight:700;font-size:calc(50px + 60*(100vw - 340px)/1580);line-height:1.2181818182;letter-spacing:0;color:#363838}.title-h2,.title-h3,.title-h4{font-size:calc(34px + 26*(100vw - 340px)/1580);line-height:1.3333333333}.title-h3,.title-h4{font-size:calc(25px + 11*(100vw - 340px)/1580);line-height:1.4166666667}.title-h4{font-size:calc(16px + 4*(100vw - 340px)/1580);line-height:1.2}.title-line-center,.title-line-left{position:relative}.title-line-center:after{content:"";position:absolute;background-color:#979797;width:10px;height:1px;bottom:0;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.link--active:after,.title-line-left:after{content:"";position:absolute;width:200px;height:2px;bottom:0;left:0;border-radius:5px;background-color:#363838}.link,.link--active{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.link--active:hover,.link:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1);color:#363838}.link--active{position:relative;width:100%;height:100%}.link--active:after{background-color:#5a5a5a;width:100%;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.link--active:hover:after{background-color:#363838}.logo{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.logo__icon{height:32px}.burger,.input{background-color:transparent}.burger{width:37px;height:37px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border-radius:4px;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.burger:hover{-webkit-box-shadow:0 1px 4px 0 rgba(0,0,0,.8509803922);box-shadow:0 1px 4px 0 rgba(0,0,0,.8509803922);-webkit-transform:scale(1.2);-ms-transform:scale(1.2);transform:scale(1.2)}.input{border:2px solid #5a5a5a;border-radius:21px;line-height:1.75;color:#363838;-webkit-transition:border .3s ease-in-out;transition:border .3s ease-in-out}.input:focus,.input:hover{border-color:#000;color:#000}.input::-webkit-input-placeholder{-webkit-transition:color .2s;transition:color .2s}.input::-moz-placeholder{-moz-transition:color .2s;transition:color .2s}.input:-ms-input-placeholder{-ms-transition:color .2s;transition:color .2s}.input::-ms-input-placeholder{-ms-transition:color .2s;transition:color .2s}.input::placeholder{-webkit-transition:color .2s;transition:color .2s}.input:focus::-webkit-input-placeholder, .input:hover::-webkit-input-placeholder{color:#000}.input:focus::-moz-placeholder, .input:hover::-moz-placeholder{color:#000}.input:focus:-ms-input-placeholder, .input:hover:-ms-input-placeholder{color:#000}.input:focus::-ms-input-placeholder, .input:hover::-ms-input-placeholder{color:#000}.input:focus::placeholder,.input:hover::placeholder{color:#000}.btn{background-color:#363838;color:#fff;font-size:"Open Sans";border-radius:21px;font-weight:600;line-height:1.75;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border:1px solid #363838;-webkit-transition:background-color,color,.3s ease-out;transition:background-color,color,.3s ease-out;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.btn:hover{background-color:transparent;color:#363838}.btn:active{-webkit-transform:scale(.96);-ms-transform:scale(.96);transform:scale(.96)}.header__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-top:46px;padding-bottom:43px}.menu{padding-left:35px;padding-right:60px}.menu__list{display:-webkit-box;display:-ms-flexbox;display:flex}.menu__list-item:first-child{padding-right:80px}.menu__list-link{font-weight:700;font-size:calc(14px + 2*(100vw - 340px)/1580);line-height:1.375;font-family:Montserrat;padding-bottom:2px}.logo{margin:0 auto;width:97px;padding-bottom:3px}.header__btn,.header__btn-icon{width:37px;height:29px}.header__btn{background-color:transparent}.rightside-menu{z-index:20;position:absolute;right:0;top:0;bottom:0;max-width:694px;width:100%;background-color:#fff;padding-top:40px;-webkit-transition:-webkit-transform .2s ease-in;transition:-webkit-transform .2s ease-in;transition:transform .2s ease-in;transition:transform .2s ease-in, -webkit-transform .2s ease-in;-webkit-box-shadow:-2px 3px 17px 0 #000;box-shadow:-2px 3px 17px 0 #000}.rightside-menu--open~.overlay{z-index:10;opacity:1;pointer-events:auto}.rightside-menu--close{-webkit-transform:translateX(120%);-ms-transform:translateX(120%);transform:translateX(120%)}.overlay{position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.5);z-index:10;opacity:0;pointer-events:none;-webkit-transition:opacity .3s;transition:opacity .3s}.rightside-menu__btn-close{width:26px;height:26px;margin-left:50px;margin-bottom:60px}.rightside-menu__content{text-align:center;max-width:485px;margin:0 auto}.rightside-menu__logo{width:154px;height:58px;display:inline-block;margin-bottom:41px}.menu__title{font-size:36px;line-height:51px;padding-bottom:23px;margin-bottom:17px}.menu__title:after{width:252px}.menu__text{font-size:16px;margin-bottom:75px}.menu__image{max-width:485px}.footer{background-color:#dfdfdf}.footer__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:60px 0 80px}.footer__info{max-width:540px}.footer__info-title{margin-bottom:14px;font-weight:700;line-height:23px;color:#363838;font-size:14px}.footer__info-text{max-width:476px;margin-bottom:16px}.footer__info-email{font-weight:600;margin-bottom:22px;font-size:14px;padding-left:30px;display:inline-block;position:relative}.footer__form-icon{position:absolute;left:0;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.footer__form{display:-webkit-box;display:-ms-flexbox;display:flex}.footer__form-input{padding:6px 10px 6px 18px;border-radius:21px;background-color:transparent;border:1px solid rgba(54,56,56,.7);color:#000;width:100%}.footer__form-input::-webkit-input-placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-input::-moz-placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-input:-ms-input-placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-input::-ms-input-placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-input::placeholder{font-family:Open Sans,sans-serif;font-weight:400;line-height:22px;font-size:14px}.footer__form-btn{padding:6px 12px;min-width:160px;margin-left:9px}.footer__social{width:125px;margin-right:auto;margin-left:100px}.footer__menu{margin-right:60px;width:125px}.footer__social-item{color:#707070}.footer__menu-item,.footer__social-item{margin-bottom:15px;font-weight:600;font-size:14px}.list__social-link{color:#707070;padding-left:28px;position:relative}.footer__menu-link{color:#707070}.list__social-icon{position:absolute;display:block;left:0;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.footer__copy{text-align:center;background-color:#363838;color:#a1a1a1;padding:42px 15px 41px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */